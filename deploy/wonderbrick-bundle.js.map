{
  "version": 3,
  "sources": ["../node_modules/howler/dist/howler.js", "../node_modules/@wonderlandengine/api/wonderland.js", "../node_modules/@wonderlandengine/api/engine.js", "../node_modules/@wonderlandengine/components/8thwall-camera.js", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat3.js", "../node_modules/gl-matrix/esm/mat4.js", "../node_modules/gl-matrix/esm/quat.js", "../node_modules/gl-matrix/esm/vec3.js", "../node_modules/gl-matrix/esm/vec4.js", "../node_modules/gl-matrix/esm/quat2.js", "../node_modules/@wonderlandengine/components/cursor.js", "../node_modules/@wonderlandengine/components/debug-object.js", "../node_modules/@wonderlandengine/components/fixed-foveation.js", "../node_modules/@wonderlandengine/components/hand-tracking.js", "../node_modules/@wonderlandengine/components/howler-audio-listener.js", "../node_modules/@wonderlandengine/components/howler-audio-source.js", "../node_modules/@wonderlandengine/components/image-texture.js", "../node_modules/@wonderlandengine/components/mouse-look.js", "../node_modules/@wonderlandengine/components/player-height.js", "../node_modules/@wonderlandengine/components/target-framerate.js", "../node_modules/@wonderlandengine/components/teleport.js", "../node_modules/@wonderlandengine/components/trail.js", "../node_modules/@wonderlandengine/components/two-joint-ik-solver.js", "../node_modules/@wonderlandengine/components/video-texture.js", "../node_modules/@wonderlandengine/components/vr-mode-active-switch.js", "../node_modules/@wonderlandengine/components/vrm.js", "../node_modules/@wonderlandengine/components/wasd-controls.js", "../js/gameplay/prefabs/PrefabsRegistry.ts", "../js/utils/textures/TextureInformationRegistry.ts", "../js/lib/WlApi.ts", "../js/gameplay/grid/GridLayer.ts", "../js/gameplay/grid/Grid.ts", "../js/gameplay/grid/GridManager.ts", "../js/utils/TagUtils.ts", "../js/utils/TagComponent.ts", "../js/gameplay/prefabs/PrefabBase.ts", "../js/gameplay/prefabs/BlockPrefab.ts", "../js/gameplay/buildSystem/BuildController.ts", "../js/gameplay/buildSystem/BuildContainer.ts", "../js/gameplay/grid/GridDebugComponent.ts", "../js/gameplay/interactions/PointerRay.ts", "../js/gameplay/input/XrButton.ts", "../js/gameplay/input/XrGamepad.ts", "../js/ui/UiElementBase.ts", "../js/utils/materials/Color.ts", "../js/ui/UiButton.ts", "../js/sound/SoundSystem.ts", "../js/gameplay/interactions/XrController.ts", "../js/gameplay/prefabs/BlockSlopePrefab.ts", "../js/gameplay/prefabs/BlockStairPrefab.ts", "../js/gameplay/prefabs/BlockVerticalPrefab.ts", "../js/gameplay/prefabs/ConeCutPrefab.ts", "../js/gameplay/prefabs/ConePrefab.ts", "../js/gameplay/prefabs/CylinderPrefab.ts", "../js/gameplay/prefabs/PyramidCutPrefab.ts", "../js/gameplay/prefabs/PyramidPrefab.ts", "../js/gameplay/prefabs/SlabPrefab.ts", "../js/sound/SoundEmitterBase.ts", "../js/sound/soundEmitters/ClickSoundEmitter.ts", "../js/sound/soundEmitters/DestroySoundEmitter.ts", "../js/sound/soundEmitters/PlaceSoundEmitter.ts", "../js/sound/soundEmitters/RotateSoundEmitter.ts", "../js/ui/armMenu/BlockSelectionPanel.ts", "../js/ui/BlockSelectorInteractible.ts", "../js/utils/textures/TextureInformation.ts", "../js/ui/armMenu/TextureSelectionPanel.ts", "../js/ui/TextureSelectorInteractible.ts", "../js/utils/ObjectToggler.ts", "../js/ui/armMenu/ArmPanel.ts", "../js/ui/armMenu/MenuSelectionButton.ts", "../js/ui/armMenu/MenuController.ts", "../js/gameplay/serialization/SerializationUtils.ts", "../js/ui/saveMenu/SavePanel.ts"],
  "sourcesContent": ["/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, \u221E]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n", "/**\n * Types\n */\nimport { isString } from './utils/object.js';\nconst MISALIGNED_MSG = 'Misaligned pointer: please report a bug';\n/* Component properties to exclude when cloning, see addComponent() */\nconst EXCLUDED_COMPONENT_PROPERTIES = ['_id', '_manager', 'type', '_type', 'active'];\n/**\n * Wonderland Engine API\n * @namespace WL\n */\n/**\n * Component parameter type enum\n */\nexport var Type;\n(function (Type) {\n    /**\n     * **Bool**:\n     *\n     * Appears in the editor as a checkbox.\n     *\n     * Initial value is `false`, unless overridden by the `default` property.\n     */\n    Type[Type[\"Bool\"] = 2] = \"Bool\";\n    /**\n     * **Int**:\n     *\n     * Appears in the editor as an integer input field.\n     *\n     * Initial value is `0`, unless overridden by the `default` property.\n     */\n    Type[Type[\"Int\"] = 4] = \"Int\";\n    /**\n     * **Float**:\n     *\n     * Appears in the editor as a floating point input field.\n     *\n     * Initial value is `0.0`, unless overridden by the `default` property.\n     */\n    Type[Type[\"Float\"] = 8] = \"Float\";\n    /**\n     * **String / Text**:\n     *\n     * Appears in the editor as a single-line text input field.\n     *\n     * Initial value is an empty string, unless overridden by the `default`\n     * property.\n     */\n    Type[Type[\"String\"] = 16] = \"String\";\n    /**\n     * **Enumeration**:\n     *\n     * Appears in the editor as a dropdown with given values. The additional\n     * `values` parameter with selection options is mandatory.\n     *\n     * The property value is resolved to an **index** into the `values` array.\n     *\n     * Initial value is the first element in `values`, unless overridden by\n     * the `default` property.\n     *\n     * @example\n     *     camera: {type: Type.Enum, values: ['auto', 'back', 'front'], default: 'auto'},\n     */\n    Type[Type[\"Enum\"] = 32] = \"Enum\";\n    /**\n     * **Object reference**:\n     *\n     * Appears in the editor as an object resource selection dropdown\n     * with object picker.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Object\"] = 64] = \"Object\";\n    /**\n     * **Mesh reference**:\n     *\n     * Appears in the editor as a mesh resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Mesh\"] = 128] = \"Mesh\";\n    /**\n     * **Texture reference**:\n     *\n     * Appears in the editor as a texture resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Texture\"] = 256] = \"Texture\";\n    /**\n     * **Material reference**:\n     *\n     * Appears in the editor as a material resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Material\"] = 512] = \"Material\";\n    /**\n     * **Animation reference**:\n     *\n     * Appears in the editor as an animation resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Animation\"] = 1024] = \"Animation\";\n    /**\n     * **Skin reference**:\n     *\n     * Appears in the editor as a skin resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Skin\"] = 2048] = \"Skin\";\n    /**\n     * **Color**:\n     *\n     * Appears in the editor as a color widget.\n     *\n     * Initial value is `[0.0, 0.0, 0.0, 1.0]`, unless overridden by the\n     * `default` property.\n     */\n    Type[Type[\"Color\"] = 4096] = \"Color\";\n})(Type || (Type = {}));\n/**\n * Collider type enum for {@link CollisionComponent}.\n */\nexport var Collider;\n(function (Collider) {\n    /**\n     * **Sphere Collider**:\n     *\n     * Simplest and most performant collision shape. If this type is set on a\n     * {@link CollisionComponent}, only the first component of\n     * {@link CollisionComponent#extents} will be used to determine the radius.\n     */\n    Collider[Collider[\"Sphere\"] = 0] = \"Sphere\";\n    /**\n     * **Axis Aligned Bounding Box Collider**:\n     *\n     * Box that is always aligned to XYZ axis. It cannot be rotated but is more\n     * efficient than {@link Collider.Box}.\n     */\n    Collider[Collider[\"AxisAlignedBox\"] = 1] = \"AxisAlignedBox\";\n    /**\n     * **Aligned Bounding Box Collider**:\n     *\n     * Box that matches the object's rotation and translation correctly. This\n     * is the least efficient collider and should only be chosen over\n     * {@link Collider.Sphere} and {@link Collider.AxisAlignedBox} if really\n     * necessary.\n     */\n    Collider[Collider[\"Box\"] = 2] = \"Box\";\n})(Collider || (Collider = {}));\n/**\n * Alignment type enum for {@link TextComponent}.\n */\nexport var Alignment;\n(function (Alignment) {\n    /** Text start is at object origin */\n    Alignment[Alignment[\"Left\"] = 1] = \"Left\";\n    /** Text center is at object origin */\n    Alignment[Alignment[\"Center\"] = 2] = \"Center\";\n    /** Text end is at object origin */\n    Alignment[Alignment[\"Right\"] = 3] = \"Right\";\n})(Alignment || (Alignment = {}));\n/**\n * Justification type enum for {@link TextComponent}.\n */\nexport var Justification;\n(function (Justification) {\n    /** Text line is at object origin */\n    Justification[Justification[\"Line\"] = 1] = \"Line\";\n    /** Text middle is at object origin */\n    Justification[Justification[\"Middle\"] = 2] = \"Middle\";\n    /** Text top is at object origin */\n    Justification[Justification[\"Top\"] = 3] = \"Top\";\n    /** Text bottom is at object origin */\n    Justification[Justification[\"Bottom\"] = 4] = \"Bottom\";\n})(Justification || (Justification = {}));\n/**\n * Effect type enum for {@link TextComponent}.\n */\nexport var TextEffect;\n(function (TextEffect) {\n    /** Text is rendered normally */\n    TextEffect[TextEffect[\"None\"] = 0] = \"None\";\n    /** Text is rendered with an outline */\n    TextEffect[TextEffect[\"Outline\"] = 1] = \"Outline\";\n})(TextEffect || (TextEffect = {}));\n/**\n * Input type enum for {@link InputComponent}.\n */\nexport var InputType;\n(function (InputType) {\n    /** Head input */\n    InputType[InputType[\"Head\"] = 0] = \"Head\";\n    /** Left eye input */\n    InputType[InputType[\"EyeLeft\"] = 1] = \"EyeLeft\";\n    /** Right eye input */\n    InputType[InputType[\"EyeRight\"] = 2] = \"EyeRight\";\n    /** Left controller input */\n    InputType[InputType[\"ControllerLeft\"] = 3] = \"ControllerLeft\";\n    /** Right controller input */\n    InputType[InputType[\"ControllerRight\"] = 4] = \"ControllerRight\";\n    /** Left ray input */\n    InputType[InputType[\"RayLeft\"] = 5] = \"RayLeft\";\n    /** Right ray input */\n    InputType[InputType[\"RayRight\"] = 6] = \"RayRight\";\n})(InputType || (InputType = {}));\n/**\n * Light type enum for {@link LightComponent}.\n */\nexport var LightType;\n(function (LightType) {\n    /** Point light */\n    LightType[LightType[\"Point\"] = 1] = \"Point\";\n    /** Spot light */\n    LightType[LightType[\"Spot\"] = 2] = \"Spot\";\n    /** Sun light / Directional light */\n    LightType[LightType[\"Sun\"] = 3] = \"Sun\";\n})(LightType || (LightType = {}));\n/**\n * Animation state of {@link AnimationComponent}.\n */\nexport var AnimationState;\n(function (AnimationState) {\n    /** Animation is currently playing */\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\n    /** Animation is paused and will continue at current playback\n     * time on {@link AnimationComponent#play} */\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\n    /** Animation is stopped */\n    AnimationState[AnimationState[\"Stopped\"] = 3] = \"Stopped\";\n})(AnimationState || (AnimationState = {}));\n/**\n * Rigid body force mode for {@link PhysXComponent#addForce} and {@link PhysXComponent#addTorque}.\n *\n * [PhysX API Reference](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxapi/files/structPxForceMode.html)\n */\nexport var ForceMode;\n(function (ForceMode) {\n    /** Apply as force */\n    ForceMode[ForceMode[\"Force\"] = 0] = \"Force\";\n    /** Apply as impulse */\n    ForceMode[ForceMode[\"Impulse\"] = 1] = \"Impulse\";\n    /** Apply as velocity change, mass dependent */\n    ForceMode[ForceMode[\"VelocityChange\"] = 2] = \"VelocityChange\";\n    /** Apply as mass dependent force */\n    ForceMode[ForceMode[\"Acceleration\"] = 3] = \"Acceleration\";\n})(ForceMode || (ForceMode = {}));\n/**\n * Collision callback event type.\n */\nexport var CollisionEventType;\n(function (CollisionEventType) {\n    /** Touch/contact detected, collision */\n    CollisionEventType[CollisionEventType[\"Touch\"] = 0] = \"Touch\";\n    /** Touch/contact lost, uncollide */\n    CollisionEventType[CollisionEventType[\"TouchLost\"] = 1] = \"TouchLost\";\n    /** Touch/contact with trigger detected */\n    CollisionEventType[CollisionEventType[\"TriggerTouch\"] = 2] = \"TriggerTouch\";\n    /** Touch/contact with trigger lost */\n    CollisionEventType[CollisionEventType[\"TriggerTouchLost\"] = 3] = \"TriggerTouchLost\";\n})(CollisionEventType || (CollisionEventType = {}));\n/**\n * Rigid body {@link PhysXComponent#shape}.\n *\n * [PhysX SDK Guide](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/Geometry.html#geometry-types).\n */\nexport var Shape;\n(function (Shape) {\n    /** No shape. */\n    Shape[Shape[\"None\"] = 0] = \"None\";\n    /** Sphere shape. */\n    Shape[Shape[\"Sphere\"] = 1] = \"Sphere\";\n    /** Capsule shape. */\n    Shape[Shape[\"Capsule\"] = 2] = \"Capsule\";\n    /** Box shape. */\n    Shape[Shape[\"Box\"] = 3] = \"Box\";\n    /** Plane shape. */\n    Shape[Shape[\"Plane\"] = 4] = \"Plane\";\n    /** Convex mesh shape. */\n    Shape[Shape[\"ConvexMesh\"] = 5] = \"ConvexMesh\";\n    /** Triangle mesh shape. */\n    Shape[Shape[\"TriangleMesh\"] = 6] = \"TriangleMesh\";\n})(Shape || (Shape = {}));\n/**\n * Mesh attribute enum.\n * @since 0.9.0\n */\nexport var MeshAttribute;\n(function (MeshAttribute) {\n    /** Position attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Position\"] = 0] = \"Position\";\n    /** Tangent attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"Tangent\"] = 1] = \"Tangent\";\n    /** Normal attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Normal\"] = 2] = \"Normal\";\n    /** Texture coordinate attribute, 2 floats */\n    MeshAttribute[MeshAttribute[\"TextureCoordinate\"] = 3] = \"TextureCoordinate\";\n    /** Color attribute, 4 floats, RGBA, range `0` to `1` */\n    MeshAttribute[MeshAttribute[\"Color\"] = 4] = \"Color\";\n    /** Joint id attribute, 8 unsigned ints */\n    MeshAttribute[MeshAttribute[\"JointId\"] = 5] = \"JointId\";\n    /** Joint weights attribute, 8 floats */\n    MeshAttribute[MeshAttribute[\"JointWeight\"] = 6] = \"JointWeight\";\n    /** @deprecated Deprecated, Secondary joint id attribute, should use JointId which has all 8 values instead */\n    MeshAttribute[MeshAttribute[\"SecondaryJointId\"] = 7] = \"SecondaryJointId\";\n    /** @deprecated Deprecated, Secondary joint weights attribute, should use JointWeight which has all 8 values instead */\n    MeshAttribute[MeshAttribute[\"SecondaryJointWeight\"] = 8] = \"SecondaryJointWeight\";\n})(MeshAttribute || (MeshAttribute = {}));\n/**\n * Material parameter type.\n */\nexport var MaterialParamType;\n(function (MaterialParamType) {\n    /** Unsigned integer parameter type. */\n    MaterialParamType[MaterialParamType[\"UnsignedInt\"] = 0] = \"UnsignedInt\";\n    /** Integer parameter type. */\n    MaterialParamType[MaterialParamType[\"Int\"] = 1] = \"Int\";\n    /** Float parameter type. */\n    MaterialParamType[MaterialParamType[\"Float\"] = 2] = \"Float\";\n    /** Sampler resource parameter type, i.e., a {@link Texture}. */\n    MaterialParamType[MaterialParamType[\"Sampler\"] = 3] = \"Sampler\";\n    /**\n     * Font resource parameter type.\n     *\n     * **Note**: Changing font isn't exposed yet and will raise an error.\n     */\n    MaterialParamType[MaterialParamType[\"Font\"] = 4] = \"Font\";\n})(MaterialParamType || (MaterialParamType = {}));\n/**\n * Constants.\n */\n/**\n * Default world up vector.\n */\nconst UP_VECTOR = [0, 1, 0];\n/**\n * Provides global scene functionality like raycasting.\n */\nexport class Scene {\n    /** Called before rendering the scene */\n    onPreRender;\n    /** Called after the scene has been rendered */\n    onPostRender;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /** Ray hit pointer in WASM heap. @hidden */\n    _rayHit;\n    /** Ray hit. @hidden */\n    _hit;\n    constructor(engine) {\n        this._engine = engine;\n        this._rayHit = engine.wasm._malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(this._engine, this._rayHit);\n        /* Hidden property, list of functions to call after a\n         * frame has been rendered */\n        this.onPreRender = [];\n        this.onPostRender = [];\n    }\n    /**\n     * Currently active view components.\n     */\n    get activeViews() {\n        const wasm = this._engine.wasm;\n        const count = wasm._wl_scene_get_active_views(this._engine.wasm._tempMem, 16);\n        const views = [];\n        const viewTypeIndex = wasm._typeIndexFor('view');\n        for (let i = 0; i < count; ++i) {\n            views.push(new ViewComponent(this._engine, viewTypeIndex, this._engine.wasm._tempMemInt[i]));\n        }\n        return views;\n    }\n    /**\n     * Cast a ray through the scene and find intersecting objects.\n     *\n     * The resulting ray hit will contain up to **4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param group Collision group to filter by: only objects that are\n     *        part of given group are considered for raycast.\n     *\n     * @returns The scene cached {@link RayHit} instance.\n     * @note The returned object is owned by the Scene instance\n     *   will be reused with the next {@link Scene#rayCast} call.\n     */\n    rayCast(o, d, group) {\n        this._engine.wasm._wl_scene_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, this._rayHit);\n        return this._hit;\n    }\n    /**\n     * Add an object to the scene.\n     *\n     * @param parent Parent object or `null`.\n     * @returns A newly created object.\n     */\n    addObject(parent) {\n        const parentId = parent ? parent.objectId : 0;\n        const objectId = this._engine.wasm._wl_scene_add_object(parentId);\n        return this._engine.wrapObject(objectId);\n    }\n    /**\n     * Batch-add objects to the scene.\n     *\n     * Will provide better performance for adding multiple objects (e.g. > 16)\n     * than calling {@link Scene#addObject} repeatedly in a loop.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * convervatively grow the memory in small steps.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * @param count Number of objects to add.\n     * @param parent Parent object or `null`, default `null`.\n     * @param componentCountHint Hint for how many components in total will\n     *      be added to the created objects afterwards, default `0`.\n     * @returns Newly created objects\n     */\n    addObjects(count, parent, componentCountHint) {\n        const parentId = parent ? parent.objectId : 0;\n        this._engine.wasm.requireTempMem(count * 2);\n        const actualCount = this._engine.wasm._wl_scene_add_objects(parentId, count, componentCountHint || 0, this._engine.wasm._tempMem, this._engine.wasm._tempMemSize >> 1);\n        const ids = this._engine.wasm._tempMemUint16.subarray(0, actualCount);\n        const wrapper = this._engine.wrapObject.bind(this._engine);\n        const objects = Array.from(ids, wrapper);\n        return objects;\n    }\n    /**\n     * Pre-allocate memory for a given amount of objects and components.\n     *\n     * Will provide better performance for adding objects later with {@link Scene#addObject}\n     * and {@link Scene#addObjects}.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * convervatively grow the memory in small steps.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * @param objectCount Number of objects to add.\n     * @param componentCountPerType Amount of components to\n     *      allocate for {@link Object.addComponent}, e.g. `{mesh: 100, collision: 200, \"my-comp\": 100}`.\n     * @since 0.8.10\n     */\n    reserveObjects(objectCount, componentCountPerType) {\n        const wasm = this._engine.wasm;\n        componentCountPerType = componentCountPerType || {};\n        const jsManagerIndex = wasm._typeIndexFor('js');\n        let countsPerTypeIndex = wasm._tempMemInt.subarray();\n        countsPerTypeIndex.fill(0);\n        for (const e of Object.entries(componentCountPerType)) {\n            const typeIndex = wasm._typeIndexFor(e[0]);\n            countsPerTypeIndex[typeIndex < 0 ? jsManagerIndex : typeIndex] += e[1];\n        }\n        wasm._wl_scene_reserve_objects(objectCount, wasm._tempMem);\n    }\n    /**\n     * Set the background clear color.\n     *\n     * @param color new clear color (RGBA).\n     * @since 0.8.5\n     */\n    set clearColor(color) {\n        this._engine.wasm._wl_scene_set_clearColor(color[0], color[1], color[2], color[3]);\n    }\n    /**\n     * Set whether to clear the color framebuffer before drawing.\n     *\n     * This function is useful if an external framework (e.g. an AR tracking\n     * framework) is responsible for drawing a camera frame before Wonderland\n     * Engine draws the scene on top of it.\n     *\n     * @param b Whether to enable color clear.\n     * @since 0.9.4\n     */\n    set colorClearEnabled(b) {\n        this._engine.wasm._wl_scene_enableColorClear(b);\n    }\n    /**\n     * Load a scene file (.bin)\n     *\n     * Will replace the currently active scene with the one loaded\n     * from given file. It is assumed that JavaScript components required by\n     * the new scene were registered in advance.\n     *\n     * @param filename Path to the .bin file.\n     */\n    load(filename) {\n        const wasm = this._engine.wasm;\n        const strLen = wasm.lengthBytesUTF8(filename) + 1;\n        const ptr = wasm._malloc(strLen);\n        wasm.stringToUTF8(filename, ptr, strLen);\n        wasm._wl_load_scene(ptr);\n        wasm._free(ptr);\n    }\n    /**\n     * Load an external 3D file (.gltf, .glb).\n     *\n     * Loads and parses the gltf file and its images and appends the result\n     * to scene.\n     *\n     * ```js\n     * WL.scene.append(filename).then(root => {\n     *     // root contains the loaded scene\n     * });\n     * ```\n     *\n     * In case the `loadGltfExtensions` option is set to true, the response\n     * will be an object containing both the root of the loaded scene and\n     * any glTF extensions found on nodes, meshes and the root of the file.\n     *\n     * ```js\n     * WL.scene.append(filename, { loadGltfExtensions: true }).then(({root, extensions}) => {\n     *     // root contains the loaded scene\n     *     // extensions.root contains any extensions at the root of glTF document\n     *     const rootExtensions = extensions.root;\n     *     // extensions.mesh and extensions.node contain extensions indexed by Object id\n     *     const childObject = root.children[0];\n     *     const meshExtensions = root.meshExtensions[childObject.objectId];\n     *     const nodeExtensions = root.nodeExtensions[childObject.objectId];\n     *     // extensions.idMapping contains a mapping from glTF node index to Object id\n     * });\n     * ```\n     *\n     * @param filename Path to the .gltf or .glb file.\n     * @param options Additional options for loading.\n     * @returns Root of the loaded scene.\n     */\n    append(filename, options) {\n        options = options || {};\n        const loadGltfExtensions = !!options.loadGltfExtensions;\n        const wasm = this._engine.wasm;\n        const strLen = wasm.lengthBytesUTF8(filename) + 1;\n        const ptr = wasm._malloc(strLen);\n        wasm.stringToUTF8(filename, ptr, strLen);\n        const callback = wasm._sceneLoadedCallback.length;\n        const promise = new Promise((resolve, reject) => {\n            wasm._sceneLoadedCallback[callback] = {\n                success: (id, extensions) => {\n                    const root = this._engine.wrapObject(id);\n                    resolve(extensions ? { root, extensions } : root);\n                },\n                error: () => reject(),\n            };\n        });\n        wasm._wl_append_scene(ptr, loadGltfExtensions, callback);\n        wasm._free(ptr);\n        return promise;\n    }\n    /**\n     * Unmarshalls the GltfExtensions from an Uint32Array.\n     *\n     * @param data Array containing the gltf extension data.\n     * @returns The extensions stored in an object literal.\n     *\n     * @hidden\n     */\n    _unmarshallGltfExtensions(data) {\n        /* @todo: This method should be moved in the internal Emscripten library. */\n        const extensions = {\n            root: {},\n            mesh: {},\n            node: {},\n            idMapping: {},\n        };\n        let index = 0;\n        const readString = () => {\n            const strPtr = data[index++];\n            const strLen = data[index++];\n            return this._engine.wasm.UTF8ViewToString(strPtr, strPtr + strLen);\n        };\n        const idMappingSize = data[index++];\n        const idMapping = new Array(idMappingSize);\n        for (let i = 0; i < idMappingSize; ++i) {\n            idMapping[i] = data[index++];\n        }\n        extensions.idMapping = idMapping;\n        const meshExtensionsSize = data[index++];\n        for (let i = 0; i < meshExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.mesh[idMapping[objectId]] = JSON.parse(readString());\n        }\n        const nodeExtensionsSize = data[index++];\n        for (let i = 0; i < nodeExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.node[idMapping[objectId]] = JSON.parse(readString());\n        }\n        const rootExtensionsStr = readString();\n        if (rootExtensionsStr) {\n            extensions.root = JSON.parse(rootExtensionsStr);\n        }\n        return extensions;\n    }\n    /**\n     * Reset the scene.\n     *\n     * This method deletes all used and allocated objects, and components.\n     */\n    reset() {\n        this._engine.wasm._wl_scene_reset();\n    }\n}\n/**\n * Native component\n *\n * Provides access to a native component instance of a specified component type.\n *\n * Usage example:\n *\n * ```js\n * import { Component, Type } from '@wonderlandengine/api';\n *\n * class MyComponent extends Component {\n *     static TypeName = 'my-component';\n *     static Properties = {\n *         myBoolean: { type: Type.Boolean, default: false },\n *     };\n *     start() {}\n *     onActivate() {}\n *     onDeactivate() {}\n *     update(dt) {}\n * }\n * ```\n */\nexport class Component {\n    /**\n     * Unique identifier for this component class.\n     *\n     * This is used to register, add, and retrieve component of a given type.\n     */\n    static TypeName;\n    /**\n     * Properties of this component class.\n     *\n     * Properties are public attributes that can be configured via the\n     * Wonderland Editor.\n     *\n     * Example:\n     *\n     * ```js\n     * import { Component, Type } from '@wonderlandengine/api';\n     * class MyComponent extends Component {\n     *     static TypeName = 'my-component';\n     *     static Properties = {\n     *         myBoolean: { type: Type.Boolean, default: false },\n     *         myFloat: { type: Type.Float, default: false },\n     *         myTexture: { type: Type.Texture, default: null },\n     *     };\n     * }\n     * ```\n     *\n     * Properties are automatically added to each component instance, and are\n     * accessible like any JS attribute:\n     *\n     * ```js\n     * // Creates a new component and set each properties value:\n     * const myComponent = object.addComponent(MyComponent, {\n     *     myBoolean: true,\n     *     myFloat: 42.0,\n     *     myTexture: null\n     * });\n     *\n     * // You can also override the properties on the instance:\n     * myComponent.myBoolean = false;\n     * myComponent.myFloat = -42.0;\n     * ```\n     */\n    static Properties;\n    /** Manager index. @hidden */\n    _manager;\n    /** Instance index. @hidden */\n    _id;\n    /**\n     * Object containing this object.\n     *\n     * **Note**: This is cached for faster retrieval.\n     *\n     * @hidden\n     */\n    _object;\n    /**\n     * Component's typename, e.g., 'my-component'.\n     *\n     * @todo: Should be deprecated. Constructor should be looked up instead.\n     *\n     * @hidden\n     */\n    _type;\n    /** Wonderland Engine instance */\n    _engine;\n    /**\n     * Create a new instance\n     *\n     * @param engine The engine instance.\n     * @param manager Index of the manager.\n     * @param id WASM component instance index.\n     *\n     * @hidden\n     */\n    constructor(engine, manager = -1, id = -1) {\n        this._engine = engine;\n        this._manager = manager;\n        this._id = id;\n        this._object = null;\n        this._type = null;\n    }\n    /** Engine's instance. */\n    get engine() {\n        return this._engine;\n    }\n    /** The name of this component's type */\n    get type() {\n        return this._type || this._engine.wasm._typeNameFor(this._manager);\n    }\n    /** The object this component is attached to. */\n    get object() {\n        if (!this._object) {\n            const objectId = this._engine.wasm._wl_component_get_object(this._manager, this._id);\n            this._object = this._engine.wrapObject(objectId);\n        }\n        return this._object;\n    }\n    /**\n     * Set whether this component is active.\n     *\n     * Activating/deactivating a component comes at a small cost of reordering\n     * components in the respective component manager. This function therefore\n     * is not a trivial assignment.\n     *\n     * Does nothing if the component is already activated/deactivated.\n     *\n     * @param active New active state.\n     */\n    set active(active) {\n        this._engine.wasm._wl_component_setActive(this._manager, this._id, active);\n    }\n    /**\n     * Whether this component is active\n     */\n    get active() {\n        return this._engine.wasm._wl_component_isActive(this._manager, this._id) != 0;\n    }\n    /**\n     * Remove this component from its objects and destroy it.\n     *\n     * It is best practice to set the component to `null` after,\n     * to ensure it does not get used later.\n     *\n     * ```js\n     *    c.destroy();\n     *    c = null;\n     * ```\n     * @since 0.9.0\n     */\n    destroy() {\n        this._engine.wasm._wl_component_remove(this._manager, this._id);\n        /* @todo: shouldn't be set to undefined. */\n        // @ts-ignore\n        this._manager = undefined;\n        // @ts-ignore\n        this._id = undefined;\n    }\n    /**\n     * Checks equality by comparing whether the wrapped native component ids\n     * and component manager types are equal.\n     *\n     * @param otherComponent Component to check equality with.\n     * @returns Whether this component equals the given component.\n     */\n    equals(otherComponent) {\n        if (!otherComponent)\n            return false;\n        return this._manager == otherComponent._manager && this._id == otherComponent._id;\n    }\n}\n/**\n * Native collision component.\n *\n * Provides access to a native collision component instance.\n */\nexport class CollisionComponent extends Component {\n    /** @override */\n    static TypeName = 'collision';\n    /** Collision component collider */\n    get collider() {\n        return this._engine.wasm._wl_collision_component_get_collider(this._id);\n    }\n    /**\n     * Set collision component collider.\n     *\n     * @param collider Collider of the collision component.\n     */\n    set collider(collider) {\n        this._engine.wasm._wl_collision_component_set_collider(this._id, collider);\n    }\n    /**\n     * Collision component extents.\n     *\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\n     * component of the returned vector is used.\n     */\n    get extents() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_collision_component_get_extents(this._id), 3);\n    }\n    /**\n     * Set collision component extents.\n     *\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\n     * component of the passed vector is used.\n     *\n     * Example:\n     *\n     * ```js\n     * // Spans 1 unit on the x-axis, 2 on the y-axis, 3 on the z-axis.\n     * collision.extent = [1, 2, 3];\n     * ```\n     *\n     * @param extents Extents of the collision component, expects a\n     *      3 component array.\n     */\n    set extents(extents) {\n        this.extents.set(extents);\n    }\n    /**\n     * Collision component group.\n     *\n     * The groups is a bitmask that is compared to other components in {@link CollisionComponent#queryOverlaps}\n     * or the group in {@link Scene#rayCast}.\n     *\n     * Colliders that have no common groups will not overlap with each other. If a collider\n     * has none of the groups set for {@link Scene#rayCast}, the ray will not hit it.\n     *\n     * Each bit represents belonging to a group, see example.\n     *\n     * ```js\n     *    // c belongs to group 2\n     *    c.group = (1 << 2);\n     *\n     *    // c belongs to group 0\n     *    c.group = (1 << 0);\n     *\n     *    // c belongs to group 0 *and* 2\n     *    c.group = (1 << 0) | (1 << 2);\n     *\n     *    (c.group & (1 << 2)) != 0; // true\n     *    (c.group & (1 << 7)) != 0; // false\n     * ```\n     */\n    get group() {\n        return this._engine.wasm._wl_collision_component_get_group(this._id);\n    }\n    /**\n     * Set collision component group.\n     *\n     * @param group Group mask of the collision component.\n     */\n    set group(group) {\n        this._engine.wasm._wl_collision_component_set_group(this._id, group);\n    }\n    /**\n     * Query overlapping objects.\n     *\n     * Usage:\n     *\n     * ```js\n     * const collision = object.getComponent('collision');\n     * const overlaps = collision.queryOverlaps();\n     * for(const otherCollision of overlaps) {\n     *     const otherObject = otherCollision.object;\n     *     console.log(`Collision with object ${otherObject.objectId}`);\n     * }\n     * ```\n     *\n     * @returns Collision components overlapping this collider.\n     */\n    queryOverlaps() {\n        const count = this._engine.wasm._wl_collision_component_query_overlaps(this._id, this._engine.wasm._tempMem, this._engine.wasm._tempMemSize >> 1);\n        let overlaps = new Array(count);\n        for (let i = 0; i < count; ++i) {\n            overlaps[i] = new CollisionComponent(this._engine, this._manager, this._engine.wasm._tempMemUint16[i]);\n        }\n        return overlaps;\n    }\n}\n/**\n * Native text component\n *\n * Provides access to a native text component instance\n */\nexport class TextComponent extends Component {\n    /** @override */\n    static TypeName = 'text';\n    /** Text component alignment. */\n    get alignment() {\n        return this._engine.wasm._wl_text_component_get_horizontal_alignment(this._id);\n    }\n    /**\n     * Set text component alignment.\n     *\n     * @param alignment Alignment for the text component.\n     */\n    set alignment(alignment) {\n        this._engine.wasm._wl_text_component_set_horizontal_alignment(this._id, alignment);\n    }\n    /** Text component justification. */\n    get justification() {\n        return this._engine.wasm._wl_text_component_get_vertical_alignment(this._id);\n    }\n    /**\n     * Set text component justification.\n     *\n     * @param justification Justification for the text component.\n     */\n    set justification(justification) {\n        this._engine.wasm._wl_text_component_set_vertical_alignment(this._id, justification);\n    }\n    /** Text component character spacing. */\n    get characterSpacing() {\n        return this._engine.wasm._wl_text_component_get_character_spacing(this._id);\n    }\n    /**\n     * Set text component character spacing.\n     *\n     * @param spacing Character spacing for the text component.\n     */\n    set characterSpacing(spacing) {\n        this._engine.wasm._wl_text_component_set_character_spacing(this._id, spacing);\n    }\n    /** Text component line spacing. */\n    get lineSpacing() {\n        return this._engine.wasm._wl_text_component_get_line_spacing(this._id);\n    }\n    /**\n     * Set text component line spacing\n     *\n     * @param spacing Line spacing for the text component\n     */\n    set lineSpacing(spacing) {\n        this._engine.wasm._wl_text_component_set_line_spacing(this._id, spacing);\n    }\n    /** Text component effect. */\n    get effect() {\n        return this._engine.wasm._wl_text_component_get_effect(this._id);\n    }\n    /**\n     * Set text component effect\n     *\n     * @param effect Effect for the text component\n     */\n    set effect(effect) {\n        this._engine.wasm._wl_text_component_set_effect(this._id, effect);\n    }\n    /** Text component text. */\n    get text() {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_text_component_get_text(this._id);\n        return wasm.UTF8ToString(ptr);\n    }\n    /**\n     * Set text component text.\n     *\n     * @param text Text of the text component.\n     */\n    set text(text) {\n        const wasm = this._engine.wasm;\n        const strLen = wasm.lengthBytesUTF8(text) + 1;\n        const ptr = wasm._malloc(strLen);\n        wasm.stringToUTF8(text, ptr, strLen);\n        wasm._wl_text_component_set_text(this._id, ptr);\n        wasm._free(ptr);\n    }\n    /**\n     * Set material to render the text with.\n     *\n     * @param material New material.\n     */\n    set material(material) {\n        const matIndex = material ? material._index : 0;\n        this._engine.wasm._wl_text_component_set_material(this._id, matIndex);\n    }\n    /** Material used to render the text. */\n    get material() {\n        const id = this._engine.wasm._wl_text_component_get_material(this._id);\n        return id > 0 ? new Material(this._engine, id) : null;\n    }\n}\n/**\n * Native view component.\n *\n * Provides access to a native view component instance.\n */\nexport class ViewComponent extends Component {\n    /** @override */\n    static TypeName = 'view';\n    /** Projection matrix. */\n    get projectionMatrix() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_view_component_get_projection_matrix(this._id), 16);\n    }\n    /** ViewComponent near clipping plane value. */\n    get near() {\n        return this._engine.wasm._wl_view_component_get_near(this._id);\n    }\n    /**\n     * Set near clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param near Near depth value.\n     */\n    set near(near) {\n        this._engine.wasm._wl_view_component_set_near(this._id, near);\n    }\n    /** Far clipping plane value. */\n    get far() {\n        return this._engine.wasm._wl_view_component_get_far(this._id);\n    }\n    /**\n     * Set far clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param far Near depth value.\n     */\n    set far(far) {\n        this._engine.wasm._wl_view_component_set_far(this._id, far);\n    }\n    /**\n     * Get the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, this returns the field of view reported by\n     * the device, regardless of the fov that was set.\n     */\n    get fov() {\n        return this._engine.wasm._wl_view_component_get_fov(this._id);\n    }\n    /**\n     * Set the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, the field of view reported by the device is\n     * used and this value is ignored. After the XR session ends, the new value\n     * is applied.\n     *\n     * @param fov Horizontal field of view, **in degrees**.\n     */\n    set fov(fov) {\n        this._engine.wasm._wl_view_component_set_fov(this._id, fov);\n    }\n}\n/**\n * Native input component.\n *\n * Provides access to a native input component instance.\n */\nexport class InputComponent extends Component {\n    /** @override */\n    static TypeName = 'input';\n    /** Input component type */\n    get inputType() {\n        return this._engine.wasm._wl_input_component_get_type(this._id);\n    }\n    /**\n     * Set input component type.\n     *\n     * @params New input component type.\n     */\n    set inputType(type) {\n        this._engine.wasm._wl_input_component_set_type(this._id, type);\n    }\n    /**\n     * WebXR Device API input source associated with this input component,\n     * if type {@link InputType.ControllerLeft} or {@link InputType.ControllerRight}.\n     */\n    get xrInputSource() {\n        const xrSession = this._engine.xrSession;\n        if (xrSession) {\n            for (let inputSource of xrSession.inputSources) {\n                if (inputSource.handedness == this.handedness) {\n                    return inputSource;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * 'left', 'right' or `null` depending on the {@link InputComponent#inputType}.\n     */\n    get handedness() {\n        const inputType = this.inputType;\n        if (inputType == InputType.ControllerRight ||\n            inputType == InputType.RayRight ||\n            inputType == InputType.EyeRight)\n            return 'right';\n        if (inputType == InputType.ControllerLeft ||\n            inputType == InputType.RayLeft ||\n            inputType == InputType.EyeLeft)\n            return 'left';\n        return null;\n    }\n}\n/**\n * Native light component.\n *\n * Provides access to a native light component instance.\n */\nexport class LightComponent extends Component {\n    /** @override */\n    static TypeName = 'light';\n    /** View on the light color */\n    get color() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_light_component_get_color(this._id), 4);\n    }\n    /** Light type. */\n    get lightType() {\n        return this._engine.wasm._wl_light_component_get_type(this._id);\n    }\n    /**\n     * Set light type.\n     *\n     * @param lightType Type of the light component.\n     */\n    set lightType(t) {\n        this._engine.wasm._wl_light_component_set_type(this._id, t);\n    }\n}\n/**\n * Native animation component.\n *\n * Provides access to a native animation component instance.\n */\nexport class AnimationComponent extends Component {\n    /** @override */\n    static TypeName = 'animation';\n    /**\n     * Set animation to play.\n     *\n     * Make sure to {@link Animation#retarget} the animation to affect the\n     * right objects.\n     *\n     * @param anim Animation to play.\n     */\n    set animation(anim) {\n        this._engine.wasm._wl_animation_component_set_animation(this._id, anim ? anim._index : 0);\n    }\n    /** Animation set for this component */\n    get animation() {\n        const id = this._engine.wasm._wl_animation_component_get_animation(this._id);\n        return id > 0 ? new Animation(this._engine, id) : null;\n    }\n    /**\n     * Set play count. Set to `0` to loop indefinitely.\n     *\n     * @param playCount Number of times to repeat the animation.\n     */\n    set playCount(playCount) {\n        this._engine.wasm._wl_animation_component_set_playCount(this._id, playCount);\n    }\n    /** Number of times the animation is played. */\n    get playCount() {\n        return this._engine.wasm._wl_animation_component_get_playCount(this._id);\n    }\n    /**\n     * Set speed. Set to negative values to run the animation backwards.\n     *\n     * Setting speed has an immediate effect for the current frame's update\n     * and will continue with the speed from the current point in the animation.\n     *\n     * @param speed New speed at which to play the animation.\n     * @since 0.8.10\n     */\n    set speed(speed) {\n        this._engine.wasm._wl_animation_component_set_speed(this._id, speed);\n    }\n    /**\n     * Speed factor at which the animation is played.\n     *\n     * @since 0.8.10\n     */\n    get speed() {\n        return this._engine.wasm._wl_animation_component_get_speed(this._id);\n    }\n    /** Current playing state of the animation */\n    get state() {\n        return this._engine.wasm._wl_animation_component_state(this._id);\n    }\n    /**\n     * Play animation.\n     *\n     * If the animation is currently paused, resumes from that position. If the\n     * animation is already playing, does nothing.\n     *\n     * To restart the animation, {@link AnimationComponent#stop} it first.\n     */\n    play() {\n        this._engine.wasm._wl_animation_component_play(this._id);\n    }\n    /** Stop animation. */\n    stop() {\n        this._engine.wasm._wl_animation_component_stop(this._id);\n    }\n    /** Pause animation. */\n    pause() {\n        this._engine.wasm._wl_animation_component_pause(this._id);\n    }\n}\n/**\n * Native mesh component.\n *\n * Provides access to a native mesh component instance.\n */\nexport class MeshComponent extends Component {\n    /** @override */\n    static TypeName = 'mesh';\n    /**\n     * Set material to render the mesh with.\n     *\n     * @param material Material to render the mesh with.\n     */\n    set material(material) {\n        this._engine.wasm._wl_mesh_component_set_material(this._id, material ? material._index : 0);\n    }\n    /** Material used to render the mesh. */\n    get material() {\n        const id = this._engine.wasm._wl_mesh_component_get_material(this._id);\n        return id > 0 ? new Material(this._engine, id) : null;\n    }\n    /** Mesh rendered by this component. */\n    get mesh() {\n        const id = this._engine.wasm._wl_mesh_component_get_mesh(this._id);\n        return id > 0 ? new Mesh(this._engine, id) : null;\n    }\n    /**\n     * Set mesh to rendered with this component.\n     *\n     * @param mesh Mesh rendered by this component.\n     */\n    set mesh(mesh) {\n        this._engine.wasm._wl_mesh_component_set_mesh(this._id, mesh ? mesh._index : 0);\n    }\n    /** Skin for this mesh component. */\n    get skin() {\n        const id = this._engine.wasm._wl_mesh_component_get_skin(this._id);\n        return id > 0 ? new Skin(this._engine, id) : null;\n    }\n    /**\n     * Set skin to transform this mesh component.\n     *\n     * @param skin Skin to use for rendering skinned meshes.\n     */\n    set skin(skin) {\n        this._engine.wasm._wl_mesh_component_set_skin(this._id, skin ? skin._index : 0);\n    }\n}\n/**\n * Enum for Physics axes locking\n *\n * See {@link PhysXComponent.angularLockAxis} and {@link PhysXComponent.linearLockAxis}.\n */\nexport var LockAxis;\n(function (LockAxis) {\n    /**\n     * No axis selected.\n     */\n    LockAxis[LockAxis[\"None\"] = 0] = \"None\";\n    /**\n     * **X axis**:\n     */\n    LockAxis[LockAxis[\"X\"] = 1] = \"X\";\n    /**\n     * **Y axis**:\n     */\n    LockAxis[LockAxis[\"Y\"] = 2] = \"Y\";\n    /**\n     * **Z axis**:\n     */\n    LockAxis[LockAxis[\"Z\"] = 4] = \"Z\";\n})(LockAxis || (LockAxis = {}));\n/**\n * Native physx rigid body component.\n *\n * Provides access to a native mesh component instance.\n * Only available when using physx enabled runtime, see \"Project Settings > Runtime\".\n */\nclass PhysXComponent extends Component {\n    /** @override */\n    static TypeName = 'physx';\n    /**\n     * Set whether this rigid body is static.\n     *\n     * Setting this property only takes effect once the component\n     * switches from inactive to active.\n     *\n     * @param b Whether the rigid body should be static.\n     */\n    set static(b) {\n        this._engine.wasm._wl_physx_component_set_static(this._id, b);\n    }\n    /**\n     * Whether this rigid body is static.\n     *\n     * This property returns whether the rigid body is *effectively*\n     * static. If static property was set while the rigid body was\n     * active, it will not take effect until the rigid body is set\n     * inactive and active again. Until the component is set inactive,\n     * this getter will return whether the rigid body is actually\n     * static.\n     */\n    get static() {\n        return !!this._engine.wasm._wl_physx_component_get_static(this._id);\n    }\n    /**\n     * Set whether this rigid body is kinematic.\n     *\n     * @param b Whether the rigid body should be kinematic.\n     */\n    set kinematic(b) {\n        this._engine.wasm._wl_physx_component_set_kinematic(this._id, b);\n    }\n    /**\n     * Whether this rigid body is kinematic.\n     */\n    get kinematic() {\n        return !!this._engine.wasm._wl_physx_component_get_kinematic(this._id);\n    }\n    /**\n     * Set whether this rigid body's gravity is enabled.\n     *\n     * @param b Whether the rigid body's gravity should be enabled.\n     */\n    set gravity(b) {\n        this._engine.wasm._wl_physx_component_set_gravity(this._id, b);\n    }\n    /**\n     * Whether this rigid body's gravity flag is enabled.\n     */\n    get gravity() {\n        return !!this._engine.wasm._wl_physx_component_get_gravity(this._id);\n    }\n    /**\n     * Set whether this rigid body's simulate flag is enabled.\n     *\n     * @param b Whether the rigid body's simulate flag should be enabled.\n     */\n    set simulate(b) {\n        this._engine.wasm._wl_physx_component_set_simulate(this._id, b);\n    }\n    /**\n     * Whether this rigid body's simulate flag is enabled.\n     */\n    get simulate() {\n        return !!this._engine.wasm._wl_physx_component_get_simulate(this._id);\n    }\n    /**\n     * Set whether this rigid body's allowSimulation flag is enabled.\n     * AllowSimulation and trigger can not be enabled at the same time.\n     * Enabling allowSimulation while trigger is enabled,\n     * will disable trigger.\n     *\n     * @param b Whether the rigid body's allowSimulation flag should be enabled.\n     */\n    set allowSimulation(b) {\n        this._engine.wasm._wl_physx_component_set_allowSimulation(this._id, b);\n    }\n    /**\n     * Whether this rigid body's allowSimulation flag is enabled.\n     */\n    get allowSimulation() {\n        return !!this._engine.wasm._wl_physx_component_get_allowSimulation(this._id);\n    }\n    /**\n     * Set whether this rigid body's allowQuery flag is enabled.\n     *\n     * @param b Whether the rigid body's allowQuery flag should be enabled.\n     */\n    set allowQuery(b) {\n        this._engine.wasm._wl_physx_component_set_allowQuery(this._id, b);\n    }\n    /**\n     * Whether this rigid body's allowQuery flag is enabled.\n     */\n    get allowQuery() {\n        return !!this._engine.wasm._wl_physx_component_get_allowQuery(this._id);\n    }\n    /**\n     * Set whether this rigid body's trigger flag is enabled.\n     * AllowSimulation and trigger can not be enabled at the same time.\n     * Enabling trigger while allowSimulation is enabled,\n     * will disable allowSimulation.\n     *\n     * @param b Whether the rigid body's trigger flag should be enabled.\n     */\n    set trigger(b) {\n        this._engine.wasm._wl_physx_component_set_trigger(this._id, b);\n    }\n    /**\n     * Whether this rigid body's trigger flag is enabled.\n     */\n    get trigger() {\n        return !!this._engine.wasm._wl_physx_component_get_trigger(this._id);\n    }\n    /**\n     * Set the shape for collision detection.\n     *\n     * @param s New shape.\n     * @since 0.8.5\n     */\n    set shape(s) {\n        this._engine.wasm._wl_physx_component_set_shape(this._id, s);\n    }\n    /** The shape for collision detection. */\n    get shape() {\n        return this._engine.wasm._wl_physx_component_get_shape(this._id);\n    }\n    /**\n     * Set additional data for the shape.\n     *\n     * Retrieved only from {@link PhysXComponent#shapeData}.\n     * @since 0.8.10\n     */\n    set shapeData(d) {\n        /* @todo: The array includes is useless and slow. */\n        if (d == null || ![Shape.TriangleMesh, Shape.ConvexMesh].includes(this.shape))\n            return;\n        this._engine.wasm._wl_physx_component_set_shape_data(this._id, d.index);\n    }\n    /**\n     * Additional data for the shape.\n     *\n     * `null` for {@link Shape} values: `None`, `Sphere`, `Capsule`, `Box`, `Plane`.\n     * `{index: n}` for `TriangleMesh` and `ConvexHull`.\n     *\n     * This data is currently only for passing onto or creating other {@link PhysXComponent}.\n     * @since 0.8.10\n     */\n    get shapeData() {\n        if (![Shape.TriangleMesh, Shape.ConvexMesh].includes(this.shape))\n            return null;\n        return { index: this._engine.wasm._wl_physx_component_get_shape_data(this._id) };\n    }\n    /**\n     * Set the shape extents for collision detection.\n     *\n     * @param e New extents for the shape.\n     * @since 0.8.5\n     */\n    set extents(e) {\n        this.extents.set(e);\n    }\n    /**\n     * The shape extents for collision detection.\n     */\n    get extents() {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_physx_component_get_extents(this._id);\n        return new Float32Array(wasm.HEAPF32.buffer, ptr, 3);\n    }\n    /**\n     * Get staticFriction.\n     */\n    get staticFriction() {\n        return this._engine.wasm._wl_physx_component_get_staticFriction(this._id);\n    }\n    /**\n     * Set staticFriction.\n     * @param v New staticFriction.\n     */\n    set staticFriction(v) {\n        this._engine.wasm._wl_physx_component_set_staticFriction(this._id, v);\n    }\n    /**\n     * Get dynamicFriction.\n     */\n    get dynamicFriction() {\n        return this._engine.wasm._wl_physx_component_get_dynamicFriction(this._id);\n    }\n    /**\n     * Set dynamicFriction\n     * @param v New dynamicDamping.\n     */\n    set dynamicFriction(v) {\n        this._engine.wasm._wl_physx_component_set_dynamicFriction(this._id, v);\n    }\n    /**\n     * Get bounciness.\n     * @since 0.9.0\n     */\n    get bounciness() {\n        return this._engine.wasm._wl_physx_component_get_bounciness(this._id);\n    }\n    /**\n     * Set bounciness.\n     * @param v New bounciness.\n     * @since 0.9.0\n     */\n    set bounciness(v) {\n        this._engine.wasm._wl_physx_component_set_bounciness(this._id, v);\n    }\n    /**\n     * Get linearDamping/\n     */\n    get linearDamping() {\n        return this._engine.wasm._wl_physx_component_get_linearDamping(this._id);\n    }\n    /**\n     * Set linearDamping.\n     * @param v New linearDamping.\n     */\n    set linearDamping(v) {\n        this._engine.wasm._wl_physx_component_set_linearDamping(this._id, v);\n    }\n    /** Get angularDamping. */\n    get angularDamping() {\n        return this._engine.wasm._wl_physx_component_get_angularDamping(this._id);\n    }\n    /**\n     * Set angularDamping.\n     * @param v New angularDamping.\n     */\n    set angularDamping(v) {\n        this._engine.wasm._wl_physx_component_set_angularDamping(this._id, v);\n    }\n    /**\n     * Set linear velocity.\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New linear velocity.\n     */\n    set linearVelocity(v) {\n        this._engine.wasm._wl_physx_component_set_linearVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /** Linear velocity or `[0, 0, 0]` if the component is not active. */\n    get linearVelocity() {\n        const wasm = this._engine.wasm;\n        wasm._wl_physx_component_get_linearVelocity(this._id, wasm._tempMem);\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, 3);\n    }\n    /**\n     * Set angular velocity\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New angular velocity\n     */\n    set angularVelocity(v) {\n        this._engine.wasm._wl_physx_component_set_angularVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /** Angular velocity or `[0, 0, 0]` if the component is not active. */\n    get angularVelocity() {\n        const wasm = this._engine.wasm;\n        wasm._wl_physx_component_get_angularVelocity(this._id, wasm._tempMem);\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, 3);\n    }\n    /**\n     * Set the components groups mask.\n     *\n     * @param flags New flags that need to be set.\n     */\n    set groupsMask(flags) {\n        this._engine.wasm._wl_physx_component_set_groupsMask(this._id, flags);\n    }\n    /**\n     * Get the components groups mask flags.\n     *\n     * Each bit represents membership to group, see example.\n     *\n     * ```js\n     * // Assign c to group 2\n     * c.groupsMask = (1 << 2);\n     *\n     * // Assign c to group 0\n     * c.groupsMask  = (1 << 0);\n     *\n     * // Assign c to group 0 and 2\n     * c.groupsMask = (1 << 0) | (1 << 2);\n     *\n     * (c.groupsMask & (1 << 2)) != 0; // true\n     * (c.groupsMask & (1 << 7)) != 0; // false\n     * ```\n     */\n    get groupsMask() {\n        return this._engine.wasm._wl_physx_component_get_groupsMask(this._id);\n    }\n    /**\n     * Set the components blocks mask.\n     *\n     * @param flags New flags that need to be set.\n     */\n    set blocksMask(flags) {\n        this._engine.wasm._wl_physx_component_set_blocksMask(this._id, flags);\n    }\n    /**\n     * Get the components blocks mask flags.\n     *\n     * Each bit represents membership to the block, see example.\n     *\n     * ```js\n     * // Block overlap with any objects in group 2\n     * c.blocksMask = (1 << 2);\n     *\n     * // Block overlap with any objects in group 0\n     * c.blocksMask  = (1 << 0)\n     *\n     * // Block overlap with any objects in group 0 and 2\n     * c.blocksMask = (1 << 0) | (1 << 2);\n     *\n     * (c.blocksMask & (1 << 2)) != 0; // true\n     * (c.blocksMask & (1 << 7)) != 0; // false\n     * ```\n     */\n    get blocksMask() {\n        return this._engine.wasm._wl_physx_component_get_blocksMask(this._id);\n    }\n    /**\n     * Set axes to lock for linear velocity.\n     *\n     * @param lock The Axis that needs to be set.\n     *\n     * Combine flags with Bitwise OR.\n     * ```js\n     * body.linearLockAxis = LockAxis.X | LockAxis.Y; // x and y set\n     * body.linearLockAxis = LockAxis.X; // y unset\n     * ```\n     *\n     * @note This has no effect if the component is static.\n     */\n    set linearLockAxis(lock) {\n        this._engine.wasm._wl_physx_component_set_linearLockAxis(this._id, lock);\n    }\n    /**\n     * Get the linear lock axes flags.\n     *\n     * To get the state of a specific flag, Bitwise AND with the LockAxis needed.\n     *\n     * ```js\n     * if(body.linearLockAxis & LockAxis.Y) {\n     *     console.log(\"The Y flag was set!\");\n     * }\n     * ```\n     *\n     * @return axes that are currently locked for linear movement.\n     */\n    get linearLockAxis() {\n        return this._engine.wasm._wl_physx_component_get_linearLockAxis(this._id);\n    }\n    /**\n     * Set axes to lock for angular velocity.\n     *\n     * @param lock The Axis that needs to be set.\n     *\n     * ```js\n     * body.angularLockAxis = LockAxis.X | LockAxis.Y; // x and y set\n     * body.angularLockAxis = LockAxis.X; // y unset\n     * ```\n     *\n     * @note This has no effect if the component is static.\n     */\n    set angularLockAxis(lock) {\n        this._engine.wasm._wl_physx_component_set_angularLockAxis(this._id, lock);\n    }\n    /**\n     * Get the angular lock axes flags.\n     *\n     * To get the state of a specific flag, Bitwise AND with the LockAxis needed.\n     *\n     * ```js\n     * if(body.angularLockAxis & LockAxis.Y) {\n     *     console.log(\"The Y flag was set!\");\n     * }\n     * ```\n     *\n     * @return axes that are currently locked for angular movement.\n     */\n    get angularLockAxis() {\n        return this._engine.wasm._wl_physx_component_get_angularLockAxis(this._id);\n    }\n    /**\n     * Set mass.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * @param m New mass.\n     */\n    set mass(m) {\n        this._engine.wasm._wl_physx_component_set_mass(this._id, m);\n    }\n    /** Mass */\n    get mass() {\n        return this._engine.wasm._wl_physx_component_get_mass(this._id);\n    }\n    /**\n     * Set mass space interia tensor.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New mass space interatia tensor.\n     */\n    set massSpaceInteriaTensor(v) {\n        this._engine.wasm._wl_physx_component_set_massSpaceInertiaTensor(this._id, v[0], v[1], v[2]);\n    }\n    /**\n     * Apply a force.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     * @param localForce Whether the force vector is in local space, default `false`.\n     * @param p Position to apply force at, default is center of mass.\n     * @param local Whether position is in local space, default `false`.\n     */\n    addForce(f, m, localForce, p, local) {\n        /* @todo: `localForce` should be a boolean`. */\n        m = m || ForceMode.Force;\n        if (!p) {\n            this._engine.wasm._wl_physx_component_addForce(this._id, f[0], f[1], f[2], m, !!localForce);\n        }\n        else {\n            this._engine.wasm._wl_physx_component_addForceAt(this._id, f[0], f[1], f[2], m, !!localForce, p[0], p[1], p[2], !!local);\n        }\n    }\n    /**\n     * Apply torque.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     */\n    addTorque(f, m = ForceMode.Force) {\n        this._engine.wasm._wl_physx_component_addTorque(this._id, f[0], f[1], f[2], m);\n    }\n    /**\n     * Add on collision callback.\n     *\n     * @param callback Function to call when this rigid body (un)collides with any other.\n     *\n     * ```js\n     *  let rigidBody = this.object.getComponent('physx');\n     *  rigidBody.onCollision(function(type, other) {\n     *      // Ignore uncollides\n     *      if(type == CollisionEventType.TouchLost) return;\n     *\n     *      // Take damage on collision with enemies\n     *      if(other.object.name.startsWith('enemy-')) {\n     *          this.applyDamage(10);\n     *      }\n     *  }.bind(this));\n     * ```\n     *\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollision(callback) {\n        return this.onCollisionWith(this, callback);\n    }\n    /**\n     * Add filtered on collision callback.\n     *\n     * @param otherComp Component for which callbacks will\n     *        be triggered. If you pass this component, the method is equivalent to.\n     *        {@link PhysXComponent#onCollision}.\n     * @param callback Function to call when this rigid body\n     *        (un)collides with `otherComp`.\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollisionWith(otherComp, callback) {\n        const physics = this._engine.physics;\n        physics._callbacks[this._id] = physics._callbacks[this._id] || [];\n        physics._callbacks[this._id].push(callback);\n        return this._engine.wasm._wl_physx_component_addCallback(this._id, otherComp._id || this._id);\n    }\n    /**\n     * Remove a collision callback added with {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     *\n     * @param callbackId Callback id as returned by {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     * @throws When the callback does not belong to the component.\n     * @throws When the callback does not exist.\n     */\n    removeCollisionCallback(callbackId) {\n        const physics = this._engine.physics;\n        const r = this._engine.wasm._wl_physx_component_removeCallback(this._id, callbackId);\n        /* r is the amount of object to remove from the end of the\n         * callbacks array for this object */\n        if (r)\n            physics._callbacks[this._id].splice(-r);\n    }\n}\n/** @todo: Remove as this might break tree-shaking. Instead, would be better\n * to extend the `toJSON` method to serialize / unserialize. */\nfor (const prop of [\n    'static',\n    'extents',\n    'staticFriction',\n    'dynamicFriction',\n    'bounciness',\n    'linearDamping',\n    'angularDamping',\n    'shape',\n    'shapeData',\n    'kinematic',\n    'linearVelocity',\n    'angularVelocity',\n    'mass',\n]) {\n    Object.defineProperty(PhysXComponent.prototype, prop, { enumerable: true });\n}\nexport { PhysXComponent };\n/**\n * Access to the physics scene\n */\nexport class Physics {\n    /**\n     * @hidden\n     *\n     * **Note**: This is public to emulate a `friend` accessor.\n     */\n    _callbacks;\n    /** Wonderland Engine instance */\n    _engine;\n    /** Ray Hit */\n    _rayHit;\n    /** Hit. */\n    _hit;\n    constructor(engine) {\n        this._engine = engine;\n        this._rayHit = engine.wasm._malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(this._engine, this._rayHit);\n        this._callbacks = {};\n    }\n    /**\n     * Cast a ray through the physics scene and find intersecting objects.\n     *\n     * The resulting ray hit will contain **up to 4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param group Collision group to filter by: only objects that are\n     *        part of given group are considered for raycast.\n     * @param maxDistance Maximum ray distance, default `100.0`.\n     *\n     * @returns The RayHit instance, belonging to this class.\n     *\n     * @note The returned {@link RayHit} object is owned by the Physics instance and\n     *       will be reused with the next {@link Physics#rayCast} call.\n     */\n    rayCast(o, d, group, maxDistance) {\n        if (typeof maxDistance === 'undefined')\n            maxDistance = 100.0;\n        this._engine.wasm._wl_physx_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, maxDistance || 100, this._rayHit);\n        return this._hit;\n    }\n}\n/**\n * Mesh index type.\n */\nexport var MeshIndexType;\n(function (MeshIndexType) {\n    /** Single byte mesh index, range 0-255 */\n    MeshIndexType[MeshIndexType[\"UnsignedByte\"] = 1] = \"UnsignedByte\";\n    /** Two byte mesh index, range 0-65535 */\n    MeshIndexType[MeshIndexType[\"UnsignedShort\"] = 2] = \"UnsignedShort\";\n    /** Four byte mesh index, range 0-4294967295 */\n    MeshIndexType[MeshIndexType[\"UnsignedInt\"] = 4] = \"UnsignedInt\";\n})(MeshIndexType || (MeshIndexType = {}));\n/**\n * Wrapper around a native mesh data.\n *\n * To modify a mesh, you get access to a {@link MeshAttributeAccessor} that allows you to modify\n * the content of the buffers:\n *\n * Usage:\n *\n * ```js\n * const mesh = new Mesh(engine, {vertexCount: 3, indexData: [0, 1, 2] });\n * const positions = mesh.attribute(MeshAttribute.Position);\n * ...\n * ```\n */\nexport class Mesh {\n    /**\n     * Size of a vertex in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttributeAccessor}\n     */\n    static get VERTEX_FLOAT_SIZE() {\n        return 3 + 3 + 2;\n    }\n    /**\n     * Size of a vertex in bytes.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttributeAccessor}\n     */\n    static get VERTEX_SIZE() {\n        return this.VERTEX_FLOAT_SIZE * 4;\n    }\n    /**\n     * Position attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#Position}\n     */\n    static get POS() {\n        return { X: 0, Y: 1, Z: 2 };\n    }\n    /**\n     * Texture coordinate attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#TextureCoordinate}\n     */\n    static get TEXCOORD() {\n        return { U: 3, V: 4 };\n    }\n    /**\n     * Normal attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#Normal}\n     */\n    static get NORMAL() {\n        return { X: 5, Y: 6, Z: 7 };\n    }\n    /**\n     * Index of the mesh in the manager.\n     *\n     * @hidden\n     */\n    _index;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /**\n     * Create a new instance.\n     *\n     * @param params Either a mesh index to wrap or set of parameters to create a new mesh.\n     *    For more information, please have a look at the {@link MeshParameters} interface.\n     */\n    constructor(engine, params) {\n        this._engine = engine ?? WL;\n        if (typeof params === 'object') {\n            if (!params.vertexCount && params.vertexData) {\n                params.vertexCount = params.vertexData.length / Mesh.VERTEX_FLOAT_SIZE;\n            }\n            if (!params.vertexCount)\n                throw new Error(\"Missing parameter 'vertexCount'\");\n            const wasm = this._engine.wasm;\n            let indexData = 0;\n            let indexType = 0;\n            let indexDataSize = 0;\n            if (params.indexData) {\n                indexType = params.indexType || MeshIndexType.UnsignedShort;\n                indexDataSize = params.indexData.length * indexType;\n                indexData = wasm._malloc(indexDataSize);\n                /* Copy the index data into wasm memory */\n                switch (indexType) {\n                    case MeshIndexType.UnsignedByte:\n                        wasm.HEAPU8.set(params.indexData, indexData);\n                        break;\n                    case MeshIndexType.UnsignedShort:\n                        wasm.HEAPU16.set(params.indexData, indexData >> 1);\n                        break;\n                    case MeshIndexType.UnsignedInt:\n                        wasm.HEAPU32.set(params.indexData, indexData >> 2);\n                        break;\n                }\n            }\n            const { skinned = false } = params;\n            this._index = wasm._wl_mesh_create(indexData, indexDataSize, indexType, params.vertexCount, skinned);\n            if (params.vertexData) {\n                const positions = this.attribute(MeshAttribute.Position);\n                const normals = this.attribute(MeshAttribute.Normal);\n                const textureCoordinates = this.attribute(MeshAttribute.TextureCoordinate);\n                for (let i = 0; i < params.vertexCount; ++i) {\n                    const start = i * Mesh.VERTEX_FLOAT_SIZE;\n                    positions.set(i, params.vertexData.subarray(start, start + 3));\n                    textureCoordinates?.set(i, params.vertexData.subarray(start + 3, start + 5));\n                    normals?.set(i, params.vertexData.subarray(start + 5, start + 8));\n                }\n            }\n        }\n        else {\n            this._index = params;\n        }\n    }\n    /**\n     * Vertex data (read-only).\n     *\n     * @deprecated Replaced with {@link attribute}\n     */\n    get vertexData() {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_mesh_get_vertexData(this._index, this._engine.wasm._tempMem);\n        return new Float32Array(wasm.HEAPF32.buffer, ptr, Mesh.VERTEX_FLOAT_SIZE * wasm.HEAPU32[this._engine.wasm._tempMem / 4]);\n    }\n    /** Number of vertices in this mesh. */\n    get vertexCount() {\n        return this._engine.wasm._wl_mesh_get_vertexCount(this._index);\n    }\n    /** Index data (read-only) or `null` if the mesh is not indexed. */\n    get indexData() {\n        const wasm = this._engine.wasm;\n        const tempMem = wasm._tempMem;\n        const ptr = wasm._wl_mesh_get_indexData(this._index, tempMem, tempMem + 4);\n        if (ptr === null)\n            return null;\n        const indexCount = wasm.HEAPU32[tempMem / 4];\n        const indexSize = wasm.HEAPU32[tempMem / 4 + 1];\n        switch (indexSize) {\n            case MeshIndexType.UnsignedByte:\n                return new Uint8Array(wasm.HEAPU8.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedShort:\n                return new Uint16Array(wasm.HEAPU16.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedInt:\n                return new Uint32Array(wasm.HEAPU32.buffer, ptr, indexCount);\n        }\n        return null;\n    }\n    /**\n     * Apply changes to {@link attribute | vertex attributes}.\n     *\n     * Uploads the updated vertex attributes to the GPU and updates the bounding\n     * sphere to match the new vertex positions.\n     *\n     * Since this is an expensive operation, call it only once you have performed\n     * all modifications on a mesh and avoid calling if you did not perform any\n     * modifications at all.\n     */\n    update() {\n        this._engine.wasm._wl_mesh_update(this._index);\n    }\n    /**\n     * Mesh bounding sphere.\n     *\n     * @param out Preallocated array to write into, to avoid garbage,\n     *     otherwise will allocate a new {@link Float32Array}.\n     *\n     * ```js\n     *  const sphere = new Float32Array(4);\n     *  for(...) {\n     *      mesh.getBoundingSphere(sphere);\n     *      ...\n     *  }\n     * ```\n     *\n     * If the position data is changed, call {@link Mesh#update} to update the\n     * bounding sphere.\n     *\n     * @returns Bounding sphere, 0-2 sphere origin, 3 radius.\n     */\n    getBoundingSphere(out = new Float32Array(4)) {\n        const tempMemFloat = this._engine.wasm._tempMemFloat;\n        this._engine.wasm._wl_mesh_get_boundingSphere(this._index, this._engine.wasm._tempMem);\n        out[0] = tempMemFloat[0];\n        out[1] = tempMemFloat[1];\n        out[2] = tempMemFloat[2];\n        out[3] = tempMemFloat[3];\n        return out;\n    }\n    /**\n     * Get an attribute accessor to retrieve or modify data of give attribute.\n     *\n     * @param attr Attribute to get access to\n     * @returns Attribute to get access to or `null`, if mesh does not have this attribute.\n     *\n     * Call {@link update} for changes to vertex attributes to take effect.\n     *\n     * If there are no shaders in the scene that use `TextureCoordinate` for example,\n     * no meshes will have the `TextureCoordinate` attribute.\n     *\n     * For flexible reusable components, take this into account that only `Position`\n     * is guaranteed to be present at all time.\n     */\n    attribute(attr) {\n        if (typeof attr != 'number')\n            throw new TypeError('Expected number, but got ' + typeof attr);\n        const tempMemUint32 = this._engine.wasm._tempMemUint32;\n        this._engine.wasm._wl_mesh_get_attribute(this._index, attr, this._engine.wasm._tempMem);\n        if (tempMemUint32[0] == 255)\n            return null;\n        const a = new MeshAttributeAccessor(this._engine, attr);\n        a._attribute = tempMemUint32[0];\n        a._offset = tempMemUint32[1];\n        a._stride = tempMemUint32[2];\n        a._formatSize = tempMemUint32[3];\n        a._componentCount = tempMemUint32[4];\n        const arraySize = tempMemUint32[5];\n        /* The WASM api returns `0` for a scalar value. We clamp it to 1 as we strictly use it as a multiplier for get/set operations */\n        a._arraySize = arraySize ? arraySize : 1;\n        a.length = this.vertexCount;\n        return a;\n    }\n    /**\n     * Destroy and free the meshes memory.\n     *\n     * It is best practice to set the mesh variable to `null` after calling\n     * destroy to prevent accidental use:\n     *\n     * ```js\n     *   mesh.destroy();\n     *   mesh = null;\n     * ```\n     *\n     * Accessing the mesh after destruction behaves like accessing an empty\n     * mesh.\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        this._engine.wasm._wl_mesh_destroy(this._index);\n    }\n}\n/**\n * An iterator over a mesh vertex attribute.\n *\n * Usage:\n *\n * ```js\n *   const mesh = this.object.getComponent('mesh').mesh;\n *   const positions = mesh.attribute(WL.MeshAttribute.Position);\n *\n *   const temp = new Float32Array(3);\n *   for(int i = 0; i < positions.length; ++i) {\n *       // pos will reference temp and thereby not allocate additional\n *       // JavaScript garbage, which would cause a perf spike when collected.\n *       const pos = positions.get(i, temp);\n *       // scale position by 2 on X axis only\n *       pos[0] *= 2.0f;\n *       positions.set(i, pos);\n *   }\n *   // we're done modifying, tell the engine to move vertex data to the GPU\n *   mesh.update();\n * ```\n */\nexport class MeshAttributeAccessor {\n    /** Attribute index. @hidden */\n    _attribute = -1;\n    /** Attribute offset. @hidden */\n    _offset = 0;\n    /** Attribute stride. @hidden */\n    _stride = 0;\n    /** Format size native enum. @hidden */\n    _formatSize = 0;\n    /** Number of components per vertex. @hidden */\n    _componentCount = 0;\n    /** Number of values per vertex. @hidden */\n    _arraySize = 1;\n    /** Max number of elements. */\n    length = 0;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /**\n     * Class to instantiate an ArrayBuffer to get/set values.\n     */\n    _bufferType;\n    /**\n     * Function to allocate temporary WASM memory. This is cached to avoid\n     * any conditional during get/set.\n     */\n    _tempBufferGetter;\n    /**\n     * Create a new instance.\n     *\n     * @param type The type of data this accessor is wrapping.\n     * @note Do not use this constructor. Instead, please use the {@link Mesh.attribute} method.\n     *\n     * @hidden\n     */\n    constructor(engine, type = MeshAttribute.Position) {\n        this._engine = engine;\n        const wasm = this._engine.wasm;\n        switch (type) {\n            case MeshAttribute.Position:\n            case MeshAttribute.Normal:\n            case MeshAttribute.TextureCoordinate:\n            case MeshAttribute.Tangent:\n            case MeshAttribute.Color:\n            case MeshAttribute.JointWeight:\n                this._bufferType = Float32Array;\n                this._tempBufferGetter = wasm.getTempBufferF32.bind(wasm);\n                break;\n            case MeshAttribute.JointId:\n                this._bufferType = Uint16Array;\n                this._tempBufferGetter = wasm.getTempBufferU16.bind(wasm);\n                break;\n            case MeshAttribute.SecondaryJointWeight:\n            case MeshAttribute.SecondaryJointId:\n                /* @todo: Completely remove occurrences of SecondaryJointId for 1.0 */\n                console.error(`Deprecated attribute accessor type: ${type}`);\n            default:\n                throw new Error(`Invalid attribute accessor type: ${type}`);\n        }\n    }\n    /**\n     * Create a new TypedArray to hold this attribute values.\n     *\n     * This method is useful to create a view to hold the data to\n     * pass to {@link MeshAttributeAccessor.get} and {@link MeshAttributeAccessor.set}\n     *\n     * Example:\n     *\n     * ```js\n     * const vertexCount = 4;\n     * const positionAttribute = mesh.attribute(MeshAttributes.Position);\n     *\n     * // A position has 3 floats per vertex. Thus, positions has length 3 * 4.\n     * const positions = positionAttribute.createArray(vertexCount);\n     * ```\n     *\n     * @param count The number of **vertices** expected.\n     * @returns A TypedArray with the appropriate format to access the data\n     */\n    createArray(count = 1) {\n        count = count > this.length ? this.length : count;\n        return new this._bufferType(count * this._componentCount * this._arraySize);\n    }\n    /**\n     * Get attribute element.\n     *\n     * @param index Index\n     * @param out Preallocated array to write into,\n     *      to avoid garbage, otherwise will allocate a new TypedArray.\n     *\n     * `out.length` needs to be a multiple of the attributes component count, see\n     * {@link MeshAttribute}. If `out.length` is more than one multiple, it will be\n     * filled with the next n attribute elements, which can reduce overhead\n     * of this call.\n     *\n     * @returns The `out` parameter\n     */\n    get(index, out = this.createArray()) {\n        if (out.length % this._componentCount !== 0)\n            throw new Error(`out.length, ${out.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        const dest = this._tempBufferGetter(out.length);\n        const elementSize = this._bufferType.BYTES_PER_ELEMENT;\n        const destSize = elementSize * out.length;\n        const srcFormatSize = this._formatSize * this._arraySize;\n        const destFormatSize = this._componentCount * elementSize * this._arraySize;\n        this._engine.wasm._wl_mesh_get_attribute_values(this._attribute, srcFormatSize, this._offset + index * this._stride, this._stride, destFormatSize, dest.byteOffset, destSize);\n        for (let i = 0; i < out.length; ++i)\n            out[i] = dest[i];\n        return out;\n    }\n    /**\n     * Set attribute element.\n     *\n     * @param i Index\n     * @param v Value to set the element to\n     *\n     * `v.length` needs to be a multiple of the attributes component count, see\n     * {@link MeshAttribute}. If `v.length` is more than one multiple, it will be\n     * filled with the next n attribute elements, which can reduce overhead\n     * of this call.\n     *\n     * @returns Reference to self (for method chaining)\n     */\n    set(i, v) {\n        if (v.length % this._componentCount !== 0)\n            throw new Error(`out.length, ${v.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        const elementSize = this._bufferType.BYTES_PER_ELEMENT;\n        const srcSize = elementSize * v.length;\n        const srcFormatSize = this._componentCount * elementSize * this._arraySize;\n        const destFormatSize = this._formatSize * this._arraySize;\n        const wasm = this._engine.wasm;\n        /* Unless we are already working with data from WASM heap, we\n         * need to copy into temporary memory. */\n        if (v.buffer != wasm.HEAPU8.buffer) {\n            const dest = this._tempBufferGetter(v.length);\n            dest.set(v);\n            v = dest;\n        }\n        wasm._wl_mesh_set_attribute_values(this._attribute, srcFormatSize, v.byteOffset, srcSize, destFormatSize, this._offset + i * this._stride, this._stride);\n        return this;\n    }\n}\n/**\n * Wrapper around a native material.\n *\n * Each material instance will have properties associated to the pipeline it uses.\n * The material properties are automatically added to each material instance, example:\n *\n * ```js\n * const material = mesh.material; // Material with a `Phong Opaque Textured` pipeline\n * // You can access all the material properties from the editor using:\n * material.diffuseTexture = null;\n * material.diffuseColor = [1.0, 0.0, 0.0, 1.0];\n * ```\n */\nexport class Material {\n    /**\n     * Index of this material in the manager.\n     *\n     * @hidden\n     */\n    _index;\n    /**\n     * Material definition index in the scene.\n     *\n     * @hidden\n     */\n    _definition;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /**\n     * Create a new Material.\n     *\n     * @note Creating material is expensive. Please use {@link Material#clone} to clone a material.\n     * @note Do not use this constructor directly with an index, this is reserved for internal purposes.\n     */\n    constructor(engine, params) {\n        this._engine = engine;\n        if (typeof params !== 'number') {\n            if (!params?.pipeline)\n                throw new Error(\"Missing parameter 'pipeline'\");\n            const wasm = this._engine.wasm;\n            const pipeline = params.pipeline;\n            const lengthBytes = wasm.lengthBytesUTF8(pipeline) + 1;\n            wasm.stringToUTF8(pipeline, wasm._tempMem, lengthBytes);\n            this._index = wasm._wl_material_create(wasm._tempMem);\n            if (this._index < 0)\n                throw new Error(`No such pipeline '${pipeline}'`);\n        }\n        else {\n            this._index = params;\n        }\n        this._definition = this._engine.wasm._wl_material_get_definition(this._index);\n        if (!this._engine.wasm._materialDefinitions[this._definition])\n            throw new Error(`Material Definition ${this._definition} not found for material with index ${this._index}`);\n        return new Proxy(this, {\n            get(target, prop) {\n                const wasm = engine.wasm;\n                const definition = wasm._materialDefinitions[target._definition];\n                const param = definition.get(prop);\n                if (!param)\n                    return target[prop];\n                if (wasm._wl_material_get_param_value(target._index, param.index, wasm._tempMem)) {\n                    const type = param.type;\n                    switch (type.type) {\n                        case MaterialParamType.UnsignedInt:\n                            return type.componentCount == 1\n                                ? wasm._tempMemUint32[0]\n                                : new Uint32Array(wasm.HEAPU32.buffer, wasm._tempMem, type.componentCount);\n                        case MaterialParamType.Int:\n                            return type.componentCount == 1\n                                ? wasm._tempMemInt[0]\n                                : new Int32Array(wasm.HEAP32.buffer, wasm._tempMem, type.componentCount);\n                        case MaterialParamType.Float:\n                            return type.componentCount == 1\n                                ? wasm._tempMemFloat[0]\n                                : new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, type.componentCount);\n                        case MaterialParamType.Sampler:\n                            return new Texture(engine, wasm._tempMemInt[0]);\n                        default:\n                            throw new Error(`Invalid type ${type} on parameter ${param.index} for material ${target._index}`);\n                    }\n                }\n            },\n            set(target, prop, value) {\n                const wasm = engine.wasm;\n                const definition = wasm._materialDefinitions[target._definition];\n                const param = definition.get(prop);\n                if (!param) {\n                    target[prop] = value;\n                    return true;\n                }\n                const type = param.type;\n                switch (type.type) {\n                    case MaterialParamType.UnsignedInt:\n                    case MaterialParamType.Int:\n                    case MaterialParamType.Sampler:\n                        const v = value.id ?? value;\n                        wasm._wl_material_set_param_value_uint(target._index, param.index, v);\n                        break;\n                    case MaterialParamType.Float:\n                        let count = 1;\n                        if (typeof value === 'number') {\n                            wasm._tempMemFloat[0] = value;\n                        }\n                        else {\n                            count = value.length;\n                            for (let i = 0; i < count; ++i)\n                                wasm._tempMemFloat[i] = value[i];\n                        }\n                        wasm._wl_material_set_param_value_float(target._index, param.index, wasm._tempMem, count);\n                        break;\n                    case MaterialParamType.Font:\n                        throw new Error('Setting font properties is currently unsupported.');\n                }\n                return true;\n            },\n        });\n    }\n    /** Name of the shader used by this material. */\n    get shader() {\n        const wasm = this._engine.wasm;\n        return wasm.UTF8ToString(wasm._wl_material_get_shader(this._index));\n    }\n    /**\n     * Create a copy of the underlying native material.\n     *\n     * @returns Material clone.\n     */\n    clone() {\n        const id = this._engine.wasm._wl_material_clone(this._index);\n        return id > 0 ? new Material(this._engine, id) : null;\n    }\n    /**\n     * Wrap a native material index.\n     *\n     * @param engine Engine instance.\n     * @param index The index.\n     * @returns Material instance or `null` if index <= 0.\n     *\n     * @deprecated Please use `new Material()` instead.\n     */\n    static wrap(engine, index) {\n        /** @todo: this propagate nullable in the entire codebase. Remove. */\n        return index > 0 ? new Material(engine, index) : null;\n    }\n}\n/** Temporary canvas */\nlet tempCanvas = null;\n/**\n * Wrapper around a native texture data.\n */\nexport class Texture {\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /** Index in the manager. @hidden */\n    _id = 0;\n    /** HTML image index. @hidden */\n    _imageIndex = undefined; /* @todo: Remove undefined */\n    /**\n     * @param engine The engine instance\n     * @param param HTML media element to create texture from or texture id to wrap.\n     */\n    constructor(engine, param) {\n        this._engine = engine ?? WL;\n        const wasm = engine.wasm;\n        if (param instanceof HTMLImageElement ||\n            param instanceof HTMLVideoElement ||\n            param instanceof HTMLCanvasElement) {\n            const index = wasm._images.length;\n            wasm._images.push(param);\n            this._imageIndex = index;\n            this._id = this._engine.wasm._wl_renderer_addImage(index);\n        }\n        else {\n            this._id = param;\n        }\n        this._engine.textures[this._id] = this;\n    }\n    /** Whether this texture is valid. */\n    get valid() {\n        return this._id >= 0;\n    }\n    /** Index in this manager. */\n    get id() {\n        return this._id;\n    }\n    /** Update the texture to match the HTML element (e.g. reflect the current frame of a video). */\n    update() {\n        if (!this.valid)\n            return;\n        this._engine.wasm._wl_renderer_updateImage(this._id, this._imageIndex);\n    }\n    /** Width of the texture. */\n    get width() {\n        return this._engine.wasm._wl_texture_width(this._id);\n    }\n    /** Height of the texture. */\n    get height() {\n        return this._engine.wasm._wl_texture_height(this._id);\n    }\n    /**\n     * Update a subrange on the texture to match the HTML element (e.g. reflect the current frame of a video).\n     *\n     * Usage:\n     *\n     * ```js\n     * // Copies rectangle of pixel starting from (10, 20)\n     * texture.updateSubImage(10, 20, 600, 400);\n     * ```\n     *\n     * @param x x offset\n     * @param y y offset\n     * @param w width\n     * @param h height\n     */\n    updateSubImage(x, y, w, h) {\n        if (!this.valid)\n            return;\n        /* Lazy initialize temp canvas */\n        if (!tempCanvas)\n            tempCanvas = document.createElement('canvas');\n        const wasm = this._engine.wasm;\n        const img = wasm._images[this._imageIndex];\n        if (!img)\n            return;\n        tempCanvas.width = w;\n        tempCanvas.height = h;\n        /* @todo: Would be smarted to cache context. */\n        tempCanvas.getContext('2d')?.drawImage(img, x, y, w, h, 0, 0, w, h);\n        /* @todo: Do not store temporary canvas. */\n        wasm._images[this._imageIndex] = tempCanvas;\n        try {\n            wasm._wl_renderer_updateImage(this._id, this._imageIndex, x, (img.videoHeight || img.height) - y - h);\n        }\n        finally {\n            wasm._images[this._imageIndex] = img;\n        }\n    }\n    /**\n     * Destroy and free the texture's texture altas space and memory.\n     *\n     * It is best practice to set the texture variable to `null` after calling\n     * destroy to prevent accidental use of the invalid texture:\n     *\n     * ```js\n     *   texture.destroy();\n     *   texture = null;\n     * ```\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        this._engine.wasm._wl_texture_destroy(this._id);\n        if (this._imageIndex) {\n            this._engine.wasm._images[this._imageIndex] = null;\n            this._imageIndex = undefined;\n        }\n    }\n}\n/**\n * Wrapper around a native animation.\n */\nexport class Animation {\n    /** Index of the mesh in the manager. @hidden */\n    _index;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /**\n     * @param index Index in the manager\n     */\n    constructor(engine = WL, index) {\n        this._engine = engine;\n        this._index = index;\n    }\n    /** Duration of this animation. */\n    get duration() {\n        return this._engine.wasm._wl_animation_get_duration(this._index);\n    }\n    /** Number of tracks in this animation. */\n    get trackCount() {\n        return this._engine.wasm._wl_animation_get_trackCount(this._index);\n    }\n    /**\n     * Clone this animation retargeted to a new set of objects.\n     *\n     * The clone shares most of the data with the original and is therefore\n     * light-weight.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * If retargetting to {@link Skin}, the join names will be used to determine a mapping\n     * from the previous skin to the new skin. The source skin will be retrieved from\n     * the first track in the animation that targets a joint.\n     *\n     * @param newTargets New targets per track. Expected to have\n     *      {@link Animation#trackCount} elements or to be a {@link Skin}.\n     * @returns The retargeted clone of this animation.\n     */\n    retarget(newTargets) {\n        const wasm = this._engine.wasm;\n        if (newTargets instanceof Skin) {\n            const animId = wasm._wl_animation_retargetToSkin(this._index, newTargets._index);\n            return new Animation(this._engine, animId);\n        }\n        if (newTargets.length != this.trackCount) {\n            throw Error('Expected ' +\n                this.trackCount.toString() +\n                ' targets, but got ' +\n                newTargets.length.toString());\n        }\n        const ptr = wasm._malloc(2 * newTargets.length);\n        for (let i = 0; i < newTargets.length; ++i) {\n            wasm.HEAPU16[ptr >> (1 + i)] = newTargets[i].objectId;\n        }\n        const animId = wasm._wl_animation_retarget(this._index, ptr);\n        wasm._free(ptr);\n        return new Animation(this._engine, animId);\n    }\n}\n/**\n * Scene graph object.\n *\n * Node in the scene graph or \"entity\". Consists of transformation and a reference\n * to its parent object. Usually holds components and is accessible by components\n * through {@link Component#object}.\n *\n * Objects are stored in a data oriented manner inside WebAssembly memory. This class\n * is a JavaScript API wrapper around this memory for more convenient use in\n * components.\n *\n * Objects can be created and added to a scene through\n * {@link Scene#addObject} on the {@link WonderlandEngine.scene}.\n */\nclass $Object {\n    /**\n     * Object index in the manager.\n     */\n    objectId; /* @todo: Make private */\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /**\n     * @param o Object id to wrap\n     *\n     * For performance reasons, please use {@link WonderlandEngine.wrapObject}\n     */\n    constructor(engine, o) {\n        this.objectId = o;\n        this._engine = engine;\n    }\n    /**\n     * Name of the object.\n     *\n     * Useful for identifying objects during debugging.\n     */\n    get name() {\n        const wasm = this._engine.wasm;\n        return wasm.UTF8ToString(wasm._wl_object_name(this.objectId));\n    }\n    /**\n     * Set the object's name.\n     *\n     * @param newName The new name to set.\n     */\n    set name(newName) {\n        const wasm = this._engine.wasm;\n        const lengthBytes = wasm.lengthBytesUTF8(newName) + 1;\n        const mem = wasm._malloc(lengthBytes);\n        wasm.stringToUTF8(newName, mem, lengthBytes);\n        wasm._wl_object_set_name(this.objectId, mem);\n        wasm._free(mem);\n    }\n    /**\n     * Parent of this object or `null` if parented to root.\n     */\n    get parent() {\n        const p = this._engine.wasm._wl_object_parent(this.objectId);\n        return p === 0 ? null : this._engine.wrapObject(p);\n    }\n    /**\n     * Children of this object.\n     */\n    get children() {\n        const childrenCount = this._engine.wasm._wl_object_get_children_count(this.objectId);\n        if (childrenCount === 0)\n            return [];\n        const wasm = this._engine.wasm;\n        wasm.requireTempMem(childrenCount * 2);\n        this._engine.wasm._wl_object_get_children(this.objectId, wasm._tempMem, wasm._tempMemSize >> 1);\n        const children = new Array(childrenCount);\n        for (let i = 0; i < childrenCount; ++i) {\n            children[i] = this._engine.wrapObject(wasm._tempMemUint16[i]);\n        }\n        return children;\n    }\n    /**\n     * Reparent object to given object.\n     *\n     * @note Reparenting is not trivial and might have a noticeable performance impact.\n     *\n     * @param newParent New parent or `null` to parent to root\n     */\n    set parent(newParent) {\n        this._engine.wasm._wl_object_set_parent(this.objectId, newParent == null ? 0 : newParent.objectId);\n    }\n    /** Reset local transformation (translation, rotation and scaling) to identity. */\n    resetTransform() {\n        this._engine.wasm._wl_object_reset_translation_rotation(this.objectId);\n        this._engine.wasm._wl_object_reset_scaling(this.objectId);\n    }\n    /** Reset local translation and rotation to identity */\n    resetTranslationRotation() {\n        this._engine.wasm._wl_object_reset_translation_rotation(this.objectId);\n    }\n    /**\n     * Reset local rotation, keep translation.\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     */\n    resetRotation() {\n        this._engine.wasm._wl_object_reset_rotation(this.objectId);\n    }\n    /**\n     * Reset local translation, keep rotation.\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     */\n    resetTranslation() {\n        this._engine.wasm._wl_object_reset_translation(this.objectId);\n    }\n    /** Reset local scaling to identity (``[1.0, 1.0, 1.0]``). */\n    resetScaling() {\n        this._engine.wasm._wl_object_reset_scaling(this.objectId);\n    }\n    /**\n     * Translate object by a vector in the parent's space.\n     * @param v Vector to translate by.\n     */\n    translate(v) {\n        this._engine.wasm._wl_object_translate(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Translate object by a vector in object space.\n     * @param v Vector to translate by.\n     */\n    translateObject(v) {\n        this._engine.wasm._wl_object_translate_obj(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Translate object by a vector in world space.\n     * @param v Vector to translate by.\n     */\n    translateWorld(v) {\n        this._engine.wasm._wl_object_translate_world(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in local space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleRad}\n     */\n    rotateAxisAngleDeg(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in local space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in radians.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleDeg}\n     */\n    rotateAxisAngleRad(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle_rad(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in object space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @see {@link rotateAxisAngleRadObject}\n     */\n    rotateAxisAngleDegObject(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle_obj(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in object space\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param a Vector representing the rotation axis\n     * @param d Angle in degrees\n     *\n     * @see {@link rotateAxisAngleDegObject}\n     */\n    rotateAxisAngleRadObject(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle_rad_obj(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate by a quaternion.\n     *\n     * @param q the Quaternion to rotate by.\n     */\n    rotate(q) {\n        this._engine.wasm._wl_object_rotate_quat(this.objectId, q[0], q[1], q[2], q[3]);\n    }\n    /**\n     * Rotate by a quaternion in object space.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param q the Quaternion to rotate by.\n     */\n    rotateObject(q) {\n        this._engine.wasm._wl_object_rotate_quat_obj(this.objectId, q[0], q[1], q[2], q[3]);\n    }\n    /**\n     * Scale object by a vector in object space.\n     *\n     * @param v Vector to scale by.\n     */\n    scale(v) {\n        this._engine.wasm._wl_object_scale(this.objectId, v[0], v[1], v[2]);\n    }\n    /** Local / object space transformation. */\n    get transformLocal() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_trans_local(this.objectId), 8);\n    }\n    /**\n     * Set local transform.\n     *\n     * @param t Local space transformation.\n     *\n     * @since 0.8.5\n     */\n    set transformLocal(t) {\n        this.transformLocal.set(t);\n        this.setDirty();\n    }\n    /**\n     * Compute local / object space translation from transformation.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getTranslationLocal(out) {\n        const wasm = this._engine.wasm;\n        wasm._wl_object_get_translation_local(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Compute world space translation from transformation.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getTranslationWorld(out) {\n        const wasm = this._engine.wasm;\n        wasm._wl_object_get_translation_world(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Set local / object space translation.\n     *\n     * Concatenates a new translation dual quaternion onto the existing rotation.\n     *\n     * @param v New local translation array/vector, expected to have at least 3 elements.\n     */\n    setTranslationLocal(v) {\n        this._engine.wasm._wl_object_set_translation_local(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Set world space translation.\n     *\n     * Applies the inverse parent transform with a new translation dual quaternion\n     * which is concatenated onto the existing rotation.\n     *\n     * @param v New world translation array/vector, expected to have at least 3 elements.\n     */\n    setTranslationWorld(v) {\n        this._engine.wasm._wl_object_set_translation_world(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Global / world space transformation.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     */\n    get transformWorld() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_trans_world(this.objectId), 8);\n    }\n    /**\n     * Set world transform.\n     *\n     * @param t Global / world space transformation.\n     *\n     * @since 0.8.5\n     */\n    set transformWorld(t) {\n        this.transformWorld.set(t);\n        this._engine.wasm._wl_object_trans_world_to_local(this.objectId);\n    }\n    /** Local / object space scaling. */\n    get scalingLocal() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_scaling_local(this.objectId), 3);\n    }\n    /**\n     * Set local space scaling.\n     *\n     * @param s Global / world space transformation.\n     *\n     * @since 0.8.7\n     */\n    set scalingLocal(s) {\n        this.scalingLocal.set(s);\n        this.setDirty();\n    }\n    /**\n     * Global / world space scaling.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     */\n    get scalingWorld() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_scaling_world(this.objectId), 3);\n    }\n    /**\n     * Set world space scaling.\n     *\n     * @param t Global / world space transformation.\n     *\n     * @since 0.8.7\n     */\n    set scalingWorld(s) {\n        this.scalingWorld.set(s);\n        this._engine.wasm._wl_object_scaling_world_to_local(this.objectId);\n    }\n    /**\n     * Local space rotation.\n     *\n     * @since 0.8.7\n     */\n    get rotationLocal() {\n        return this.transformLocal.subarray(0, 4);\n    }\n    /**\n     * Global / world space rotation\n     *\n     * @since 0.8.7\n     */\n    get rotationWorld() {\n        return this.transformWorld.subarray(0, 4);\n    }\n    /**\n     * Set local space rotation.\n     *\n     * @param r Local space rotation\n     *\n     * @since 0.8.7\n     */\n    set rotationLocal(r) {\n        this._engine.wasm._wl_object_set_rotation_local(this.objectId, r[0], r[1], r[2], r[3]);\n    }\n    /**\n     * Set world space rotation.\n     *\n     * @param r Global / world space rotation.\n     *\n     * @since 0.8.7\n     */\n    set rotationWorld(r) {\n        this._engine.wasm._wl_object_set_rotation_world(this.objectId, r[0], r[1], r[2], r[3]);\n    }\n    /**\n     * Compute the object's forward facing world space vector.\n     *\n     * The forward vector in object space is along the negative z-axis, i.e.,\n     * `[0, 0, -1]`.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getForward(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = -1;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Compute the object's up facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getUp(out) {\n        out[0] = 0;\n        out[1] = 1;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Compute the object's right facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getRight(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Transform a vector by this object's world transform.\n     *\n     * @param out Out vector\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorWorld(out, v) {\n        v = v || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorWorld(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's local transform.\n     *\n     * @param out Out vector\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorLocal(out, v) {\n        v = v || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorLocal(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's world transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointWorld(out, p) {\n        p = p || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = p[0];\n        wasm._tempMemFloat[1] = p[1];\n        wasm._tempMemFloat[2] = p[2];\n        wasm._wl_object_transformPointWorld(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointLocal(out, p) {\n        p = p || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = p[0];\n        wasm._tempMemFloat[1] = p[1];\n        wasm._tempMemFloat[2] = p[2];\n        wasm._wl_object_transformPointLocal(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's inverse world transform.\n     *\n     * @param out Out vector.\n     * @param v Vector to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseWorld(out, v) {\n        v = v || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorInverseWorld(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's inverse local transform.\n     *\n     * @param out Out vector\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseLocal(out, v) {\n        v = v || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorInverseLocal(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse world transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseWorld(out, p) {\n        p = p || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = p[0];\n        wasm._tempMemFloat[1] = p[1];\n        wasm._tempMemFloat[2] = p[2];\n        wasm._wl_object_transformPointInverseWorld(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseLocal(out, p) {\n        p = p || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat.set(p);\n        wasm._wl_object_transformPointInverseLocal(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform an object space dual quaternion into world space.\n     *\n     * @param out Out transformation.\n     * @param q Local space transformation, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toWorldSpaceTransform(out, q) {\n        q = q || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat.set(q);\n        wasm._wl_object_toWorldSpaceTransform(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        out[3] = wasm._tempMemFloat[3];\n        out[4] = wasm._tempMemFloat[4];\n        out[5] = wasm._tempMemFloat[5];\n        out[6] = wasm._tempMemFloat[6];\n        out[7] = wasm._tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into local space.\n     *\n     * @param out Out transformation\n     * @param q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toLocalSpaceTransform(out, q) {\n        const p = this.parent;\n        q = q || out;\n        if (!p) {\n            if (out !== q) {\n                out[0] = q[0];\n                out[1] = q[1];\n                out[2] = q[2];\n                out[3] = q[3];\n                out[4] = q[4];\n                out[5] = q[5];\n                out[6] = q[6];\n                out[7] = q[7];\n            }\n        }\n        else {\n            /* @todo: This is broken. It should use `out`. */\n            p.toObjectSpaceTransform(q);\n        }\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into object space.\n     *\n     * @param out Out transformation.\n     * @param q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toObjectSpaceTransform(out, q) {\n        q = q || out;\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat.set(q);\n        wasm._wl_object_toObjectSpaceTransform(this.objectId, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        out[3] = wasm._tempMemFloat[3];\n        out[4] = wasm._tempMemFloat[4];\n        out[5] = wasm._tempMemFloat[5];\n        out[6] = wasm._tempMemFloat[6];\n        out[7] = wasm._tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Turn towards / look at target.\n     *\n     * Rotates the object so that its forward vector faces towards the target\n     * position. The `up` vector acts as a hint to uniquely orient the object's\n     * up direction. When orienting a view component, the projected `up` vector\n     * faces upwards on the viewing plane.\n     *\n     * @param p Target position to turn towards, in world space.\n     * @param up Up vector to align object with, in world space. Default is `[0, 1, 0]`.\n     */\n    lookAt(p, up = UP_VECTOR) {\n        this._engine.wasm._wl_object_lookAt(this.objectId, p[0], p[1], p[2], up[0], up[1], up[2]);\n    }\n    /** Destroy the object with all of its components and remove it from the scene */\n    destroy() {\n        this._engine.wasm._wl_scene_remove_object(this.objectId);\n        /* @todo: Shouldn't be `null` otherwise the API is unexpected */\n        this.objectId = null;\n    }\n    /**\n     * Mark transformation dirty.\n     *\n     * Causes an eventual recalculation of {@link transformWorld}, either\n     * on next {@link getTranslationWorld}, {@link transformWorld} or\n     * {@link scalingWorld} or the beginning of next frame, whichever\n     * happens first.\n     */\n    setDirty() {\n        this._engine.wasm._wl_object_set_dirty(this.objectId);\n    }\n    /**\n     * Disable/enable all components of this object.\n     *\n     * @param b New state for the components.\n     *\n     * @since 0.8.5\n     */\n    set active(b) {\n        const comps = this.getComponents();\n        for (let c of comps) {\n            c.active = b;\n        }\n    }\n    /**\n     * Get a component attached to this object.\n     *\n     * @param typeOrClass Type name. It's also possible to give a class definition.\n     *     In this case, the method will use the `class.TypeName` field to find the component.\n     * @param index=0 Index for component of given type. This can be used to access specific\n     *      components if the object has multiple components of the same type.\n     * @returns The component or `null` if there is no such component on this object\n     */\n    getComponent(typeOrClass, index) {\n        const type = isString(typeOrClass)\n            ? typeOrClass\n            : typeOrClass.TypeName;\n        const wasm = this._engine.wasm;\n        const lengthBytes = wasm.lengthBytesUTF8(type) + 1;\n        const mem = wasm._malloc(lengthBytes);\n        wasm.stringToUTF8(type, mem, lengthBytes);\n        const componentType = this._engine.wasm._wl_get_component_manager_index(mem);\n        wasm._free(mem);\n        if (componentType < 0) {\n            /* Not a native component, try js: */\n            const typeIndex = this._engine.wasm._componentTypeIndices[type];\n            const jsIndex = this._engine.wasm._wl_get_js_component_index(this.objectId, typeIndex, index || 0);\n            return jsIndex < 0 ? null : this._engine.wasm._components[jsIndex];\n        }\n        const componentId = this._engine.wasm._wl_get_component_id(this.objectId, componentType, index || 0);\n        return this._engine._wrapComponent(type, componentType, componentId);\n    }\n    /**\n     * @param typeOrClass Type name, pass a falsey value (`undefined` or `null`) to retrieve all.\n     *     It's also possible to give a class definition. In this case, the method will use the `class.TypeName` field to\n     *     find the components.\n     * @returns All components of given type attached to this object.\n     *\n     * @note As this function is non-trivial, avoid using it in `update()` repeatedly,\n     *      but rather store its result in `init()` or `start()`\n     * @warning This method will currently return at most 341 components.\n     */\n    getComponents(typeOrClass) {\n        const wasm = this._engine.wasm;\n        let componentType = null;\n        let type = null;\n        if (typeOrClass) {\n            type = isString(typeOrClass)\n                ? typeOrClass\n                : typeOrClass.TypeName;\n            componentType = wasm._typeIndexFor(type);\n        }\n        const components = [];\n        const maxComps = Math.floor((wasm._tempMemSize / 3) * 2);\n        const componentsCount = wasm._wl_object_get_components(this.objectId, wasm._tempMem, maxComps);\n        const offset = 2 * componentsCount;\n        wasm._wl_object_get_component_types(this.objectId, wasm._tempMem + offset, maxComps);\n        const jsManagerIndex = wasm._typeIndexFor('js');\n        for (let i = 0; i < componentsCount; ++i) {\n            const t = wasm._tempMemUint8[i + offset];\n            const componentId = wasm._tempMemUint16[i];\n            /* Handle JS types separately */\n            if (t == jsManagerIndex) {\n                const typeIndex = wasm._wl_get_js_component_index_for_id(componentId);\n                const comp = wasm._components[typeIndex];\n                if (componentType === null || comp.type == type)\n                    components.push(comp);\n                continue;\n            }\n            if (componentType === null) {\n                const managerName = wasm._typeNameFor(t);\n                components.push(this._engine._wrapComponent(managerName, t, componentId));\n            }\n            else if (t == componentType) {\n                /* Optimized manager name retrieval, already have type */\n                components.push(this._engine._wrapComponent(type, componentType, componentId));\n            }\n        }\n        return components;\n    }\n    /**\n     * Add component of given type to the object.\n     *\n     * You can use this function to clone components, see the example below.\n     *\n     * ```js\n     *  // Clone existing component (since 0.8.10)\n     *  let original = this.object.getComponent('mesh');\n     *  otherObject.addComponent('mesh', original);\n     *  // Create component from parameters\n     *  this.object.addComponent('mesh', {\n     *      mesh: someMesh,\n     *      material: someMaterial,\n     *  });\n     * ```\n     *\n     * @param typeOrClass Typename to create a component of. Can be native or\n     *     custom JavaScript component type. It's also possible to give a class definition.\n     *     In this case, the method will use the `class.TypeName` field.\n     * @param params Parameters to initialize properties of the new component,\n     *      can be another component to copy properties from.\n     *\n     * @returns The component or `null` if the type was not found\n     */\n    addComponent(typeOrClass, params) {\n        const wasm = this._engine.wasm;\n        const type = isString(typeOrClass)\n            ? typeOrClass\n            : typeOrClass.TypeName;\n        const componentType = wasm._typeIndexFor(type);\n        let component = null;\n        let componentIndex = null;\n        if (componentType < 0) {\n            /* JavaScript component */\n            if (!(type in wasm._componentTypeIndices)) {\n                throw new TypeError(\"Unknown component type '\" + type + \"'\");\n            }\n            const componentId = wasm._wl_object_add_js_component(this.objectId, wasm._componentTypeIndices[type]);\n            componentIndex = wasm._wl_get_js_component_index_for_id(componentId);\n            component = wasm._components[componentIndex];\n        }\n        else {\n            /* native component */\n            const componentId = wasm._wl_object_add_component(this.objectId, componentType);\n            component = this._engine._wrapComponent(type, componentType, componentId);\n        }\n        if (params !== undefined) {\n            for (const key in params) {\n                /* active will be set later, other properties should be skipped if\n                 * passing a component for cloning. */\n                if (EXCLUDED_COMPONENT_PROPERTIES.includes(key))\n                    continue;\n                component[key] = params[key];\n            }\n        }\n        /* Explicitly initialize native components */\n        if (componentType < 0) {\n            /* @todo: `componentIndex` can be null here, that's an error */\n            wasm.__wljs_component_init(componentIndex);\n            /* start() is called through onActivate() */\n        }\n        /* If it was not explicitly requested by the user to leave the component inactive,\n         * we activate it as a final step. This invalidates componentIndex! */\n        if (!params || !('active' in params && !params.active)) {\n            component.active = true;\n        }\n        return component;\n    }\n    /**\n     * Whether given object's transformation has changed.\n     */\n    get changed() {\n        return !!this._engine.wasm._wl_object_is_changed(this.objectId);\n    }\n    /**\n     * Checks equality by comparing whether the wrapped native component ids\n     * and component manager types are equal.\n     *\n     * @param otherObject Object to check equality with.\n     * @returns Whether this object equals the given object.\n     */\n    equals(otherObject) {\n        if (!otherObject)\n            return false;\n        return this.objectId == otherObject.objectId;\n    }\n}\n/**\n * Wrapper around a native skin data.\n */\nexport class Skin {\n    /**\n     * Index of the skin in the manager.\n     * @hidden\n     */\n    _index;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    constructor(engine, index) {\n        this._engine = engine;\n        this._index = index;\n    }\n    /** Amount of joints in this skin. */\n    get jointCount() {\n        return this._engine.wasm._wl_skin_get_joint_count(this._index);\n    }\n    /** Joints object ids for this skin */\n    get jointIds() {\n        const wasm = this._engine.wasm;\n        return new Uint16Array(wasm.HEAPU16.buffer, wasm._wl_skin_joint_ids(this._index), this.jointCount);\n    }\n    /**\n     * Dual quaternions in a flat array of size 8 times {@link jointCount}.\n     *\n     * Inverse bind transforms of the skin.\n     */\n    get inverseBindTransforms() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_skin_inverse_bind_transforms(this._index), 8 * this.jointCount);\n    }\n    /**\n     * Vectors in a flat array of size 3 times {@link jointCount}.\n     *\n     * Inverse bind scalings of the skin.\n     */\n    get inverseBindScalings() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_skin_inverse_bind_scalings(this._index), 3 * this.jointCount);\n    }\n}\n/* Unfortunately, the name \"Object\" is reserved, so internally we\n * use $Object, while we expose WL.Object as previously. */\nexport { $Object as Object };\n/**\n * Ray hit.\n *\n * Result of a {@link Scene.rayCast}.\n *\n * @note this class wraps internal engine data and should only be created internally.\n */\nexport class RayHit {\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /** Pointer to the memory heap. */\n    _ptr;\n    /**\n     * @param ptr Pointer to the ray hits memory.\n     */\n    constructor(engine, ptr) {\n        if ((ptr & 3) !== 0) {\n            throw new Error(MISALIGNED_MSG);\n        }\n        this._engine = engine;\n        this._ptr = ptr;\n    }\n    /** Array of ray hit locations. */\n    get locations() {\n        let p = this._ptr;\n        let l = [];\n        for (let i = 0; i < this.hitCount; ++i) {\n            l.push(new Float32Array(this._engine.wasm.HEAPF32.buffer, p + 12 * i, 3));\n        }\n        return l;\n    }\n    /** Array of ray hit normals (only when using {@link Physics#rayCast}. */\n    get normals() {\n        let p = this._ptr + 48;\n        let l = [];\n        for (let i = 0; i < this.hitCount; ++i) {\n            l.push(new Float32Array(this._engine.wasm.HEAPF32.buffer, p + 12 * i, 3));\n        }\n        return l;\n    }\n    /**\n     * Prefer these to recalculating the distance from locations.\n     *\n     * Distances of array hits to ray origin.\n     */\n    get distances() {\n        const p = this._ptr + 48 * 2;\n        return new Float32Array(this._engine.wasm.HEAPF32.buffer, p, this.hitCount);\n    }\n    /** Hit objects */\n    get objects() {\n        let p = this._ptr + (48 * 2 + 16);\n        let objIds = new Uint16Array(this._engine.wasm.HEAPU16.buffer, p, this.hitCount);\n        return [\n            objIds[0] <= 0 ? null : this._engine.wrapObject(objIds[0]),\n            objIds[1] <= 0 ? null : this._engine.wrapObject(objIds[1]),\n            objIds[2] <= 0 ? null : this._engine.wrapObject(objIds[2]),\n            objIds[3] <= 0 ? null : this._engine.wrapObject(objIds[3]),\n        ];\n    }\n    /** Number of hits (max 4) */\n    get hitCount() {\n        return Math.min(this._engine.wasm.HEAPU32[this._ptr / 4 + 30], 4);\n    }\n}\nclass math {\n    /** (Experimental!) Cubic Hermite spline interpolation for vector3 and quaternions.\n     *\n     * With `f == 0`, `out` will be `b`, if `f == 1`, `out` will be c.\n     *\n     * Whether a quaternion or vector3 interpolation is intended is determined by\n     * length of `a`.\n     *\n     * @param out Array to write result to.\n     * @param a First tangent/handle.\n     * @param b First point or quaternion.\n     * @param c Second point or quaternion.\n     * @param d Second handle.\n     * @param f Interpolation factor in [0; 1].\n     * @returns The `out` parameter.\n     *\n     * @since 0.8.6\n     */\n    static cubicHermite(out, a, b, c, d, f, engine = WL) {\n        const wasm = engine.wasm;\n        wasm._tempMemFloat.subarray(0).set(a);\n        wasm._tempMemFloat.subarray(4).set(b);\n        wasm._tempMemFloat.subarray(8).set(c);\n        wasm._tempMemFloat.subarray(12).set(d);\n        const isQuat = a.length == 4;\n        wasm._wl_math_cubicHermite(wasm._tempMem + 4 * 16, wasm._tempMem + 4 * 0, wasm._tempMem + 4 * 4, wasm._tempMem + 4 * 8, wasm._tempMem + 4 * 12, f, isQuat);\n        out[0] = wasm._tempMemFloat[16];\n        out[1] = wasm._tempMemFloat[17];\n        out[2] = wasm._tempMemFloat[18];\n        if (isQuat)\n            out[3] = wasm._tempMemFloat[19];\n        return out;\n    }\n}\nexport { math };\n", "import { CollisionComponent, AnimationComponent, LightComponent, MeshComponent, PhysXComponent, InputComponent, ViewComponent, TextComponent, Texture, Object as Object3D, Scene, Type, Physics, } from './wonderland.js';\nimport { isString } from './utils/object.js';\n/**\n * Default component parameter value per type.\n */\nconst _componentDefaults = new Map([\n    [Type.Bool, false],\n    [Type.Int, 0],\n    [Type.Float, 0.0],\n    [Type.String, ''],\n    [Type.Enum, undefined],\n    [Type.Object, null],\n    [Type.Mesh, null],\n    [Type.Texture, null],\n    [Type.Material, null],\n    [Type.Animation, null],\n    [Type.Skin, null],\n    [Type.Color, [0.0, 0.0, 0.0, 1.0]],\n]);\n/**\n * Setup the defaults value of the properties on a given\n * component class.\n *\n * @param ctor The component class\n */\nfunction _setupDefaults(ctor) {\n    for (const name in ctor.Properties) {\n        const p = ctor.Properties[name];\n        /* Convert enum default string to an index. We need to check if it's\n         * already been converted so we don't try to look up the index. */\n        if (p.type === Type.Enum && typeof p.default !== 'number') {\n            /* Matches the editor behavior for packaged components. Default\n             * value is a string, but is converted to an index. If there is no\n             * default string, it becomes index 0. */\n            if (p.values?.length) {\n                p.default = Math.max(p.values.indexOf(p.default), 0);\n            }\n            else {\n                p.default = undefined;\n            }\n        }\n        else {\n            p.default = p.default ?? _componentDefaults.get(p.type);\n        }\n        ctor.prototype[name] = p.default;\n    }\n}\nlet vrSupported = null;\nlet arSupported = null;\nconst onVRSupportEvent = [];\nconst onARSupportEvent = [];\n/**\n * Check whether XR is supported and store the result in the global space.\n *\n * @todo Remove at 1.0.0. This can be moved in `loadRuntime` using a `Promise.all`.\n * Then, the `onXRSupported` callback becomes deprecated.\n */\nfunction checkWebXRSupport() {\n    if (typeof navigator === 'undefined' || !navigator.xr) {\n        vrSupported = false;\n        arSupported = false;\n        return;\n    }\n    navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\n        vrSupported = supported;\n        for (const cb of onVRSupportEvent)\n            cb(supported);\n    });\n    navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        arSupported = supported;\n        for (const cb of onARSupportEvent)\n            cb(supported);\n    });\n}\n/**\n * Main Wonderland Engine instance.\n *\n * Controls the canvas, rendering, and JS <-> WASM communication.\n */\nexport class WonderlandEngine {\n    /** List of functions to call if a WebXR session is started. */\n    onXRSessionStart = [];\n    /** List of functions to call if a WebXR session ends. */\n    onXRSessionEnd = [];\n    /**\n     * Whether AR is supported by the browser.\n     *\n     * `undefined` until support could be determined.\n     */\n    arSupported = undefined;\n    /**\n     * Whether VR is supported by the browser.\n     *\n     * `undefined` until support could be determined.\n     */\n    vrSupported = undefined;\n    /**\n     * List of functions to call once VR/AR support has been determined.\n     *\n     * Will be called once for AR and once for VR independent of support for each.\n     * This allows you to notify the user of both cases: support and missing support of XR.\n     * See the `supported` parameter of the callback, which indicates support.\n     */\n    onXRSupported = [];\n    /**\n     * List of functions to call once the main scene has been loaded.\n     */\n    onSceneLoaded = [];\n    /**\n     * Current main scene.\n     */\n    scene = null;\n    /**\n     * Canvas element that Wonderland Engine renders to.\n     */\n    canvas = null;\n    /**\n     * Access to the textures managed by Wonderland Engine.\n     */\n    textures;\n    /* Component class instances per type to avoid GC */\n    _componentCache = {};\n    /* Object class instances per type to avoid GC */\n    _objectCache = [];\n    /**\n     * WebAssembly bridge.\n     *\n     * @hidden\n     */\n    #wasm;\n    /**\n     * Physics manager, only available when physx is enabled in the runtime.\n     *\n     * @hidden\n     */\n    #physics = null;\n    /**\n     * Create a new engine instance.\n     *\n     * @param wasm Wasm bridge instance\n     *\n     * @hidden\n     */\n    constructor(wasm) {\n        this.#wasm = wasm;\n        this.#wasm['_setEngine'](this); /* String lookup to bypass private. */\n        this.textures = {\n            /* Backward compatibility. @todo: Remove at 1.0.0. */\n            load: (filename, crossOrigin) => {\n                let image = new Image();\n                if (crossOrigin !== undefined) {\n                    image.crossOrigin = crossOrigin;\n                }\n                image.src = filename;\n                return new Promise((resolve, reject) => {\n                    image.onload = () => {\n                        let texture = new Texture(this, image);\n                        if (!texture.valid) {\n                            reject('Failed to add image ' +\n                                image.src +\n                                ' to texture atlas. Probably incompatible format.');\n                        }\n                        resolve(texture);\n                    };\n                    image.onerror = function () {\n                        reject('Failed to load image. Not found or no read access');\n                    };\n                });\n            },\n        };\n        this._componentCache = {};\n        this._objectCache.length = 0;\n        const onArSupported = (supported) => {\n            const index = onARSupportEvent.indexOf(onArSupported);\n            if (index >= 0)\n                onARSupportEvent.splice(index, 1);\n            this.arSupported = supported;\n            for (const cb of this.onXRSupported) {\n                cb('ar', supported);\n            }\n        };\n        onARSupportEvent.push(onArSupported);\n        const onVrSupported = (supported) => {\n            const index = onVRSupportEvent.indexOf(onVrSupported);\n            if (index >= 0)\n                onVRSupportEvent.splice(index, 1);\n            this.vrSupported = supported;\n            for (const cb of this.onXRSupported) {\n                cb('vr', supported);\n            }\n        };\n        onVRSupportEvent.push(onVrSupported);\n        /* If the global scope already knows about AR / VR support,\n         * directly trigger the callbacks. */\n        if (arSupported !== null)\n            onArSupported(arSupported);\n        if (vrSupported !== null)\n            onVrSupported(vrSupported);\n    }\n    /**\n     * Start the engine if it's not already running.\n     *\n     * When using the {@link loadRuntime} function, this method is called\n     * automatically.\n     */\n    start() {\n        this.wasm._wl_application_start();\n    }\n    /** @overload */\n    registerComponent(...args) {\n        if (isString(args[0])) {\n            /* Registration is using `name`, `params`, and `object`. */\n            const typeIndex = this.wasm._registerComponentLegacy(args[0], args[1], args[2]);\n            const ctor = this.wasm._componentTypes[typeIndex];\n            _setupDefaults(ctor);\n            return;\n        }\n        for (const arg of args) {\n            const typeIndex = this.wasm._registerComponent(arg);\n            const ctor = this.wasm._componentTypes[typeIndex];\n            _setupDefaults(ctor);\n        }\n    }\n    /**\n     * Request a XR session.\n     *\n     * @note Please use this call instead of directly calling `navigator.xr.requestSession()`.\n     * Wonderland Engine requires to be aware that a session is started, and this\n     * is done through this call.\n     *\n     * @param mode The XR mode.\n     * @param features An array of required features, e.g., `['local-floor', 'hit-test']`.\n     * @param optionalFeatures An array of optional features, e.g., `['bounded-floor', 'depth-sensing']`.\n     * @returns A promise resolving with the `XRSession`, a string error message otherwise.\n     */\n    requestXRSession(mode, features, optionalFeatures) {\n        return this.#wasm.webxr_request_session_func(mode, features, optionalFeatures ?? []);\n    }\n    /**\n     * Wrap an object ID using {@link Object}.\n     *\n     * @note This method performs caching and will return the same\n     * instance on subsequent calls.\n     *\n     * @param objectId ID of the object to create.\n     *\n     * @returns The object\n     */\n    wrapObject(objectId) {\n        const cache = this._objectCache;\n        const o = cache[objectId] || (cache[objectId] = new Object3D(this, objectId));\n        o.objectId = objectId;\n        return o;\n    }\n    /* Public Getters & Setter */\n    /**\n     * WebAssembly bridge.\n     *\n     * @note Use with care. This object is used to communicate\n     * with the WebAssembly code throughout the api.\n     *\n     * @hidden\n     */\n    get wasm() {\n        return this.#wasm;\n    }\n    /** Current WebXR session or `null` if no session active. */\n    get xrSession() {\n        return this.#wasm.webxr_session;\n    }\n    /** Current WebXR frame or `null` if no session active. */\n    get xrFrame() {\n        return this.#wasm.webxr_frame;\n    }\n    /** Current WebXR frame or `null` if no session active. */\n    get xrBaseLayer() {\n        return this.#wasm.webxr_baseLayer;\n    }\n    /** Current WebXR WebGLFramebuffr or `null` if no session active. */\n    get xrFramebuffer() {\n        if (!Array.isArray(this.wasm.webxr_fbo)) {\n            return this.wasm.GL.framebuffers[this.wasm.webxr_fbo];\n        }\n        /* For now, we only use a single framebuffer. */\n        return this.wasm.GL.framebuffers[this.wasm.webxr_fbo[0]];\n    }\n    /** Physics manager, only available when physx is enabled in the runtime. */\n    get physics() {\n        return this.#physics;\n    }\n    /* Internal-Only Methods */\n    /**\n     * Initialize the engine.\n     *\n     * @note Should be called after the WebAssembly is fully loaded.\n     *\n     * @hidden\n     */\n    _init() {\n        this.scene = new Scene(this);\n        /* For internal testing, we provide compatibility with DOM-less execution */\n        this.canvas =\n            typeof document === 'undefined'\n                ? null\n                : document.getElementById('canvas');\n        /* Setup the error handler. This is used to to manage native errors. */\n        this.#wasm._wl_set_error_callback(this.#wasm.addFunction((messagePtr) => {\n            throw new Error(this.#wasm.UTF8ToString(messagePtr));\n        }, 'vi'));\n        this.#physics = null;\n        if (this.#wasm.withPhysX) {\n            /* Setup the physics callback. */\n            const physics = new Physics(this);\n            this.#wasm._wl_physx_set_collision_callback(this.#wasm.addFunction((a, index, type, b) => {\n                const callback = physics._callbacks[a][index];\n                const component = new PhysXComponent(this, this.wasm._typeIndexFor('physx'), b);\n                callback(type, component);\n            }, 'viiii'));\n            this.#physics = physics;\n        }\n        /*\n         * This is done here for backward compatibility.\n         *\n         * @todo 1.0.0 Move this to the top-level.\n         */\n        checkWebXRSupport();\n    }\n    /**\n     * Reset the runtime state, including:\n     *     - Component cache\n     *     - Images\n     *     - Callbacks\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    _reset() {\n        this._componentCache = {};\n        this._objectCache.length = 0;\n        this.scene.reset();\n        this.wasm.reset();\n    }\n    /**\n     * Retrieves a component instance if it exists, or create and cache\n     * a new one.\n     *\n     * @note This api is meant to be used internally. Please have a look at\n     * {@link Object3D.addComponent} instead.\n     *\n     * @param type component type name\n     * @param componentType Component manager index\n     * @param componentId Component id in the manager\n     *\n     * @returns JavaScript instance wrapping the native component\n     *\n     * @hidden\n     */\n    _wrapComponent(type, componentType, componentId) {\n        if (componentId < 0)\n            return null;\n        /* @todo: extremely slow in JS to do that... Better to use a Map or allocate the array. */\n        const c = this._componentCache[componentType] ||\n            (this._componentCache[componentType] = []);\n        if (c[componentId]) {\n            return c[componentId];\n        }\n        let component;\n        if (type == 'collision') {\n            component = new CollisionComponent(this, componentType, componentId);\n        }\n        else if (type == 'text') {\n            component = new TextComponent(this, componentType, componentId);\n        }\n        else if (type == 'view') {\n            component = new ViewComponent(this, componentType, componentId);\n        }\n        else if (type == 'mesh') {\n            component = new MeshComponent(this, componentType, componentId);\n        }\n        else if (type == 'input') {\n            component = new InputComponent(this, componentType, componentId);\n        }\n        else if (type == 'light') {\n            component = new LightComponent(this, componentType, componentId);\n        }\n        else if (type == 'animation') {\n            component = new AnimationComponent(this, componentType, componentId);\n        }\n        else if (type == 'physx') {\n            component = new PhysXComponent(this, componentType, componentId);\n        }\n        else {\n            const typeIndex = this.wasm._componentTypeIndices[type];\n            const constructor = this.wasm._componentTypes[typeIndex];\n            component = new constructor(this);\n        }\n        /* Sets the manager and identifier from the outside, to\n         * simplify the user's constructor. */\n        /* @ts-ignore */\n        component._engine = this;\n        component._manager = componentType;\n        component._id = componentId;\n        c[componentId] = component;\n        return component;\n    }\n}\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\n/**\r\n * 8thwall camera component.\r\n *\r\n * Sets up the 8thwall pipeline and retrieves tracking events to place an\r\n * object at the location of the tracked AR camera / mobile device.\r\n *\r\n * Use this for SLAM tracking based on 8thwall.\r\n *\r\n * Make sure to enable 8thwall in \"Project Settings\" > \"AR\". See also the\r\n * [AR Getting Started Guide](/getting-started/quick-start-ar)\r\n *\r\n *\r\n * Currently only supports world-tracking (SLAM) using BACK camera.\r\n *\r\n * - remove any occurrences of the old 8thwall-camera component in the editor\r\n * - Add this component to NonVrCamera\r\n *\r\n * IMPORTANT!\r\n * - until it get's fixed, select 'customIndexHtml' in the project settings\r\n * - open a generated index.html and crossorigin=\"anonymous\" attribute to the <script> tag where //apps.8thwall.com/xrweb is loaded\r\n *\r\n *\r\n * ######### Using UI overlays #############\r\n * By default, this component renders own UI to give the user feedback about rejected permissions or tracking errors.\r\n * It can be changed by enabling useCustomUIOverlays flag.\r\n *\r\n * If useCustomUIOverlays is enabled, you are expected handle the following events dispatched by the window object:\r\n * - \"8thwall-request-user-interaction\" - used only on iOS safari. Request a user to perform and interaction with the page so that javascript is allowed to allowed to request a motion/camera/mic permissions.\r\n *  Make sure the window object is dispatching an '8thwall-safe-to-request-permissions' event after interaction has happened.\r\n * ```\r\n * <button onclick=\"window.dispatchEvent(new Event('8thwall-safe-to-request-permissions'))\">Allow Sensors</button>\r\n * ```\r\n *\r\n * - \"8thwall-permission-fail\" - user rejected any of the permissions\r\n *\r\n * - \"8thwall-error\" - runtime 8thwall error occurred\r\n */\r\nexport class ARCamera8thwall extends Component {\r\n    static TypeName = '8thwall-camera';\r\n    static Properties = {\r\n    /** Override the WL html overlays for handling camera/motion permissions and error handling */\r\n    useCustomUIOverlays: { type: Type.Bool, default: false },\r\n};\r\n\r\n    /* 8thwall camera pipeline module name */\r\n    name ='wonderland-engine-8thwall-camera';\r\n\r\n    started = false;\r\n\r\n    view = null; // cache camera\r\n\r\n    position = [0, 0, 0]; // cache 8thwall cam position\r\n\r\n    rotation = [0, 0, 0, -1]; // cache 8thwall cam rotation\r\n\r\n    glTextureRenderer = null; // cache XR8.GlTextureRenderer.pipelineModule\r\n\r\n    promptForDeviceMotion() {\r\n        return new Promise(async (resolve, reject) => {\r\n\r\n            // Tell anyone who's interested that we want to get some user interaction\r\n            window.dispatchEvent(new Event('8thwall-request-user-interaction'));\r\n\r\n            // Wait until someone response that user interaction happened\r\n            window.addEventListener('8thwall-safe-to-request-permissions', async () => {\r\n                try {\r\n                    const motionEvent = await DeviceMotionEvent.requestPermission();\r\n                    resolve(motionEvent);\r\n                } catch(exception) {\r\n                    reject(exception)\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    async getPermissions() {\r\n        // iOS \"feature\". If we want to request the DeviceMotion permission, user has to interact with the page at first (touch it).\r\n        // If there was no interaction done so far, we will render a HTML overlay with would get the user to interact with the screen\r\n        if (DeviceMotionEvent && DeviceMotionEvent.requestPermission) {\r\n            try {\r\n                const result = await DeviceMotionEvent.requestPermission();\r\n\r\n                // The user must have rejected the motion event on previous page load. (safari remembers this choice).\r\n                if (result !== 'granted') {\r\n                    throw new Error('MotionEvent');\r\n                }\r\n            } catch(exception) {\r\n\r\n                // User had no interaction with the page so far\r\n                if (exception.name === 'NotAllowedError') {\r\n                    const motionEvent = await this.promptForDeviceMotion();\r\n                    if (motionEvent !== 'granted') {\r\n                        throw new Error('MotionEvent');\r\n                    }\r\n                } else {\r\n                    throw new Error('MotionEvent');\r\n                }\r\n            }\r\n        }\r\n\r\n        try {\r\n            // make sure we get the camera stream\r\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n\r\n            // If we successfully acquired the camera stream - we can stop it and wait until 8thwall requests it again\r\n            stream.getTracks().forEach((track) => { track.stop() });\r\n        } catch(exception) {\r\n            throw new Error('Camera');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    init() {\r\n        this.view = this.object.getComponent('view');\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n        this.onAttach = this.onAttach.bind(this);\r\n        this.onException = this.onException.bind(this);\r\n        this.onCameraStatusChange = this.onCameraStatusChange.bind(this);\r\n    }\r\n\r\n\r\n    async start() {\r\n        this.view = this.object.getComponent('view');\r\n        if (!this.useCustomUIOverlays) {\r\n            OverlaysHandler.init();\r\n        }\r\n\r\n        try {\r\n            await this.getPermissions();\r\n        } catch(error) {\r\n            // User did not grant the camera or motionEvent permissions\r\n            window.dispatchEvent(new CustomEvent('8thwall-permission-fail', { detail: error }))\r\n            return;\r\n        }\r\n        await this.waitForXR8();\r\n\r\n        XR8.XrController.configure({\r\n            disableWorldTracking: false\r\n        });\r\n\r\n        this.glTextureRenderer = XR8.GlTextureRenderer.pipelineModule();\r\n        XR8.addCameraPipelineModules([\r\n            this.glTextureRenderer, // Draws the camera feed.\r\n            XR8.XrController.pipelineModule(), // Enables SLAM tracking.\r\n            this\r\n        ]);\r\n\r\n        const config = {\r\n            cameraConfig: {\r\n                direction: XR8.XrConfig.camera().BACK,\r\n            },\r\n            canvas: Module.canvas,\r\n            allowedDevices: XR8.XrConfig.device().ANY,\r\n            ownRunLoop: false,\r\n        }\r\n        XR8.run(config);\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 8thwall pipeline function\r\n     */\r\n    onAttach(params) {\r\n        this.started = true;\r\n        this.engine.scene.colorClearEnabled = false;\r\n\r\n        const gl = Module.ctx;\r\n\r\n        const rot = this.object.rotationWorld;\r\n        const pos = this.object.getTranslationWorld([]);\r\n        this.position = Array.from(pos);\r\n        this.rotation = Array.from(rot);\r\n\r\n        XR8.XrController.updateCameraProjectionMatrix({\r\n            origin: { x: pos[0], y: pos[1], z: pos[2] },\r\n            facing: { x: rot[0], y: rot[1], z: rot[2], w: rot[3] },\r\n            cam: { pixelRectWidth: Module.canvas.width, pixelRectHeight: Module.canvas.height, nearClipPlane: this.view.near, farClipPlane: this.view.far }\r\n        })\r\n\r\n        this.engine.scene.onPreRender.push(() => {\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\r\n            XR8.runPreRender(Date.now());\r\n            XR8.runRender(); // <--- tell 8thwall to do it's thing (alternatively call this.glTextureRenderer.onRender() if you only care about camera feed )\r\n        });\r\n\r\n        this.engine.scene.onPostRender.push(() => {\r\n            XR8.runPostRender(Date.now())\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 8thwall pipeline function\r\n     */\r\n    onCameraStatusChange(e) {\r\n        if (e && e.status === 'failed') {\r\n            this.onException(new Error(`Camera failed with status: ${e.status}`));\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * @private\r\n    * 8thwall pipeline function\r\n    */\r\n    onUpdate(e) {\r\n        if (!e.processCpuResult.reality)\r\n            return;\r\n\r\n        const { rotation, position, intrinsics } = e.processCpuResult.reality;\r\n\r\n        this.rotation[0] = rotation.x;\r\n        this.rotation[1] = rotation.y;\r\n        this.rotation[2] = rotation.z;\r\n        this.rotation[3] = rotation.w;\r\n\r\n        this.position[0] = position.x;\r\n        this.position[1] = position.y;\r\n        this.position[2] = position.z;\r\n\r\n        if (intrinsics) {\r\n            const projectionMatrix = this.view.projectionMatrix;\r\n            for (let i = 0; i < 16; i++) {\r\n                /* Some processCpuResult.reality.intrinsics are set to Infinity,\r\n                 * which brakes our projectionMatrix. So we just filter those elements out. */\r\n                if (Number.isFinite(intrinsics[i])) {\r\n                    projectionMatrix[i] = intrinsics[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (position && rotation) {\r\n            this.object.rotationWorld = this.rotation;\r\n            this.object.setTranslationWorld(this.position);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 8thwall pipeline function\r\n     */\r\n    onException(error) {\r\n        console.error('8thwall exception:', error);\r\n        window.dispatchEvent(new CustomEvent('8thwall-error', { detail: error }));\r\n    }\r\n\r\n\r\n    waitForXR8() {\r\n        return new Promise((resolve, _rej) => {\r\n            if (window.XR8) {\r\n                resolve();\r\n            } else {\r\n                window.addEventListener('xrloaded', () => resolve());\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst OverlaysHandler = {\r\n    init: function () {\r\n\r\n        this.handleRequestUserInteraction = this.handleRequestUserInteraction.bind(this);\r\n        this.handlePermissionFail = this.handlePermissionFail.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n\r\n        window.addEventListener('8thwall-request-user-interaction', this.handleRequestUserInteraction);\r\n        window.addEventListener('8thwall-permission-fail', this.handlePermissionFail);\r\n        window.addEventListener('8thwall-error', this.handleError);\r\n    },\r\n\r\n    handleRequestUserInteraction: function () {\r\n        const overlay = this.showOverlay(requestPermissionOverlay);\r\n        window.addEventListener('8thwall-safe-to-request-permissions', () => {\r\n            overlay.remove();\r\n        });\r\n\r\n    },\r\n\r\n    handlePermissionFail: function (_reason) {\r\n        this.showOverlay(failedPermissionOverlay);\r\n    },\r\n\r\n    handleError: function (_error) {\r\n        this.showOverlay(runtimeErrorOverlay);\r\n    },\r\n\r\n    showOverlay: function (htmlContent) {\r\n        const overlay = document.createElement('div');\r\n        overlay.innerHTML = htmlContent;\r\n        document.body.appendChild(overlay);\r\n        return overlay;\r\n    },\r\n}\r\n\r\nconst requestPermissionOverlay = `\r\n<style>\r\n  #request-permission-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 999;\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  .request-permission-overlay_title {\r\n    margin: 30px;\r\n    font-size: 32px;\r\n  }\r\n\r\n  .request-permission-overlay_button {\r\n    background-color: #e80086;\r\n    font-size: 22px;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 15px;\r\n    border: none;\r\n  }\r\n</style>\r\n\r\n<div id=\"request-permission-overlay\">\r\n  <div class=\"request-permission-overlay_title\">This app requires to use your camera and motion sensors</div>\r\n\r\n  <button class=\"request-permission-overlay_button\" onclick=\"window.dispatchEvent(new Event('8thwall-safe-to-request-permissions'))\">OK</button>\r\n</div>`;\r\n\r\nconst failedPermissionOverlay = `\r\n<style>\r\n  #failed-permission-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 999;\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  .failed-permission-overlay_title {\r\n    margin: 30px;\r\n    font-size: 32px;\r\n  }\r\n\r\n  .failed-permission-overlay_button {\r\n    background-color: #e80086;\r\n    font-size: 22px;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 15px;\r\n    border: none;\r\n  }\r\n</style>\r\n\r\n<div id=\"failed-permission-overlay\">\r\n  <div class=\"failed-permission-overlay_title\">Failed to grant permissions. Reset the the permissions and refresh the page.</div>\r\n\r\n  <button class=\"failed-permission-overlay_button\" onclick=\"window.location.reload()\">Refresh the page</button>\r\n</div>`;\r\n\r\nconst runtimeErrorOverlay = `\r\n<style>\r\n  #wall-error-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 999;\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  .wall-error-overlay_title {\r\n    margin: 30px;\r\n    font-size: 32px;\r\n  }\r\n\r\n  .wall-error-overlay_button {\r\n    background-color: #e80086;\r\n    font-size: 22px;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 15px;\r\n    border: none;\r\n  }\r\n</style>\r\n\r\n<div id=\"wall-error-overlay\">\r\n  <div class=\"wall-error-overlay_title\">Error has occurred. Please reload the page</div>\r\n\r\n  <button class=\"wall-error-overlay_button\" onclick=\"window.location.reload()\">Reload</button>\r\n</div>`;\r\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\nimport {vec3, mat4} from 'gl-matrix';\r\n/**\r\n * 3D cursor for desktop/mobile/VR.\r\n *\r\n * Implements a ray-casting cursor into the scene. To react to\r\n * clicking/hover/unhover/cursor down/cursor up/move use a\r\n * [cursor-target](#cursor-target).\r\n *\r\n * For VR, the ray is cast in direction of\r\n * [this.object.getForward()](/jsapi/object/#getforward). For desktop and mobile, the\r\n * forward vector is inverse-projected to account for where on screen the user clicked.\r\n *\r\n * `.globalTarget` can be used to call callbacks for all objects, even those that\r\n * do not have a cursor target attached, but match the collision group.\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nexport class Cursor extends Component {\r\n    static TypeName = 'cursor';\r\n    static Properties = {\r\n        /** Collision group for the ray cast. Only objects in this group will be affected by this cursor. */\r\n        collisionGroup: {type: Type.Int, default: 1},\r\n        /** (optional) Object that visualizes the cursor's ray. */\r\n        cursorRayObject: {type: Type.Object},\r\n        /** Axis along which to scale the `cursorRayObject`. */\r\n        cursorRayScalingAxis: {\r\n            type: Type.Enum,\r\n            values: ['x', 'y', 'z', 'none'],\r\n            default: 'z',\r\n        },\r\n        /** (optional) Object that visualizes the cursor's hit location. */\r\n        cursorObject: {type: Type.Object},\r\n        /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n        handedness: {\r\n            type: Type.Enum,\r\n            values: ['input component', 'left', 'right', 'none'],\r\n            default: 'input component',\r\n        },\r\n        /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n        rayCastMode: {\r\n            type: Type.Enum,\r\n            values: ['collision', 'physx'],\r\n            default: 'collision',\r\n        },\r\n        /** Whether to set the CSS style of the mouse cursor on desktop */\r\n        styleCursor: {type: Type.Bool, default: true},\r\n    };\r\n\r\n    init() {\r\n        /* VR session cache, in case in VR */\r\n        this.session = null;\r\n        this.collisionMask = 1 << this.collisionGroup;\r\n        this.maxDistance = 100;\r\n\r\n        const sceneLoaded = this.onDestroy.bind(this);\r\n        this.engine.onSceneLoaded.push(sceneLoaded);\r\n        this.onDestroyCallbacks = [\r\n            () => {\r\n                const index = this.engine.onSceneLoaded.indexOf(sceneLoaded);\r\n                if (index >= 0) this.engine.onSceneLoaded.splice(index, 1);\r\n            },\r\n        ];\r\n    }\r\n\r\n    start() {\r\n        if (this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if (!inputComp) {\r\n                console.warn(\r\n                    'cursor component on object',\r\n                    this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                        'but object has no input component.'\r\n                );\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        this.globalTarget = this.object.addComponent('cursor-target');\r\n\r\n        this.origin = new Float32Array(3);\r\n        this.cursorObjScale = new Float32Array(3);\r\n        this.direction = [0, 0, 0];\r\n        this.tempQuat = new Float32Array(4);\r\n        this.viewComponent = this.object.getComponent('view');\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if (this.viewComponent != null) {\r\n            const onClick = this.onClick.bind(this);\r\n            this.engine.canvas.addEventListener('click', onClick);\r\n            const onPointerMove = this.onPointerMove.bind(this);\r\n            this.engine.canvas.addEventListener('pointermove', onPointerMove);\r\n            const onPointerDown = this.onPointerDown.bind(this);\r\n            this.engine.canvas.addEventListener('pointerdown', onPointerDown);\r\n            const onPointerUp = this.onPointerUp.bind(this);\r\n            this.engine.canvas.addEventListener('pointerup', onPointerUp);\r\n\r\n            this.projectionMatrix = new Float32Array(16);\r\n            mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n            const onViewportResize = this.onViewportResize.bind(this);\r\n            window.addEventListener('resize', onViewportResize);\r\n\r\n            this.onDestroyCallbacks.push(() => {\r\n                this.engine.canvas.removeEventListener('click', onClick);\r\n                this.engine.canvas.removeEventListener('pointermove', onPointerMove);\r\n                this.engine.canvas.removeEventListener('pointerdown', onPointerDown);\r\n                this.engine.canvas.removeEventListener('pointerup', onPointerUp);\r\n                window.removeEventListener('resize', onViewportResize);\r\n            });\r\n        }\r\n        this.isHovering = false;\r\n        this.visible = true;\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n\r\n        this.cursorPos = new Float32Array(3);\r\n        this.hoveringObject = null;\r\n\r\n        const onXRSessionStart = this.setupVREvents.bind(this);\r\n        this.engine.onXRSessionStart.push(onXRSessionStart);\r\n        this.onDestroyCallbacks.push(() => {\r\n            const index = this.engine.onXRSessionStart.indexOf(onXRSessionStart);\r\n            if (index >= 0) this.engine.onXRSessionStart.splice(index, 1);\r\n        });\r\n\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayScale = new Float32Array(3);\r\n            this.cursorRayScale.set(this.cursorRayObject.scalingLocal);\r\n\r\n            /* Set ray to a good default distance of the cursor of 1m */\r\n            this.object.getTranslationWorld(this.origin);\r\n            this.object.getForward(this.direction);\r\n            this._setCursorRayTransform([\r\n                this.origin[0] + this.direction[0],\r\n                this.origin[1] + this.direction[1],\r\n                this.origin[2] + this.direction[2],\r\n            ]);\r\n        }\r\n    }\r\n\r\n    onViewportResize() {\r\n        if (!this.viewComponent) return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n    }\r\n\r\n    _setCursorRayTransform(hitPosition) {\r\n        if (!this.cursorRayObject) return;\r\n        const dist = vec3.dist(this.origin, hitPosition);\r\n        this.cursorRayObject.setTranslationLocal([0.0, 0.0, -dist / 2]);\r\n        if (this.cursorRayScalingAxis != 4) {\r\n            this.cursorRayObject.resetScaling();\r\n            this.cursorRayScale[this.cursorRayScalingAxis] = dist / 2;\r\n            this.cursorRayObject.scale(this.cursorRayScale);\r\n        }\r\n    }\r\n\r\n    _setCursorVisibility(visible) {\r\n        if (this.visible == visible) return;\r\n        this.visible = visible;\r\n        if (!this.cursorObject) return;\r\n\r\n        if (visible) {\r\n            this.cursorObject.resetScaling();\r\n            this.cursorObject.scale(this.cursorObjScale);\r\n        } else {\r\n            this.cursorObjScale.set(this.cursorObject.scalingLocal);\r\n            this.cursorObject.scale([0, 0, 0]);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.doUpdate(false);\r\n    }\r\n\r\n    doUpdate(doClick) {\r\n        /* If in VR, set the cursor ray based on object transform */\r\n        if (this.session) {\r\n            /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n            if (\r\n                this.arTouchDown &&\r\n                this.input &&\r\n                this.engine.xrSession.inputSources[0].handedness === 'none' &&\r\n                this.engine.xrSession.inputSources[0].gamepad\r\n            ) {\r\n                const p = this.engine.xrSession.inputSources[0].gamepad.axes;\r\n                /* Screenspace Y is inverted */\r\n                this.direction = [p[0], -p[1], -1.0];\r\n                this.updateDirection();\r\n            } else {\r\n                this.object.getTranslationWorld(this.origin);\r\n                this.object.getForward(this.direction);\r\n            }\r\n            const rayHit = (this.rayHit =\r\n                this.rayCastMode == 0\r\n                    ? this.engine.scene.rayCast(\r\n                          this.origin,\r\n                          this.direction,\r\n                          this.collisionMask\r\n                      )\r\n                    : this.engine.physics.rayCast(\r\n                          this.origin,\r\n                          this.direction,\r\n                          this.collisionMask,\r\n                          this.maxDistance\r\n                      ));\r\n\r\n            if (rayHit.hitCount > 0) {\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            } else {\r\n                this.cursorPos.fill(0);\r\n            }\r\n\r\n            this.hoverBehaviour(rayHit, doClick);\r\n        }\r\n\r\n        if (this.cursorObject) {\r\n            if (\r\n                this.hoveringObject &&\r\n                (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)\r\n            ) {\r\n                this._setCursorVisibility(true);\r\n                this.cursorObject.setTranslationWorld(this.cursorPos);\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            } else {\r\n                this._setCursorVisibility(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    hoverBehaviour(rayHit, doClick) {\r\n        if (rayHit.hitCount > 0) {\r\n            if (!this.hoveringObject || !this.hoveringObject.equals(rayHit.objects[0])) {\r\n                /* Unhover previous, if exists */\r\n                if (this.hoveringObject) {\r\n                    const cursorTarget = this.hoveringObject.getComponent('cursor-target');\r\n                    if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n                    this.globalTarget.onUnhover(this.hoveringObject, this);\r\n                }\r\n\r\n                /* Hover new object */\r\n                this.hoveringObject = rayHit.objects[0];\r\n                if (this.styleCursor) this.engine.canvas.style.cursor = 'pointer';\r\n\r\n                let cursorTarget = this.hoveringObject.getComponent('cursor-target');\r\n                if (cursorTarget) {\r\n                    this.hoveringObjectTarget = cursorTarget;\r\n                    cursorTarget.onHover(this.hoveringObject, this);\r\n                }\r\n                this.globalTarget.onHover(this.hoveringObject, this);\r\n            }\r\n\r\n            if (this.hoveringObjectTarget) {\r\n                this.hoveringObjectTarget.onMove(this.hoveringObject, this);\r\n            }\r\n\r\n            /* Cursor up/down */\r\n            const cursorTarget = this.hoveringObject.getComponent('cursor-target');\r\n            if (this.isDown !== this.lastIsDown) {\r\n                if (this.isDown) {\r\n                    /* Down */\r\n                    if (cursorTarget) cursorTarget.onDown(this.hoveringObject, this);\r\n                    this.globalTarget.onDown(this.hoveringObject, this);\r\n                } else {\r\n                    /* Up */\r\n                    if (cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                    this.globalTarget.onUp(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            /* Click */\r\n            if (doClick) {\r\n                if (cursorTarget) cursorTarget.onClick(this.hoveringObject, this);\r\n                this.globalTarget.onClick(this.hoveringObject, this);\r\n            }\r\n        } else if (this.hoveringObject && rayHit.hitCount == 0) {\r\n            const cursorTarget = this.hoveringObject.getComponent('cursor-target');\r\n            if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n            this.hoveringObject = null;\r\n            this.hoveringObjectTarget = null;\r\n            if (this.styleCursor) this.engine.canvas.style.cursor = 'default';\r\n        }\r\n\r\n        this.lastIsDown = this.isDown;\r\n    }\r\n\r\n    /**\r\n     * Setup event listeners on session object\r\n     * @param s WebXR session\r\n     *\r\n     * Sets up 'select' and 'end' events and caches the session to avoid\r\n     * Module object access.\r\n     */\r\n    setupVREvents(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        const onSessionEnd = function (e) {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.session = null;\r\n        }.bind(this);\r\n        s.addEventListener('end', onSessionEnd);\r\n\r\n        const onSelect = this.onSelect.bind(this);\r\n        s.addEventListener('select', onSelect);\r\n        const onSelectStart = this.onSelectStart.bind(this);\r\n        s.addEventListener('selectstart', onSelectStart);\r\n        const onSelectEnd = this.onSelectEnd.bind(this);\r\n        s.addEventListener('selectend', onSelectEnd);\r\n\r\n        this.onDestroyCallbacks.push(() => {\r\n            if (!this.session) return;\r\n            s.removeEventListener('end', onSessionEnd);\r\n            s.removeEventListener('select', onSelect);\r\n            s.removeEventListener('selectstart', onSelectStart);\r\n            s.removeEventListener('selectend', onSelectEnd);\r\n        });\r\n\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this.onViewportResize();\r\n    }\r\n\r\n    /** 'select' event listener */\r\n    onSelect(e) {\r\n        if (e.inputSource.handedness != this.handedness) return;\r\n        this.doUpdate(true);\r\n    }\r\n\r\n    /** 'selectstart' event listener */\r\n    onSelectStart(e) {\r\n        this.arTouchDown = true;\r\n        if (e.inputSource.handedness == this.handedness) this.isDown = true;\r\n    }\r\n\r\n    /** 'selectend' event listener */\r\n    onSelectEnd(e) {\r\n        this.arTouchDown = false;\r\n        if (e.inputSource.handedness == this.handedness) this.isDown = false;\r\n    }\r\n\r\n    /** 'pointermove' event listener */\r\n    onPointerMove(e) {\r\n        /* Don't care about secondary pointers */\r\n        if (!e.isPrimary) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(\r\n            e.clientX,\r\n            e.clientY,\r\n            bounds.width,\r\n            bounds.height\r\n        );\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    }\r\n\r\n    /** 'click' event listener */\r\n    onClick(e) {\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(\r\n            e.clientX,\r\n            e.clientY,\r\n            bounds.width,\r\n            bounds.height\r\n        );\r\n        this.hoverBehaviour(rayHit, true);\r\n    }\r\n\r\n    /** 'pointerdown' event listener */\r\n    onPointerDown(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if (!e.isPrimary || e.button !== 0) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(\r\n            e.clientX,\r\n            e.clientY,\r\n            bounds.width,\r\n            bounds.height\r\n        );\r\n        this.isDown = true;\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    }\r\n\r\n    /** 'pointerup' event listener */\r\n    onPointerUp(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if (!e.isPrimary || e.button !== 0) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(\r\n            e.clientX,\r\n            e.clientY,\r\n            bounds.width,\r\n            bounds.height\r\n        );\r\n        this.isDown = false;\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    }\r\n\r\n    /**\r\n     * Update mouse position in non-VR mode and raycast for new position\r\n     * @returns @ref WL.RayHit for new position.\r\n     */\r\n    updateMousePos(clientX, clientY, w, h) {\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        const left = clientX / w;\r\n        const top = clientY / h;\r\n        this.direction = [left * 2 - 1, -top * 2 + 1, -1.0];\r\n        return this.updateDirection();\r\n    }\r\n\r\n    updateDirection() {\r\n        this.object.getTranslationWorld(this.origin);\r\n\r\n        /* Reverse-project the direction into view space */\r\n        vec3.transformMat4(this.direction, this.direction, this.projectionMatrix);\r\n        vec3.normalize(this.direction, this.direction);\r\n        vec3.transformQuat(this.direction, this.direction, this.object.transformWorld);\r\n        const rayHit = (this.rayHit =\r\n            this.rayCastMode == 0\r\n                ? this.engine.scene.rayCast(this.origin, this.direction, this.collisionMask)\r\n                : this.engine.physics.rayCast(\r\n                      this.origin,\r\n                      this.direction,\r\n                      this.collisionMask,\r\n                      this.maxDistance\r\n                  ));\r\n\r\n        if (rayHit.hitCount > 0) {\r\n            this.cursorPos.set(rayHit.locations[0]);\r\n        } else {\r\n            this.cursorPos.fill(0);\r\n        }\r\n\r\n        return rayHit;\r\n    }\r\n\r\n    onDeactivate() {\r\n        this._setCursorVisibility(false);\r\n        if (this.hoveringObject) {\r\n            const target = this.hoveringObject.getComponent('cursor-target');\r\n            if (target) target.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n        }\r\n        if (this.cursorRayObject) this.cursorRayObject.scale([0, 0, 0]);\r\n    }\r\n\r\n    onActivate() {\r\n        this._setCursorVisibility(true);\r\n    }\r\n\r\n    onDestroy() {\r\n        for (const f of this.onDestroyCallbacks) f();\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\nimport {quat2} from 'gl-matrix';\r\n\r\n/**\r\n * Prints some limited debug information about the object.\r\n *\r\n * Information consists of: This object's name, an object parameter's name,\r\n * the object's world translation, world transform and local transform.\r\n *\r\n * Mainly used by engine developers for debug purposes or as example code.\r\n */\r\nexport class DebugObject extends Component {\r\n    static TypeName = 'debug-object';\r\n    static Properties = {\r\n        /** A second object to print the name of */\r\n        obj: {type: Type.Object},\r\n    };\r\n\r\n    start() {}\r\n\r\n    init() {\r\n        let origin = [0, 0, 0];\r\n        quat2.getTranslation(origin, this.object.transformWorld);\r\n        console.log('Debug Object:', this.object.name);\r\n        console.log('Other object:', this.obj.name);\r\n        console.log('\\ttranslation', origin);\r\n        console.log('\\ttransformWorld', this.object.transformWorld);\r\n        console.log('\\ttransformLocal', this.object.transformLocal);\r\n    }\r\n\r\n    update() {}\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\n/**\r\n * Applies [fixed foveation](https://www.w3.org/TR/webxrlayers-1/#dom-xrcompositionlayer-fixedfoveation)\r\n * once a WebXR session is started\r\n *\r\n * Fixed foveation reduces shading cost at the periphery by rendering at lower resolutions at the\r\n * edges of the users vision.\r\n */\r\nexport class FixedFoveation extends Component {\r\n    static TypeName = 'fixed-foveation';\r\n    static Properties = {\r\n        /** Amount to apply from 0 (none) to 1 (full) */\r\n        fixedFoveation: {type: Type.Float, default: 0.5},\r\n    };\r\n\r\n    start() {\r\n        if (this.engine.xrSession) {\r\n            this.setFixedFoveation();\r\n        } else {\r\n            this.engine.onXRSessionStart.push(this.setFixedFoveation.bind(this));\r\n        }\r\n    }\r\n\r\n    setFixedFoveation() {\r\n        this.engine.xrBaseLayer.fixedFoveation = this.fixedFoveation;\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\nimport {vec3, quat, quat2} from 'gl-matrix';\r\n\r\nconst ORDERED_JOINTS = [\r\n    'wrist',\r\n    'thumb-metacarpal',\r\n    'thumb-phalanx-proximal',\r\n    'thumb-phalanx-distal',\r\n    'thumb-tip',\r\n    'index-finger-metacarpal',\r\n    'index-finger-phalanx-proximal',\r\n    'index-finger-phalanx-intermediate',\r\n    'index-finger-phalanx-distal',\r\n    'index-finger-tip',\r\n    'middle-finger-metacarpal',\r\n    'middle-finger-phalanx-proximal',\r\n    'middle-finger-phalanx-intermediate',\r\n    'middle-finger-phalanx-distal',\r\n    'middle-finger-tip',\r\n    'ring-finger-metacarpal',\r\n    'ring-finger-phalanx-proximal',\r\n    'ring-finger-phalanx-intermediate',\r\n    'ring-finger-phalanx-distal',\r\n    'ring-finger-tip',\r\n    'pinky-finger-metacarpal',\r\n    'pinky-finger-phalanx-proximal',\r\n    'pinky-finger-phalanx-intermediate',\r\n    'pinky-finger-phalanx-distal',\r\n    'pinky-finger-tip'\r\n];\r\n\r\n/**\r\n * Easy hand tracking through the WebXR Device API\r\n * [\"Hand Input\" API](https://immersive-web.github.io/webxr-hand-input/).\r\n *\r\n * Allows displaying hands either as sphere-joints or skinned mesh.\r\n *\r\n * To react to grabbing, use `this.isGrabbing()`. For other gestures, refer\r\n * to `this.joints` - an array of [WL.Object](/jsapi/object) and use the joint\r\n * indices listed [in the WebXR Hand Input specification](https://immersive-web.github.io/webxr-hand-input/#skeleton-joints-section).\r\n *\r\n * It is often desired to use either hand tracking or controllers, not both.\r\n * This component provides `deactivateChildrenWithoutPose` to hide the hand\r\n * tracking visualization if no pose is available and `controllerToDeactivate`\r\n * for disabling another object once a hand tracking pose *is* available.\r\n * Outside of XR sessions, tracking or controllers are neither enabled nor disabled\r\n * to play well with the [vr-mode-active-switch](#vr-mode-active-switch) component.\r\n *\r\n * **Requirements:**\r\n *  - To use hand-tracking, enable \"joint tracking\" in `chrome://flags` on\r\n *    Oculus Browser for Oculus Quest/Oculus Quest 2.\r\n *\r\n * See [Hand Tracking Example](/showcase/hand-tracking).\r\n */\r\nexport class HandTracking extends Component {\r\n    static TypeName = 'hand-tracking';\r\n    static Properties = {\r\n        /** Handedness determining whether to receive tracking input from right or left hand */\r\n        handedness: {type: Type.Enum, default: 'left', values: ['left', 'right']},\r\n        /** (optional) Mesh to use to visualize joints */\r\n        jointMesh: {type: Type.Mesh, default: null},\r\n        /** Material to use for display. Applied to either the spawned skinned mesh or the joint spheres. */\r\n        jointMaterial: {type: Type.Material, default: null},\r\n        /** (optional) Skin to apply tracked joint poses to. If not present, joint spheres will be used for display instead. */\r\n        handSkin: {type: Type.Skin, default: null},\r\n        /** Deactivate children if no pose was tracked */\r\n        deactivateChildrenWithoutPose: {type: Type.Bool, default: true},\r\n        /** Controller objects to activate including children if no pose is available */\r\n        controllerToDeactivate: {type: Type.Object},\r\n    };\r\n\r\n    init() {\r\n        this.handedness = ['left', 'right'][this.handedness];\r\n    }\r\n\r\n    start() {\r\n        this.joints = [];\r\n        this.session = null;\r\n        /* Whether last update had a hand pose */\r\n        this.hasPose = false;\r\n        this._childrenActive = true;\r\n\r\n        if (!('XRHand' in window)) {\r\n            console.warn('WebXR Hand Tracking not supported by this browser.');\r\n            this.active = false;\r\n            return;\r\n        }\r\n\r\n        if (this.handSkin) {\r\n            let skin = this.handSkin;\r\n            let jointIds = skin.jointIds;\r\n            /* Map the wrist */\r\n            this.joints[ORDERED_JOINTS[0]] = this.engine.wrapObject(jointIds[0]);\r\n\r\n            /* Index in ORDERED_JOINTS that we are mapping to our joints */\r\n            /* Skip thumb0 joint, start at thumb1 */\r\n            for (let j = 0; j < jointIds.length; ++j) {\r\n                let joint = this.engine.wrapObject(jointIds[j]);\r\n                /* tip joints are only needed for joint rendering, so we skip those while mapping */\r\n                this.joints[joint.name] = joint;\r\n            }\r\n\r\n            /* If we have a hand skin, no need to spawn the joints-based one */\r\n            return;\r\n        }\r\n\r\n        /* Spawn joints */\r\n        for (let j = 0; j <= ORDERED_JOINTS.length; ++j) {\r\n            let joint = this.engine.scene.addObject(this.object.parent);\r\n            let mesh = joint.addComponent('mesh');\r\n\r\n            mesh.mesh = this.jointMesh;\r\n            mesh.material = this.jointMaterial;\r\n\r\n            this.joints[ORDERED_JOINTS[j]] = joint;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.session) {\r\n            if (this.engine.xrSession) this.setupVREvents(this.engine.xrSession);\r\n        }\r\n\r\n        if (!this.session) return;\r\n\r\n        this.hasPose = false;\r\n        if (this.session && this.session.inputSources) {\r\n            for (let i = 0; i <= this.session.inputSources.length; ++i) {\r\n                const inputSource = this.session.inputSources[i];\r\n                if (\r\n                    !inputSource ||\r\n                    !inputSource.hand ||\r\n                    inputSource.handedness != this.handedness\r\n                )\r\n                    continue;\r\n                this.hasPose = true;\r\n\r\n                if (inputSource.hand.get('wrist') !== null) {\r\n                    const WebXR = this.engine.wasm.WebXR;\r\n                    const p = Module['webxr_frame'].getJointPose(\r\n                        inputSource.hand.get('wrist'),\r\n                        WebXR.refSpaces[WebXR.refSpace]\r\n                    );\r\n                    if (p) {\r\n                        this.object.resetTranslationRotation();\r\n                        this.object.transformLocal.set([\r\n                            p.transform.orientation.x,\r\n                            p.transform.orientation.y,\r\n                            p.transform.orientation.z,\r\n                            p.transform.orientation.w,\r\n                        ]);\r\n                        this.object.translate([\r\n                            p.transform.position.x,\r\n                            p.transform.position.y,\r\n                            p.transform.position.z,\r\n                        ]);\r\n                    }\r\n                }\r\n\r\n                let invTranslation = new Float32Array(3);\r\n                let invRotation = new Float32Array(4);\r\n                quat.invert(invRotation, this.object.transformLocal);\r\n                this.object.getTranslationLocal(invTranslation);\r\n\r\n                for (let j = 0; j < ORDERED_JOINTS.length; ++j) {\r\n                    const jointName = ORDERED_JOINTS[j];\r\n                    const joint = this.joints[jointName];\r\n                    if (joint == null) continue;\r\n\r\n                    let jointPose = null;\r\n                    if (inputSource.hand.get(jointName) !== null) {\r\n                        const WebXR = this.engine.wasm.WebXR;\r\n                        jointPose = Module['webxr_frame'].getJointPose(\r\n                            inputSource.hand.get(jointName),\r\n                            WebXR.refSpaces[WebXR.refSpace]\r\n                        );\r\n                    }\r\n                    if (jointPose !== null) {\r\n                        if (this.handSkin) {\r\n                            joint.resetTranslationRotation();\r\n\r\n                            joint.translate([\r\n                                jointPose.transform.position.x - invTranslation[0],\r\n                                jointPose.transform.position.y - invTranslation[1],\r\n                                jointPose.transform.position.z - invTranslation[2],\r\n                            ]);\r\n                            joint.rotate(invRotation);\r\n                            joint.rotateObject([\r\n                                jointPose.transform.orientation.x,\r\n                                jointPose.transform.orientation.y,\r\n                                jointPose.transform.orientation.z,\r\n                                jointPose.transform.orientation.w,\r\n                            ]);\r\n                        } else {\r\n                            joint.resetTransform();\r\n                            joint.transformLocal.set([\r\n                                jointPose.transform.orientation.x,\r\n                                jointPose.transform.orientation.y,\r\n                                jointPose.transform.orientation.z,\r\n                                jointPose.transform.orientation.w,\r\n                            ]);\r\n                            joint.translate([\r\n                                jointPose.transform.position.x,\r\n                                jointPose.transform.position.y,\r\n                                jointPose.transform.position.z,\r\n                            ]);\r\n\r\n                            /* Last joint radius of each finger is null */\r\n                            const r = jointPose.radius || 0.007;\r\n                            joint.scale([r, r, r]);\r\n                        }\r\n                    } else {\r\n                        /* Hack to hide the object */\r\n                        if (!this.handSkin) joint.scale([0, 0, 0]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this.hasPose && this._childrenActive) {\r\n            this._childrenActive = false;\r\n\r\n            if (this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(false);\r\n            }\r\n\r\n            if (this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = true;\r\n                this.setChildrenActive(true, this.controllerToDeactivate);\r\n            }\r\n        } else if (this.hasPose && !this._childrenActive) {\r\n            this._childrenActive = true;\r\n\r\n            if (this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(true);\r\n            }\r\n\r\n            if (this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = false;\r\n                this.setChildrenActive(false, this.controllerToDeactivate);\r\n            }\r\n        }\r\n    }\r\n\r\n    setChildrenActive(active, object) {\r\n        object = object || this.object;\r\n\r\n        const children = object.children;\r\n        for (const o of children) {\r\n            o.active = active;\r\n            this.setChildrenActive(active, o);\r\n        }\r\n    }\r\n\r\n    isGrabbing() {\r\n        const indexTipPos = [0, 0, 0];\r\n        quat2.getTranslation(indexTipPos, this.joints['index-finger-tip'].transformLocal);\r\n        const thumbTipPos = [0, 0, 0];\r\n        quat2.getTranslation(thumbTipPos, this.joints['thumb-tip'].transformLocal);\r\n\r\n        return vec3.sqrDist(thumbTipPos, indexTipPos) < 0.001;\r\n    }\r\n\r\n    setupVREvents(s) {\r\n        this.session = s;\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\nimport 'howler';\r\n\r\n/**\r\n * (Spatial) audio listener based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Retrieves the location and orientation of the object and passes it\r\n * to [Howler.pos()](https://github.com/goldfire/howler.js#posx-y-z-id)\r\n * and [Howler.orientation()](https://github.com/goldfire/howler.js#orientationx-y-z-id).\r\n */\r\nexport class HowlerAudioListener extends Component {\r\n    static TypeName = 'howler-audio-listener';\r\n    static Properties = {\r\n        /** Whether audio should be spatialized/positional. */\r\n        spatial: {type: Type.Bool, default: true},\r\n    };\r\n\r\n    init() {\r\n        this.origin = new Float32Array(3);\r\n        this.fwd = new Float32Array(3);\r\n        this.up = new Float32Array(3);\r\n    }\r\n\r\n    update() {\r\n        if (!this.spatial) return;\r\n        this.object.getTranslationWorld(this.origin);\r\n        this.object.getForward(this.fwd);\r\n        this.object.getUp(this.up);\r\n\r\n        Howler.pos(this.origin[0], this.origin[1], this.origin[2]);\r\n        Howler.orientation(\r\n            this.fwd[0],\r\n            this.fwd[1],\r\n            this.fwd[2],\r\n            this.up[0],\r\n            this.up[1],\r\n            this.up[2]\r\n        );\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\nimport {Howl} from 'howler';\r\n\r\n/**\r\n * (Spatial) audio source based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Creates a Howler audio source, plays an audio file on it and updates\r\n * its position.\r\n *\r\n * Optimizes the position update to only update if the difference to last\r\n * position is larger than half a centimeter. To force updates (e.g. if\r\n * the sound source is _very_ close to the listener),\r\n * use `.updatePosition()`.\r\n */\r\nexport class HowlerAudioSource extends Component {\r\n    static TypeName = 'howler-audio-source';\r\n    static Properties = {\r\n        /** Volume */\r\n        volume: {type: Type.Float, default: 1.0},\r\n        /** Whether audio should be spatialized/positional */\r\n        spatial: {type: Type.Bool, default: true},\r\n        /** Whether to loop the sound */\r\n        loop: {type: Type.Bool, default: false},\r\n        /** Whether to start playing automatically */\r\n        autoplay: {type: Type.Bool, default: false},\r\n        /** URL to a sound file to play */\r\n        src: {type: Type.String, default: ''},\r\n    };\r\n\r\n    start() {\r\n        this.audio = new Howl({\r\n            src: [this.src],\r\n            loop: this.loop,\r\n            volume: this.volume,\r\n            autoplay: this.autoplay,\r\n        });\r\n\r\n        this.lastPlayedAudioId = null;\r\n        this.origin = new Float32Array(3);\r\n        this.lastOrigin = new Float32Array(3);\r\n\r\n        if (this.spatial && this.autoplay) {\r\n            this.updatePosition();\r\n            this.play();\r\n        }\r\n\r\n        /* Stop sound after switching scenes */\r\n        const callback = () => {\r\n            this.stop();\r\n            const idx = this.engine.onSceneLoaded.indexOf(callback);\r\n            if (idx >= 0) this.engine.onSceneLoaded.splice(idx, 1);\r\n        };\r\n        this.engine.onSceneLoaded.push(callback);\r\n    }\r\n\r\n    update() {\r\n        if (!this.spatial || !this.lastPlayedAudioId) return;\r\n\r\n        this.object.getTranslationWorld(this.origin);\r\n        /* Only call pos() if the position moved more than half a centimeter\r\n         * otherwise this gets very performance heavy.\r\n         * Smaller movement should only be perceivable if close to the\r\n         * ear anyway. */\r\n        if (\r\n            Math.abs(this.lastOrigin[0] - this.origin[0]) > 0.005 ||\r\n            Math.abs(this.lastOrigin[1] - this.origin[1]) > 0.005 ||\r\n            Math.abs(this.lastOrigin[2] - this.origin[2]) > 0.005\r\n        ) {\r\n            this.updatePosition();\r\n        }\r\n    }\r\n\r\n    updatePosition() {\r\n        this.audio.pos(\r\n            this.origin[0],\r\n            this.origin[1],\r\n            this.origin[2],\r\n            this.lastPlayedAudioId\r\n        );\r\n        this.lastOrigin.set(this.origin);\r\n    }\r\n\r\n    play() {\r\n        if (this.lastPlayedAudioId) this.audio.stop(this.lastPlayedAudioId);\r\n        this.lastPlayedAudioId = this.audio.play();\r\n        if (this.spatial) this.updatePosition();\r\n    }\r\n\r\n    stop() {\r\n        if (!this.lastPlayedAudioId) return;\r\n        this.audio.stop(this.lastPlayedAudioId);\r\n        this.lastPlayedAudioId = null;\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\n/**\r\n * Downloads an image from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * to an attached mesh component.\r\n *\r\n * Materials from the following shaders are supported:\r\n *  - \"Phong Opaque Textured\"\r\n *  - \"Flat Opaque Textured\"\r\n *  - \"Background\"\r\n *  - \"Physical Opaque Textured\"\r\n *  - \"Foliage\"\r\n */\r\nexport class ImageTexture extends Component {\r\n    static TypeName = 'image-texture';\r\n    static Properties = {\r\n        /** URL to download the image from */\r\n        url: {type: Type.String},\r\n        /** Material to apply the video texture to */\r\n        material: {type: Type.Material},\r\n    };\r\n\r\n    start() {\r\n        if (!this.material) {\r\n            throw Error('image-texture: material property not set');\r\n        }\r\n\r\n        this.engine.textures\r\n            .load(this.url, 'anonymous')\r\n            .then((texture) => {\r\n                const mat = this.material\r\n                const shader = mat.shader;\r\n                if (shader === 'Flat Opaque Textured') {\r\n                    mat.flatTexture = texture;\r\n                } else if (shader === 'Phong Opaque Textured' || shader === 'Foliage') {\r\n                    mat.diffuseTexture = texture;\r\n                } else if (shader === 'Background') {\r\n                    mat.texture = texture;\r\n                } else if (shader === 'Physical Opaque Textured') {\r\n                    mat.albedoTexture = texture;\r\n                } else {\r\n                    console.error('Shader', shader, 'not supported by image-texture');\r\n                }\r\n            })\r\n            .catch(console.err);\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\nimport {vec3} from 'gl-matrix';\r\n\r\n/**\r\n * Controls the camera through mouse movement.\r\n *\r\n * Efficiently implemented to affect object orientation only\r\n * when the mouse moves.\r\n */\r\nexport class MouseLookComponent extends Component {\r\n    static TypeName = 'mouse-look';\r\n    static Properties = {\r\n        /** Mouse look sensitivity */\r\n        sensitity: {type: Type.Float, default: 0.25},\r\n        /** Require a mouse button to be pressed to control view.\r\n         * Otherwise view will allways follow mouse movement */\r\n        requireMouseDown: {type: Type.Bool, default: true},\r\n        /** If \"moveOnClick\" is enabled, mouse button which should\r\n         * be held down to control view */\r\n        mouseButtonIndex: {type: Type.Int},\r\n        /** Enables pointer lock on \"mousedown\" event on canvas */\r\n        pointerLockOnClick: {type: Type.Bool, default: false},\r\n    };\r\n\r\n    init() {\r\n        this.currentRotationY = 0;\r\n        this.currentRotationX = 0;\r\n        this.origin = new Float32Array(3);\r\n        this.parentOrigin = new Float32Array(3);\r\n        this.rotationX = 0;\r\n        this.rotationY = 0;\r\n    }\r\n\r\n    start() {\r\n        document.addEventListener('mousemove', (e) => {\r\n            if (this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n                this.rotationY = (-this.sensitity * e.movementX) / 100;\r\n                this.rotationX = (-this.sensitity * e.movementY) / 100;\r\n\r\n                this.currentRotationX += this.rotationX;\r\n                this.currentRotationY += this.rotationY;\r\n\r\n                /* 1.507 = PI/2 = 90\u00B0 */\r\n                this.currentRotationX = Math.min(1.507, this.currentRotationX);\r\n                this.currentRotationX = Math.max(-1.507, this.currentRotationX);\r\n\r\n                this.object.getTranslationWorld(this.origin);\r\n\r\n                const parent = this.object.parent;\r\n                if (parent !== null) {\r\n                    parent.getTranslationWorld(this.parentOrigin);\r\n                    vec3.sub(this.origin, this.origin, this.parentOrigin);\r\n                }\r\n\r\n                this.object.resetTranslationRotation();\r\n                this.object.rotateAxisAngleRad([1, 0, 0], this.currentRotationX);\r\n                this.object.rotateAxisAngleRad([0, 1, 0], this.currentRotationY);\r\n                this.object.translate(this.origin);\r\n            }\r\n        });\r\n\r\n        const canvas = this.engine.canvas;\r\n        if (this.pointerLockOnClick) {\r\n            canvas.addEventListener('mousedown', () => {\r\n                canvas.requestPointerLock =\r\n                    canvas.requestPointerLock ||\r\n                    canvas.mozRequestPointerLock ||\r\n                    canvas.webkitRequestPointerLock;\r\n                canvas.requestPointerLock();\r\n            });\r\n        }\r\n\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex == 2) {\r\n                canvas.addEventListener(\r\n                    'contextmenu',\r\n                    (e) => {\r\n                        e.preventDefault();\r\n                    },\r\n                    false\r\n                );\r\n            }\r\n            canvas.addEventListener('mousedown', (e) => {\r\n                if (e.button == this.mouseButtonIndex) {\r\n                    this.mouseDown = true;\r\n                    document.body.style.cursor = 'grabbing';\r\n                    if (e.button == 1) {\r\n                        e.preventDefault();\r\n                        /* Prevent scrolling */\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n            canvas.addEventListener('mouseup', (e) => {\r\n                if (e.button == this.mouseButtonIndex) {\r\n                    this.mouseDown = false;\r\n                    document.body.style.cursor = 'initial';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\n/**\r\n * Set player height for a Y-offset above the ground for\r\n * 'local' and 'viewer' reference spaces.\r\n */\r\nexport class PlayerHeight extends Component {\r\n    static TypeName = 'player-height';\r\n    static Properties = {\r\n        height: {type: Type.Float, default: 1.75},\r\n    };\r\n\r\n    init() {\r\n        this.engine.onXRSessionStart.push(this.onXRSessionStart.bind(this));\r\n        this.engine.onXRSessionEnd.push(this.onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    start() {\r\n        this.object.resetTranslationRotation();\r\n        this.object.translate([0.0, this.height, 0.0]);\r\n    }\r\n\r\n    onXRSessionStart() {\r\n        const WebXR = this.engine.wasm.WebXR;\r\n        if (!['local', 'viewer'].includes(WebXR.refSpace)) {\r\n            this.object.resetTranslationRotation();\r\n        }\r\n    }\r\n\r\n    onXRSessionEnd() {\r\n        const WebXR = this.engine.wasm.WebXR;\r\n        if (!['local', 'viewer'].includes(WebXR.refSpace)) {\r\n            this.object.resetTranslationRotation();\r\n            this.object.translate([0.0, this.height, 0.0]);\r\n        }\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\n/**\r\n * Sets the target framerate\r\n *\r\n * [Updates the target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-updatetargetframerate)\r\n * to the closest [supported target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-supportedFrameRates)\r\n * to the given `framerate`.\r\n *\r\n * The target framerate is used for the device's VR compositor as an indication of how often to refresh the\r\n * screen with new images. This means the app will be asked to produce frames in more regular intervals,\r\n * potentially spending less time on frames that are likely to be dropped.\r\n *\r\n * For apps with heavy load, setting a well matching target framerate can improve the apps rendering stability\r\n * and reduce stutter.\r\n *\r\n * Likewise, the target framerate can be used to enable 120Hz refresh rates on Oculus Quest 2 on simpler apps.\r\n */\r\nexport class TargetFramerate extends Component {\r\n    static TypeName = 'target-framerate';\r\n    static Properties = {\r\n        framerate: {type: Type.Float, default: 90.0},\r\n    };\r\n\r\n    start() {\r\n        if (this.engine.xrSession) {\r\n            this.setTargetFramerate(this.engine.xrSession);\r\n        } else {\r\n            this.engine.onXRSessionStart.push(this.setTargetFramerate.bind(this));\r\n        }\r\n    }\r\n\r\n    setTargetFramerate(s) {\r\n        if (s.supportedFrameRates && s.updateTargetFrameRate) {\r\n            const a = this.engine.xrSession.supportedFrameRates;\r\n            a.sort((a, b) => Math.abs(a - this.framerate) - Math.abs(b - this.framerate));\r\n            this.engine.xrSession.updateTargetFrameRate(a[0]);\r\n        }\r\n    }\r\n}\r\n", "import {vec3, quat2} from 'gl-matrix';\r\nimport {Component, Type} from '@wonderlandengine/api';\r\n/**\r\n * Teleport VR locomotion.\r\n *\r\n * See [Teleport Example](/showcase/teleport).\r\n */\r\nexport class TeleportComponent extends Component {\r\n    static TypeName = 'teleport';\r\n    static Properties = {\r\n        /** Object that will be placed as indiciation forwhere the player will teleport to. */\r\n        teleportIndicatorMeshObject: {type: Type.Object},\r\n        /** Root of the player, the object that will be positioned on teleportation. */\r\n        camRoot: {type: Type.Object},\r\n        /** Non-vr camera for use outside of VR */\r\n        cam: {type: Type.Object},\r\n        /** Left eye for use in VR*/\r\n        eyeLeft: {type: Type.Object},\r\n        /** Right eye for use in VR*/\r\n        eyeRight: {type: Type.Object},\r\n        /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n        handedness: {\r\n            type: Type.Enum,\r\n            values: ['input component', 'left', 'right', 'none'],\r\n            default: 'input component',\r\n        },\r\n        /** Collision group of valid \"floor\" objects that can be teleported on */\r\n        floorGroup: {type: Type.Int, default: 1},\r\n        /** How far the thumbstick needs to be pushed to have the teleport target indicator show up */\r\n        thumbstickActivationThreshhold: {type: Type.Float, default: -0.7},\r\n        /** How far the thumbstick needs to be released to execute the teleport */\r\n        thumbstickDeactivationThreshhold: {type: Type.Float, default: 0.3},\r\n        /** Offset to apply to the indicator object, e.g. to avoid it from Z-fighting with the floor */\r\n        indicatorYOffset: {type: Type.Float, default: 0.01},\r\n\r\n        /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n        rayCastMode: {\r\n            type: Type.Enum,\r\n            values: ['collision', 'physx'],\r\n            default: 'collision',\r\n        },\r\n        /** Max distance for PhysX raycast */\r\n        maxDistance: {type: Type.Float, default: 100.0},\r\n    };\r\n\r\n    init() {\r\n        this._prevThumbstickAxis = new Float32Array(2);\r\n        this._tempVec = new Float32Array(3);\r\n        this._tempVec0 = new Float32Array(3);\r\n        this._currentIndicatorRotation = 0;\r\n\r\n        this.input = this.object.getComponent('input');\r\n        if (!this.input) {\r\n            console.error(\r\n                this.object.name,\r\n                'generic-teleport-component.js: input component is required on the object'\r\n            );\r\n            return;\r\n        }\r\n        if (!this.teleportIndicatorMeshObject) {\r\n            console.error(\r\n                this.object.name,\r\n                'generic-teleport-component.js: Teleport indicator mesh is missing'\r\n            );\r\n            return;\r\n        }\r\n        if (!this.camRoot) {\r\n            console.error(\r\n                this.object.name,\r\n                'generic-teleport-component.js: camRoot not set'\r\n            );\r\n            return;\r\n        }\r\n        this.isIndicating = false;\r\n\r\n        this.indicatorHidden = true;\r\n        this.hitSpot = new Float32Array(3);\r\n        this._hasHit = false;\r\n\r\n        this._extraRotation = 0;\r\n        this._currentStickAxes = new Float32Array(2);\r\n    }\r\n\r\n    start() {\r\n        if (this.cam) {\r\n            this.isMouseIndicating = false;\r\n            canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n            canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        }\r\n\r\n        if (this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if (!inputComp) {\r\n                console.warn(\r\n                    'teleport component on object',\r\n                    this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                        'but object has no input component.'\r\n                );\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        this.engine.onXRSessionStart.push(this.setupVREvents.bind(this));\r\n        this.teleportIndicatorMeshObject.active = false;\r\n    }\r\n\r\n    /* Get current camera Y rotation */\r\n    _getCamRotation() {\r\n        this.eyeLeft.getForward(this._tempVec);\r\n        this._tempVec[1] = 0;\r\n        vec3.normalize(this._tempVec, this._tempVec);\r\n        return Math.atan2(this._tempVec[0], this._tempVec[2]);\r\n    }\r\n\r\n    update() {\r\n        let inputLength = 0;\r\n        if (this.gamepad && this.gamepad.axes) {\r\n            this._currentStickAxes[0] = this.gamepad.axes[2];\r\n            this._currentStickAxes[1] = this.gamepad.axes[3];\r\n            inputLength =\r\n                Math.abs(this._currentStickAxes[0]) + Math.abs(this._currentStickAxes[1]);\r\n        }\r\n\r\n        if (\r\n            !this.isIndicating &&\r\n            this._prevThumbstickAxis[1] >= this.thumbstickActivationThreshhold &&\r\n            this._currentStickAxes[1] < this.thumbstickActivationThreshhold\r\n        ) {\r\n            this.isIndicating = true;\r\n        } else if (\r\n            this.isIndicating &&\r\n            inputLength < this.thumbstickDeactivationThreshhold\r\n        ) {\r\n            this.isIndicating = false;\r\n            this.teleportIndicatorMeshObject.active = false;\r\n\r\n            if (this._hasHit) {\r\n                this._teleportPlayer(this.hitSpot, this._extraRotation);\r\n            }\r\n        }\r\n\r\n        if (this.isIndicating && this.teleportIndicatorMeshObject && this.input) {\r\n            const origin = this._tempVec0;\r\n            quat2.getTranslation(origin, this.object.transformWorld);\r\n\r\n            const direction = this.object.getForward(this._tempVec);\r\n            let rayHit = (this.rayHit =\r\n                this.rayCastMode == 0\r\n                    ? this.engine.scene.rayCast(origin, direction, 1 << this.floorGroup)\r\n                    : this.engine.physics.rayCast(\r\n                          origin,\r\n                          direction,\r\n                          1 << this.floorGroup,\r\n                          this.maxDistance\r\n                      ));\r\n            if (rayHit.hitCount > 0) {\r\n                this.indicatorHidden = false;\r\n\r\n                this._extraRotation =\r\n                    Math.PI +\r\n                    Math.atan2(this._currentStickAxes[0], this._currentStickAxes[1]);\r\n                this._currentIndicatorRotation =\r\n                    this._getCamRotation() + (this._extraRotation - Math.PI);\r\n                this.teleportIndicatorMeshObject.resetTranslationRotation();\r\n                this.teleportIndicatorMeshObject.rotateAxisAngleRad(\r\n                    [0, 1, 0],\r\n                    this._currentIndicatorRotation\r\n                );\r\n\r\n                this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n                this.teleportIndicatorMeshObject.translate([\r\n                    0.0,\r\n                    this.indicatorYOffset,\r\n                    0.0,\r\n                ]);\r\n                this.teleportIndicatorMeshObject.active = true;\r\n\r\n                this.hitSpot.set(rayHit.locations[0]);\r\n                this._hasHit = true;\r\n            } else {\r\n                if (!this.indicatorHidden) {\r\n                    this.teleportIndicatorMeshObject.active = false;\r\n                    this.indicatorHidden = true;\r\n                }\r\n                this._hasHit = false;\r\n            }\r\n        } else if (this.teleportIndicatorMeshObject && this.isMouseIndicating) {\r\n            this.onMousePressed();\r\n        }\r\n\r\n        this._prevThumbstickAxis.set(this._currentStickAxes);\r\n    }\r\n\r\n    setupVREvents(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        s.addEventListener(\r\n            'end',\r\n            function () {\r\n                /* Reset cache once the session ends to rebind select etc, in case\r\n                 * it starts again */\r\n                this.gamepad = null;\r\n                this.session = null;\r\n            }.bind(this)\r\n        );\r\n\r\n        if (s.inputSources && s.inputSources.length) {\r\n            for (let i = 0; i < s.inputSources.length; i++) {\r\n                let inputSource = s.inputSources[i];\r\n\r\n                if (inputSource.handedness == this.handedness) {\r\n                    this.gamepad = inputSource.gamepad;\r\n                }\r\n            }\r\n        }\r\n\r\n        s.addEventListener(\r\n            'inputsourceschange',\r\n            function (e) {\r\n                if (e.added && e.added.length) {\r\n                    for (let i = 0; i < e.added.length; i++) {\r\n                        let inputSource = e.added[i];\r\n                        if (inputSource.handedness == this.handedness) {\r\n                            this.gamepad = inputSource.gamepad;\r\n                        }\r\n                    }\r\n                }\r\n            }.bind(this)\r\n        );\r\n    }\r\n    onMouseDown() {\r\n        this.isMouseIndicating = true;\r\n    }\r\n    onMouseUp() {\r\n        this.isMouseIndicating = false;\r\n        this.teleportIndicatorMeshObject.active = false;\r\n        if (this._hasHit) {\r\n            this._teleportPlayer(this.hitSpot, 0.0);\r\n        }\r\n    }\r\n    onMousePressed() {\r\n        let origin = [0, 0, 0];\r\n        quat2.getTranslation(origin, this.cam.transformWorld);\r\n\r\n        const direction = this.cam.getForward(this._tempVec);\r\n        let rayHit = (this.rayHit =\r\n            this.rayCastMode == 0\r\n                ? this.engine.scene.rayCast(origin, direction, 1 << this.floorGroup)\r\n                : this.engine.physics.rayCast(\r\n                      origin,\r\n                      direction,\r\n                      1 << this.floorGroup,\r\n                      this.maxDistance\r\n                  ));\r\n        if (rayHit.hitCount > 0) {\r\n            this.indicatorHidden = false;\r\n\r\n            direction[1] = 0;\r\n            vec3.normalize(direction, direction);\r\n\r\n            this._currentIndicatorRotation =\r\n                -Math.sign(direction[2]) * Math.acos(direction[0]) - Math.PI * 0.5;\r\n\r\n            this.teleportIndicatorMeshObject.resetTranslationRotation();\r\n            this.teleportIndicatorMeshObject.rotateAxisAngleRad(\r\n                [0, 1, 0],\r\n                this._currentIndicatorRotation\r\n            );\r\n            this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n            this.teleportIndicatorMeshObject.active = true;\r\n\r\n            this.hitSpot = rayHit.locations[0];\r\n            this._hasHit = true;\r\n        } else {\r\n            if (!this.indicatorHidden) {\r\n                this.teleportIndicatorMeshObject.active = false;\r\n                this.indicatorHidden = true;\r\n            }\r\n            this._hasHit = false;\r\n        }\r\n    }\r\n\r\n    _teleportPlayer(newPosition, rotationToAdd) {\r\n        this.camRoot.rotateAxisAngleRad([0, 1, 0], rotationToAdd);\r\n\r\n        const p = this._tempVec;\r\n        const p1 = this._tempVec0;\r\n\r\n        if (this.session) {\r\n            this.eyeLeft.getTranslationWorld(p);\r\n            this.eyeRight.getTranslationWorld(p1);\r\n\r\n            vec3.add(p, p, p1);\r\n            vec3.scale(p, p, 0.5);\r\n        } else {\r\n            this.cam.getTranslationWorld(p);\r\n        }\r\n\r\n        this.camRoot.getTranslationWorld(p1);\r\n        vec3.sub(p, p1, p);\r\n        p[0] += newPosition[0];\r\n        p[1] = newPosition[1];\r\n        p[2] += newPosition[2];\r\n\r\n        this.camRoot.setTranslationWorld(p);\r\n    }\r\n}\r\n", "import {Component, Type, Mesh, MeshIndexType, MeshAttribute} from '@wonderlandengine/api';\r\nimport {vec3} from 'gl-matrix';\r\n\r\nconst direction = vec3.create();\r\nconst offset = vec3.create();\r\nconst normal = vec3.create();\r\n\r\n/**\r\n * Dynamic mesh-based trail\r\n *\r\n * This component keeps track of the world position of the object it's added to.\r\n * At a fixed interval the world position is stored as start and end points of the trail segments.\r\n *\r\n * The trail tapers off along its length. UV texture coordinates are setup such that the\r\n * U-axis covers the width of the trail and the V-axis covers the length of the trail.\r\n * This allows the trail's appearance to be defined using a texture.\r\n */\r\nexport class Trail extends Component {\r\n    static TypeName = 'trail';\r\n\r\n    static Properties = {\r\n        /** The material to apply to the trail mesh */\r\n        material: {type: Type.Material},\r\n        /** The number of segments in the trail mesh */\r\n        segments: {type: Type.Int, default: 50},\r\n        /** The time interval before recording a new point */\r\n        interval: {type: Type.Float, default: 0.1},\r\n        /** The width of the trail (in world space) */\r\n        width: {type: Type.Float, default: 1.0},\r\n        /** Whether or not the trail should taper off */\r\n        taper: {type: Type.Bool, default: true},\r\n        /**\r\n         * The maximum delta time in seconds, above which the trail resets.\r\n         * This prevents the trail from jumping around when updates happen\r\n         * infrequently (e.g. when the tab doesn't have focus).\r\n         */\r\n        resetThreshold: {type: Type.Float, default: 0.5},\r\n    };\r\n\r\n    init() {\r\n        this.points = new Array(this.segments + 1);\r\n        for (let i = 0; i < this.points.length; ++i) {\r\n            this.points[i] = vec3.create();\r\n        }\r\n        /* The points array is circular, so keep track of its head */\r\n        this.currentPointOffset = 0;\r\n        this.up = [0, 1, 0];\r\n        this.timeTillNext = this.interval;\r\n    }\r\n\r\n    start() {\r\n        this.trailContainer = this.engine.scene.addObject();\r\n\r\n        this.meshComp = this.trailContainer.addComponent('mesh');\r\n        this.meshComp.material = this.material;\r\n\r\n        /* Each point will have two vertices; one on either side */\r\n        const vertexCount = 2 * this.points.length;\r\n        /* Each segment consists of two triangles */\r\n        this.indexData = new Uint32Array(6 * this.segments);\r\n        for (let i = 0, v = 0; i < vertexCount - 2; i += 2, v += 6) {\r\n            this.indexData\r\n                .subarray(v, v + 6)\r\n                .set([i + 1, i + 0, i + 2, i + 2, i + 3, i + 1]);\r\n        }\r\n\r\n        this.mesh = new Mesh({\r\n            vertexCount: vertexCount,\r\n            indexData: this.indexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n        this.meshComp.mesh = this.mesh;\r\n    }\r\n\r\n    updateVertices() {\r\n        const positions = this.mesh.attribute(MeshAttribute.Position);\r\n        const texCoords = this.mesh.attribute(MeshAttribute.TextureCoordinate);\r\n        const normals = this.mesh.attribute(MeshAttribute.Normal);\r\n\r\n        vec3.set(direction, 0, 0, 0);\r\n        for (let i = 0; i < this.points.length; ++i) {\r\n            const curr = this.points[(this.currentPointIndex + i + 1) % this.points.length];\r\n            const next = this.points[(this.currentPointIndex + i + 2) % this.points.length];\r\n\r\n            /* The last point has no next, so re-use the direction of the previous segment */\r\n            if (i !== this.points.length - 1) {\r\n                vec3.sub(direction, next, curr);\r\n            }\r\n            vec3.cross(offset, this.up, direction);\r\n            vec3.normalize(offset, offset);\r\n            const timeFraction = 1.0 - this.timeTillNext / this.interval;\r\n            const fraction = (i - timeFraction) / this.segments;\r\n            vec3.scale(\r\n                offset,\r\n                offset,\r\n                ((this.taper ? fraction : 1.0) * this.width) / 2.0\r\n            );\r\n\r\n            positions.set(i * 2, [\r\n                curr[0] - offset[0],\r\n                curr[1] - offset[1],\r\n                curr[2] - offset[2],\r\n            ]);\r\n            positions.set(i * 2 + 1, [\r\n                curr[0] + offset[0],\r\n                curr[1] + offset[1],\r\n                curr[2] + offset[2],\r\n            ]);\r\n\r\n            if (normals) {\r\n                vec3.cross(normal, direction, offset);\r\n                vec3.normalize(normal, normal);\r\n                normals.set(i * 2, normal);\r\n                normals.set(i * 2 + 1, normal);\r\n            }\r\n            if (texCoords) {\r\n                texCoords.set(i * 2, [0, fraction]);\r\n                texCoords.set(i * 2 + 1, [1, fraction]);\r\n            }\r\n        }\r\n\r\n        /* Notify WLE that the mesh has changed */\r\n        this.mesh.update();\r\n    }\r\n\r\n    resetTrail() {\r\n        this.object.getTranslationWorld(this.points[0]);\r\n        for (let i = 1; i < this.points.length; ++i) {\r\n            vec3.copy(this.points[i], this.points[0]);\r\n        }\r\n        this.currentPointIndex = 0;\r\n\r\n        this.timeTillNext = this.interval;\r\n    }\r\n\r\n    update(dt) {\r\n        this.timeTillNext -= dt;\r\n        if (dt > this.resetThreshold) {\r\n            this.resetTrail();\r\n        }\r\n\r\n        if (this.timeTillNext < 0) {\r\n            this.currentPointIndex = (this.currentPointIndex + 1) % this.points.length;\r\n            this.timeTillNext = (this.timeTillNext % this.interval) + this.interval;\r\n        }\r\n        this.object.getTranslationWorld(this.points[this.currentPointIndex]);\r\n\r\n        this.updateVertices();\r\n    }\r\n\r\n    onActivate() {\r\n        this.resetTrail();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.trailContainer.destroy();\r\n        this.mesh.destroy();\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\nimport {vec3, quat} from 'gl-matrix';\r\n\r\nMath.clamp = function (v, a, b) {\r\n    return Math.max(a, Math.min(v, b));\r\n};\r\n\r\n// From http://theorangeduck.com/page/simple-two-joint\r\nconst twoJointIK = (function () {\r\n    let ta = new Float32Array(3);\r\n    let ca = new Float32Array(3);\r\n    let ba = new Float32Array(3);\r\n    let ab = new Float32Array(3);\r\n    let cb = new Float32Array(3);\r\n\r\n    let axis0 = new Float32Array(3);\r\n    let axis1 = new Float32Array(3);\r\n\r\n    let temp = new Float32Array(4);\r\n\r\n    let r0 = new Float32Array(4);\r\n    let r1 = new Float32Array(4);\r\n    let r2 = new Float32Array(4);\r\n\r\n    return function (a_lr, b_lr, a, b, c, t, eps, a_gr, b_gr, helper) {\r\n        vec3.sub(ba, b, a);\r\n        const lab = vec3.length(ba);\r\n        vec3.sub(ta, b, c);\r\n        const lcb = vec3.length(ta);\r\n        vec3.sub(ta, t, a);\r\n        const lat = Math.clamp(vec3.length(ta), eps, lab + lcb - eps);\r\n\r\n        vec3.sub(ca, c, a);\r\n        vec3.sub(ab, a, b);\r\n        vec3.sub(cb, c, b);\r\n\r\n        vec3.normalize(ca, ca);\r\n        vec3.normalize(ba, ba);\r\n        vec3.normalize(ab, ab);\r\n        vec3.normalize(cb, cb);\r\n        vec3.normalize(ta, ta);\r\n\r\n        const ac_ab_0 = Math.acos(Math.clamp(vec3.dot(ca, ba), -1, 1));\r\n        const ba_bc_0 = Math.acos(Math.clamp(vec3.dot(ab, cb), -1, 1));\r\n        const ac_at_0 = Math.acos(Math.clamp(vec3.dot(ca, ta), -1, 1));\r\n\r\n        const ac_ab_1 = Math.acos(\r\n            Math.clamp((lcb * lcb - lab * lab - lat * lat) / (-2 * lab * lat), -1, 1)\r\n        );\r\n        const ba_bc_1 = Math.acos(\r\n            Math.clamp((lat * lat - lab * lab - lcb * lcb) / (-2 * lab * lcb), -1, 1)\r\n        );\r\n\r\n        vec3.sub(ca, c, a);\r\n        vec3.sub(ba, b, a);\r\n        vec3.sub(ta, t, a);\r\n\r\n        vec3.cross(axis0, ca, ba);\r\n        vec3.cross(axis1, ca, ta);\r\n\r\n        if (helper) {\r\n            vec3.sub(ba, helper, b);\r\n            vec3.transformQuat(ba, [0, 0, -1], b_gr);\r\n        } else {\r\n            vec3.sub(ba, b, a);\r\n        }\r\n\r\n        const l = vec3.length(axis0);\r\n        if (l == 0) {\r\n            axis0.set([1, 0, 0]);\r\n        } else {\r\n            vec3.scale(axis0, axis0, 1 / l);\r\n        }\r\n        vec3.normalize(axis1, axis1);\r\n\r\n        quat.conjugate(a_gr, a_gr);\r\n        quat.setAxisAngle(r0, vec3.transformQuat(temp, axis0, a_gr), ac_ab_1 - ac_ab_0);\r\n        quat.setAxisAngle(r2, vec3.transformQuat(temp, axis1, a_gr), ac_at_0);\r\n        quat.mul(a_lr, a_lr, quat.mul(temp, r0, r2));\r\n        quat.normalize(a_lr, a_lr);\r\n\r\n        quat.conjugate(b_gr, b_gr);\r\n        quat.setAxisAngle(r1, vec3.transformQuat(temp, axis0, b_gr), ba_bc_1 - ba_bc_0);\r\n        quat.mul(b_lr, b_lr, r1);\r\n        quat.normalize(b_lr, b_lr);\r\n    };\r\n})();\r\n\r\n/**\r\n * Inverse Kinematics for two-joint chains (e.g. knees or ellbows)\r\n */\r\nexport class TwoJointIkSolver extends Component {\r\n    static TypeName = 'two-joint-ik-solver';\r\n    static Properties = {\r\n        /** Root bone, never moves */\r\n        root: {type: Type.Object},\r\n        /** Bone attached to the root */\r\n        middle: {type: Type.Object},\r\n        /** Bone attached to the middle */\r\n        end: {type: Type.Object},\r\n        /** Target the joins should reach for */\r\n        target: {type: Type.Object},\r\n        /** Helper object to use to determine joint rotation axis */\r\n        helper: {type: Type.Object},\r\n    };\r\n\r\n    init() {\r\n        this.pos = new Float32Array(3 * 7);\r\n        this.p = [\r\n            this.pos.subarray(0, 3),\r\n            this.pos.subarray(3, 6),\r\n            this.pos.subarray(6, 9),\r\n            this.pos.subarray(9, 12),\r\n            this.pos.subarray(12, 15),\r\n            this.pos.subarray(15, 18),\r\n            this.pos.subarray(18, 21),\r\n        ];\r\n    }\r\n\r\n    update() {\r\n        const p = this.p;\r\n        this.root.getTranslationWorld(p[0]);\r\n        this.middle.getTranslationWorld(p[1]);\r\n        this.end.getTranslationWorld(p[2]);\r\n        this.target.getTranslationWorld(p[3]);\r\n        const tla = p[4];\r\n        const tlb = p[5];\r\n        this.root.getTranslationLocal(tla);\r\n        this.middle.getTranslationLocal(tlb);\r\n        if (this.helper) this.helper.getTranslationWorld(p[6]);\r\n\r\n        twoJointIK(\r\n            this.root.transformLocal,\r\n            this.middle.transformLocal,\r\n            p[0],\r\n            p[1],\r\n            p[2],\r\n            p[3],\r\n            0.01,\r\n            this.root.transformWorld.subarray(0, 4),\r\n            this.middle.transformWorld.subarray(0, 4),\r\n            this.helper ? p[6] : null\r\n        );\r\n\r\n        this.root.setTranslationLocal(tla);\r\n        this.middle.setTranslationLocal(tlb);\r\n\r\n        this.root.setDirty();\r\n        this.middle.setDirty();\r\n    }\r\n}\r\n", "import {Component, Texture, Type} from '@wonderlandengine/api';\r\n\r\n/**\r\n * Downloads a video from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * on given material.\r\n *\r\n * Video textures need to be updated regularly whenever\r\n * a new frame is available. This component handles the\r\n * detection of a new frame and updates the texture to\r\n * reflect the video's current frame.\r\n *\r\n * Materials from the following shaders are supported:\r\n *  - \"Phong Opaque Textured\"\r\n *  - \"Flat Opaque Textured\"\r\n *  - \"Background\"\r\n *  - \"Physical Opaque Textured\"\r\n *  - \"Foliage\"\r\n *\r\n * The video can be accessed through `this.video`:\r\n *\r\n * ```js\r\n *   let videoTexture = this.object.getComponent('video-texture');\r\n *   videoTexture.video.play();\r\n *   videoTexture.video.pause();\r\n * ```\r\n *\r\n * See [Video Example](/showcase/video).\r\n */\r\nexport class VideoTexture extends Component {\r\n    static TypeName = 'video-texture';\r\n    static Properties = {\r\n        /** URL to download video from */\r\n        url: {type: Type.String},\r\n        /** Material to apply the video texture to */\r\n        material: {type: Type.Material},\r\n        /** Whether to loop the video */\r\n        loop: {type: Type.Bool, default: true},\r\n        /** Whether to automatically start playing the video */\r\n        autoplay: {type: Type.Bool, default: true},\r\n        /** Whether to mute sound */\r\n        muted: {type: Type.Bool, default: true},\r\n    };\r\n\r\n    init() {\r\n        if (!this.material) {\r\n            throw Error('video-texture: material property not set');\r\n        }\r\n        this.loaded = false;\r\n        this.frameUpdateRequested = true;\r\n    }\r\n\r\n    start() {\r\n        this.video = document.createElement('video');\r\n        this.video.src = this.url;\r\n        this.video.crossOrigin = 'anonymous';\r\n        this.video.playsInline = true;\r\n        this.video.loop = this.loop;\r\n        this.video.muted = this.muted;\r\n        this.video.addEventListener('playing', () => { this.loaded = true; });\r\n\r\n        if (this.autoplay) {\r\n            const playAfterUserGesture = () => {\r\n                this.video.play();\r\n\r\n                window.removeEventListener('click', playAfterUserGesture);\r\n                window.removeEventListener('touchstart', playAfterUserGesture);\r\n            };\r\n            window.addEventListener('click', playAfterUserGesture);\r\n            window.addEventListener('touchstart', playAfterUserGesture);\r\n        }\r\n    }\r\n\r\n    applyTexture() {\r\n        const mat = this.material;\r\n        const shader = mat.shader;\r\n        const texture = (this.texture = new Texture(this.engine, this.video));\r\n\r\n        if (shader === 'Flat Opaque Textured') {\r\n            mat.flatTexture = texture;\r\n        } else if (shader === 'Phong Opaque Textured' || shader === 'Foliage') {\r\n            mat.diffuseTexture = texture;\r\n        } else if (shader === 'Background') {\r\n            mat.texture = texture;\r\n        } else if (shader === 'Physical Opaque Textured') {\r\n            mat.albedoTexture = texture;\r\n        } else {\r\n            console.error('Shader', shader, 'not supported by video-texture');\r\n        }\r\n\r\n        if ('requestVideoFrameCallback' in this.video) {\r\n            this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n        } else {\r\n            this.video.addEventListener(\r\n                'timeupdate',\r\n                () => { this.frameUpdateRequested = true; }\r\n            );\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.loaded && this.frameUpdateRequested) {\r\n            if (this.texture) {\r\n                this.texture.update();\r\n            } else {\r\n                /* Apply texture on first frame update request */\r\n                this.applyTexture();\r\n            }\r\n            this.frameUpdateRequested = false;\r\n        }\r\n    }\r\n\r\n    updateVideo() {\r\n        this.frameUpdateRequested = true;\r\n        this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\n/**\r\n * Allows switching all other components on an object to active/inactive\r\n * depending on whether a VR/AR session is active.\r\n *\r\n * Useful for hiding controllers until the user enters VR for example.\r\n */\r\nexport class VrModeActiveSwitch extends Component {\r\n    static TypeName = 'vr-mode-active-switch';\r\n    static Properties = {\r\n        /** When components should be active: In VR or when not in VR */\r\n        activateComponents: {\r\n            type: Type.Enum,\r\n            values: ['in VR', 'in non-VR'],\r\n            default: 'in VR',\r\n        },\r\n        /** Whether child object's components should be affected */\r\n        affectChildren: {type: Type.Bool, default: true},\r\n    };\r\n\r\n    start() {\r\n        this.components = [];\r\n        this.getComponents(this.object);\r\n\r\n        /* Initial activation/deactivation */\r\n        this.onXRSessionEnd();\r\n\r\n        this.engine.onXRSessionStart.push(this.onXRSessionStart.bind(this));\r\n        this.engine.onXRSessionEnd.push(this.onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    getComponents(obj) {\r\n        const comps = obj.getComponents().filter((c) => c.type !== 'vr-mode-active-switch');\r\n        this.components = this.components.concat(comps);\r\n\r\n        if (this.affectChildren) {\r\n            let children = obj.children;\r\n            for (let i = 0; i < children.length; ++i) {\r\n                this.getComponents(children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setComponentsActive(active) {\r\n        const comps = this.components;\r\n        for (let i = 0; i < comps.length; ++i) {\r\n            comps[i].active = active;\r\n        }\r\n    }\r\n\r\n    onXRSessionStart() {\r\n        if (!this.active) return;\r\n        this.setComponentsActive(this.activateComponents == 0);\r\n    }\r\n\r\n    onXRSessionEnd() {\r\n        if (!this.active) return;\r\n        this.setComponentsActive(this.activateComponents != 0);\r\n    }\r\n}\r\n", "import {Component, Type} from '@wonderlandengine/api';\r\n\r\nimport {vec3, mat4, quat, quat2} from 'gl-matrix';\r\n\r\nconst VRM_ROLL_AXES = {\r\n    X: [1.0, 0.0, 0.0],\r\n    Y: [0.0, 1.0, 0.0],\r\n    Z: [0.0, 0.0, 1.0],\r\n};\r\n\r\nconst VRM_AIM_AXES = {\r\n    PositiveX: [1.0, 0.0, 0.0],\r\n    NegativeX: [-1.0, 0.0, 0.0],\r\n    PositiveY: [0.0, 1.0, 0.0],\r\n    NegativeY: [0.0, -1.0, 0.0],\r\n    PositiveZ: [0.0, 0.0, 1.0],\r\n    NegativeZ: [0.0, 0.0, -1.0],\r\n};\r\n\r\n/**\r\n * Component for loading and handling VRM 1.0 models.\r\n *\r\n * Posing of the model should be done exclusively by rotating the bones. These can be\r\n * accessed using the `.bones` property and follow the VRM bone naming. Note that not\r\n * all VRM models will have all possible bones. The rest pose (T-pose) is captured in\r\n * the `.restPose` property. Resetting a bone to its rest pose can be done as follows:\r\n * ```js\r\n * vrmComponent.bones[vrmBoneName].rotationLocal = vrmComponent.restPose[vrmBoneName];\r\n * ```\r\n *\r\n * Moving the model through the world should be done by moving the object this component\r\n * is attached to. In other words, by moving the root of the VRM model. The bones and any\r\n * descendant objects should *not* be used to move the VRM model.\r\n *\r\n * The core extension `VRMC_vrm` as well as the`VRMC_springBone` and `VRMC_node_constraint`\r\n * extensions are supported.\r\n *\r\n * **Limitations:**\r\n * - No support for `VRMC_material_mtoon`\r\n * - Expressions aren't supported\r\n * - Expression based lookAt isn't supported\r\n * - Mesh annotation mode `auto` is not supported (first person mode)\r\n */\r\nexport class Vrm extends Component {\r\n    static TypeName = 'vrm';\r\n    static Properties = {\r\n        /** URL to a VRM file to load */\r\n        src: {type: Type.String},\r\n        /** Object the VRM is looking at */\r\n        lookAtTarget: {type: Type.Object},\r\n    };\r\n\r\n    /** Meta information about the VRM model */\r\n    meta = null;\r\n    /** The humanoid bones of the VRM model */\r\n    bones = {\r\n        /* Torso */\r\n        hips: null,\r\n        spine: null,\r\n        chest: null,\r\n        upperChest: null,\r\n        neck: null,\r\n\r\n        /* Head */\r\n        head: null,\r\n        leftEye: null,\r\n        rightEye: null,\r\n        jaw: null,\r\n\r\n        /* Legs */\r\n        leftUpperLeg: null,\r\n        leftLowerLeg: null,\r\n        leftFoot: null,\r\n        leftToes: null,\r\n        rightUpperLeg: null,\r\n        rightLowerLeg: null,\r\n        rightFoot: null,\r\n        rightToes: null,\r\n\r\n        /* Arms */\r\n        leftShoulder: null,\r\n        leftUpperArm: null,\r\n        leftLowerArm: null,\r\n        leftHand: null,\r\n        rightShoulder: null,\r\n        rightUpperArm: null,\r\n        rightLowerArm: null,\r\n        rightHand: null,\r\n\r\n        /* Fingers */\r\n        leftThumbMetacarpal: null,\r\n        leftThumbProximal: null,\r\n        leftThumbDistal: null,\r\n        leftIndexProximal: null,\r\n        leftIndexIntermediate: null,\r\n        leftIndexDistal: null,\r\n        leftMiddleProximal: null,\r\n        leftMiddleIntermediate: null,\r\n        leftMiddleDistal: null,\r\n        leftRingProximal: null,\r\n        leftRingIntermediate: null,\r\n        leftRingDistal: null,\r\n        leftLittleProximal: null,\r\n        leftLittleIntermediate: null,\r\n        leftLittleDistal: null,\r\n        rightThumbMetacarpal: null,\r\n        rightThumbProximal: null,\r\n        rightThumbDistal: null,\r\n        rightIndexProximal: null,\r\n        rightIndexIntermediate: null,\r\n        rightIndexDistal: null,\r\n        rightMiddleProximal: null,\r\n        rightMiddleIntermediate: null,\r\n        rightMiddleDistal: null,\r\n        rightRingProximal: null,\r\n        rightRingIntermediate: null,\r\n        rightRingDistal: null,\r\n        rightLittleProximal: null,\r\n        rightLittleIntermediate: null,\r\n        rightLittleDistal: null,\r\n    };\r\n    /** Rotations of the bones in the rest pose (T-pose) */\r\n    restPose = {};\r\n\r\n    /* All node constraints, ordered to deal with dependencies */\r\n    _nodeConstraints = [];\r\n\r\n    /* VRMC_springBone chains */\r\n    _springChains = [];\r\n    /* Spherical colliders for spring bones */\r\n    _sphereColliders = [];\r\n    /* Capsule shaped colliders for spring bones */\r\n    _capsuleColliders = [];\r\n\r\n    /* Indicates which meshes are rendered in first/third person views */\r\n    _firstPersonAnnotations = [];\r\n\r\n    /* Contains details for (bone type) lookAt behaviour */\r\n    _lookAt = null;\r\n\r\n    /* Whether or not the VRM component has been initialized with `initializeVrm` */\r\n    _initialized = false;\r\n\r\n    init() {\r\n        this._tempV3 = vec3.create();\r\n        this._tempV3A = vec3.create();\r\n        this._tempV3B = vec3.create();\r\n        this._tempQuat = quat.create();\r\n        this._tempQuatA = quat.create();\r\n        this._tempQuatB = quat.create();\r\n        this._tempMat4A = mat4.create();\r\n        this._tempQuat2 = quat2.create();\r\n\r\n        this._tailToShape = vec3.create();\r\n        this._headToTail = vec3.create();\r\n\r\n        this._inertia = vec3.create();\r\n        this._stiffness = vec3.create();\r\n        this._external = vec3.create();\r\n\r\n        this._rightVector = vec3.set(vec3.create(), 1, 0, 0);\r\n        this._upVector = vec3.set(vec3.create(), 0, 1, 0);\r\n        this._forwardVector = vec3.set(vec3.create(), 0, 0, 1);\r\n        this._identityQuat = quat.identity(quat.create());\r\n        this._rad2deg = 180.0 / Math.PI;\r\n    }\r\n\r\n    start() {\r\n        if (!this.src) {\r\n            console.error('vrm: src property not set');\r\n            return;\r\n        }\r\n\r\n        this.engine.scene\r\n            .append(this.src, {loadGltfExtensions: true})\r\n            .then(({root, extensions}) => {\r\n                root.children.forEach((child) => (child.parent = this.object));\r\n                this._initializeVrm(extensions);\r\n                root.destroy();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Parses the VRM glTF extensions and initializes the vrm component.\r\n     * @param {GLTFExtensions} extensions The glTF extensions for the VRM model\r\n     */\r\n    _initializeVrm(extensions) {\r\n        if (this._initialized) {\r\n            throw Error('VRM component has already been initialized');\r\n        }\r\n\r\n        const VRMC_vrm = extensions.root['VRMC_vrm'];\r\n        if (!VRMC_vrm) {\r\n            throw Error('Missing VRM extensions');\r\n        }\r\n        if (VRMC_vrm.specVersion !== '1.0') {\r\n            throw Error(\r\n                `Unsupported VRM version, only 1.0 is supported, but encountered '${VRMC_vrm.specVersion}'`\r\n            );\r\n        }\r\n\r\n        this.meta = VRMC_vrm.meta;\r\n        this._parseHumanoid(VRMC_vrm.humanoid, extensions);\r\n\r\n        if (VRMC_vrm.firstPerson) {\r\n            this._parseFirstPerson(VRMC_vrm.firstPerson, extensions);\r\n        }\r\n\r\n        if (VRMC_vrm.lookAt) {\r\n            this._parseLookAt(VRMC_vrm.lookAt);\r\n        }\r\n\r\n        this._findAndParseNodeConstraints(extensions);\r\n\r\n        const springBone = extensions.root['VRMC_springBone'];\r\n        if (springBone) {\r\n            this._parseAndInitializeSpringBones(springBone, extensions);\r\n        }\r\n\r\n        this._initialized = true;\r\n    }\r\n\r\n    _parseHumanoid(humanoid, extensions) {\r\n        for (const boneName in humanoid.humanBones) {\r\n            if (!(boneName in this.bones)) {\r\n                console.warn(`Unrecognized bone '${boneName}'`);\r\n                continue;\r\n            }\r\n\r\n            const node = humanoid.humanBones[boneName].node;\r\n            const objectId = extensions.idMapping[node];\r\n\r\n            this.bones[boneName] = this.engine.wrapObject(objectId);\r\n            this.restPose[boneName] = quat.copy(\r\n                quat.create(),\r\n                this.bones[boneName].rotationLocal\r\n            );\r\n        }\r\n    }\r\n\r\n    _parseFirstPerson(firstPerson, extensions) {\r\n        for (const meshAnnotation of firstPerson.meshAnnotations) {\r\n            const annotation = {\r\n                node: this.engine.wrapObject(extensions.idMapping[meshAnnotation.node]),\r\n                firstPerson: true,\r\n                thirdPerson: true,\r\n            };\r\n            switch (meshAnnotation.type) {\r\n                case 'firstPersonOnly':\r\n                    annotation.thirdPerson = false;\r\n                    break;\r\n                case 'thirdPersonOnly':\r\n                    annotation.firstPerson = false;\r\n                    break;\r\n                case 'both':\r\n                    break;\r\n                case 'auto':\r\n                    console.warn(\r\n                        \"First person mesh annotation type 'auto' is not supported, treating as 'both'!\"\r\n                    );\r\n                    break;\r\n                default:\r\n                    console.error(`Invalid mesh annotation type '${meshAnnotation.type}'`);\r\n                    break;\r\n            }\r\n            this._firstPersonAnnotations.push(annotation);\r\n        }\r\n    }\r\n\r\n    _parseLookAt(lookAt) {\r\n        if (lookAt.type !== 'bone') {\r\n            console.warn(\r\n                `Unsupported lookAt type '${lookAt.type}', only 'bone' is supported`\r\n            );\r\n            return;\r\n        }\r\n\r\n        const parseRangeMap = (rangeMap) => {\r\n            return {\r\n                inputMaxValue: rangeMap.inputMaxValue,\r\n                outputScale: rangeMap.outputScale,\r\n            };\r\n        };\r\n        this._lookAt = {\r\n            offsetFromHeadBone: lookAt.offsetFromHeadBone || [0, 0, 0],\r\n            horizontalInner: parseRangeMap(lookAt.rangeMapHorizontalInner),\r\n            horizontalOuter: parseRangeMap(lookAt.rangeMapHorizontalOuter),\r\n            verticalDown: parseRangeMap(lookAt.rangeMapVerticalDown),\r\n            verticalUp: parseRangeMap(lookAt.rangeMapVerticalUp),\r\n        };\r\n    }\r\n\r\n    _findAndParseNodeConstraints(extensions) {\r\n        const traverse = (object) => {\r\n            const nodeExtensions = extensions.node[object.objectId];\r\n            if (nodeExtensions && 'VRMC_node_constraint' in nodeExtensions) {\r\n                const nodeConstraintExtension = nodeExtensions['VRMC_node_constraint'];\r\n\r\n                const constraint = nodeConstraintExtension.constraint;\r\n                let type, axis;\r\n                if ('roll' in constraint) {\r\n                    type = 'roll';\r\n                    axis = VRM_ROLL_AXES[constraint.roll.rollAxis];\r\n                } else if ('aim' in constraint) {\r\n                    type = 'aim';\r\n                    axis = VRM_AIM_AXES[constraint.aim.aimAxis];\r\n                } else if ('rotation' in constraint) {\r\n                    type = 'rotation';\r\n                }\r\n\r\n                if (type) {\r\n                    const source = this.engine.wrapObject(\r\n                        extensions.idMapping[constraint[type].source]\r\n                    );\r\n                    this._nodeConstraints.push({\r\n                        type,\r\n                        source,\r\n                        destination: object,\r\n                        axis: axis,\r\n                        weight: constraint[type].weight,\r\n                        /* Rest pose */\r\n                        destinationRestLocalRotation: quat.copy(\r\n                            quat.create(),\r\n                            object.rotationLocal\r\n                        ),\r\n                        sourceRestLocalRotation: quat.copy(\r\n                            quat.create(),\r\n                            source.rotationLocal\r\n                        ),\r\n                        sourceRestLocalRotationInv: quat.invert(\r\n                            quat.create(),\r\n                            source.rotationLocal\r\n                        ),\r\n                    });\r\n                } else {\r\n                    console.warn(\r\n                        'Unrecognized or invalid VRMC_node_constraint, ignoring it'\r\n                    );\r\n                }\r\n            }\r\n\r\n            for (const child of object.children) {\r\n                traverse(child);\r\n            }\r\n        };\r\n        traverse(this.object);\r\n    }\r\n\r\n    _parseAndInitializeSpringBones(springBone, extensions) {\r\n        const colliders = (springBone.colliders || []).map((collider, i) => {\r\n            const shapeType = 'capsule' in collider.shape ? 'capsule' : 'sphere';\r\n            return {\r\n                id: i,\r\n                object: this.engine.wrapObject(extensions.idMapping[collider.node]),\r\n                shape: {\r\n                    isCapsule: shapeType === 'capsule',\r\n                    radius: collider.shape[shapeType].radius,\r\n                    offset: collider.shape[shapeType].offset,\r\n                    tail: collider.shape[shapeType].tail,\r\n                },\r\n                cache: {\r\n                    head: vec3.create(),\r\n                    tail: vec3.create(),\r\n                },\r\n            };\r\n        });\r\n        this._sphereColliders = colliders.filter((c) => !c.shape.isCapsule);\r\n        this._capsuleColliders = colliders.filter((c) => c.shape.isCapsule);\r\n\r\n        const colliderGroups = (springBone.colliderGroups || []).map((group) => ({\r\n            name: group.name,\r\n            colliders: group.colliders.map((c) => colliders[c]),\r\n        }));\r\n\r\n        for (const spring of springBone.springs) {\r\n            const joints = [];\r\n            for (const joint of spring.joints) {\r\n                const springJoint = {\r\n                    hitRadius: 0.0,\r\n                    stiffness: 1.0,\r\n                    gravityPower: 0.0,\r\n                    gravityDir: [0.0, -1.0, 0.0],\r\n                    dragForce: 0.5,\r\n                    node: null,\r\n                    state: null,\r\n                };\r\n                Object.assign(springJoint, joint);\r\n                springJoint.node = this.engine.wrapObject(extensions.idMapping[springJoint.node]);\r\n                joints.push(springJoint);\r\n            }\r\n\r\n            const springChainColliders = (spring.colliderGroups || []).flatMap(\r\n                (cg) => colliderGroups[cg].colliders\r\n            );\r\n            this._springChains.push({\r\n                name: spring.name,\r\n                center: spring.center\r\n                    ? this.engine.wrapObject(extensions.idMapping[spring.center])\r\n                    : null,\r\n                joints,\r\n                sphereColliders: springChainColliders.filter((c) => !c.shape.isCapsule),\r\n                capsuleColliders: springChainColliders.filter((c) => c.shape.isCapsule),\r\n            });\r\n        }\r\n\r\n        /* Initialize spring bone joint state */\r\n        for (const springChain of this._springChains) {\r\n            for (let i = 0; i < springChain.joints.length - 1; ++i) {\r\n                const springBoneJoint = springChain.joints[i];\r\n                const childSpringBoneJoint = springChain.joints[i + 1];\r\n\r\n                const springBonePosition = springBoneJoint.node.getTranslationWorld(\r\n                    vec3.create()\r\n                );\r\n                const childSpringBonePosition =\r\n                    childSpringBoneJoint.node.getTranslationWorld(vec3.create());\r\n                const boneDirection = vec3.subtract(\r\n                    this._tempV3A,\r\n                    springBonePosition,\r\n                    childSpringBonePosition\r\n                );\r\n                const state = {\r\n                    prevTail: childSpringBonePosition,\r\n                    currentTail: vec3.copy(vec3.create(), childSpringBonePosition),\r\n                    initialLocalRotation: quat.copy(\r\n                        quat.create(),\r\n                        springBoneJoint.node.rotationLocal\r\n                    ),\r\n                    initialLocalTransformInvert: quat2.invert(\r\n                        quat2.create(),\r\n                        springBoneJoint.node.transformLocal\r\n                    ),\r\n                    boneAxis: vec3.normalize(\r\n                        vec3.create(),\r\n                        childSpringBoneJoint.node.getTranslationLocal(this._tempV3)\r\n                    ),\r\n                    /* Ensure bone length is at least 1cm to avoid jittery behaviour from zero-length bones */\r\n                    boneLength: Math.max(0.01, vec3.length(boneDirection)),\r\n                    /* Tail positions in center space, if needed */\r\n                    prevTailCenter: null,\r\n                    currentTailCenter: null,\r\n                };\r\n\r\n                if (springChain.center) {\r\n                    state.prevTailCenter = springChain.center.transformPointInverseWorld(\r\n                        vec3.create(),\r\n                        childSpringBonePosition\r\n                    );\r\n                    state.currentTailCenter = vec3.copy(\r\n                        vec3.create(),\r\n                        childSpringBonePosition\r\n                    );\r\n                }\r\n\r\n                springBoneJoint.state = state;\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this._initialized) {\r\n            return;\r\n        }\r\n\r\n        /* 1. Resolve humanoid bones (performed by user) */\r\n        /* 2. Resolve LookAt (bone type) as the position of the head is determined */\r\n        this._resolveLookAt();\r\n        /* 3. Expression update (TODO) */\r\n        /* 4. Apply Expression (TODO) */\r\n        /* 5. Resolve constraints */\r\n        this._resolveConstraints();\r\n        /* 6. Resolve Spring Bone */\r\n        this._updateSpringBones(dt);\r\n    }\r\n\r\n    _rangeMap(rangeMap, input) {\r\n        const maxValue = rangeMap.inputMaxValue;\r\n        const outputScale = rangeMap.outputScale;\r\n        return (Math.min(input, maxValue) / maxValue) * outputScale;\r\n    }\r\n\r\n    _resolveLookAt() {\r\n        if (!this._lookAt || !this.lookAtTarget) {\r\n            return;\r\n        }\r\n\r\n        const lookAtSource = this.bones.head.transformPointWorld(\r\n            this._tempV3A,\r\n            this._lookAt.offsetFromHeadBone\r\n        );\r\n\r\n        const lookAtTarget = this.lookAtTarget.getTranslationWorld(this._tempV3B);\r\n        const lookAtDirection = vec3.sub(this._tempV3A, lookAtTarget, lookAtSource);\r\n        vec3.normalize(lookAtDirection, lookAtDirection);\r\n\r\n        /* Convert the direction into LookAt space */\r\n        this.bones.head.parent.transformVectorInverseWorld(lookAtDirection);\r\n        const z = vec3.dot(lookAtDirection, this._forwardVector);\r\n        const x = vec3.dot(lookAtDirection, this._rightVector);\r\n        const yaw = Math.atan2(x, z) * this._rad2deg;\r\n\r\n        const xz = Math.sqrt(x * x + z * z);\r\n        const y = vec3.dot(lookAtDirection, this._upVector);\r\n        let pitch = Math.atan2(-y, xz) * this._rad2deg;\r\n\r\n        /* Limit pitch */\r\n        if (pitch > 0) {\r\n            pitch = this._rangeMap(this._lookAt.verticalDown, pitch);\r\n        } else {\r\n            pitch = -this._rangeMap(this._lookAt.verticalUp, -pitch);\r\n        }\r\n\r\n        /* Left eye (limit yaw) */\r\n        if (this.bones.leftEye) {\r\n            let yawLeft = yaw;\r\n            if (yawLeft > 0) {\r\n                yawLeft = this._rangeMap(this._lookAt.horizontalInner, yawLeft);\r\n            } else {\r\n                yawLeft = -this._rangeMap(this._lookAt.horizontalOuter, -yawLeft);\r\n            }\r\n\r\n            const eyeRotation = quat.fromEuler(this._tempQuatA, pitch, yawLeft, 0);\r\n            this.bones.leftEye.rotationLocal = quat.multiply(\r\n                eyeRotation,\r\n                this.restPose.leftEye,\r\n                eyeRotation\r\n            );\r\n        }\r\n\r\n        /* Right eye (limit yaw) */\r\n        if (this.bones.rightEye) {\r\n            let yawRight = yaw;\r\n            if (yawRight > 0) {\r\n                yawRight = this._rangeMap(this._lookAt.horizontalOuter, yawRight);\r\n            } else {\r\n                yawRight = -this._rangeMap(this._lookAt.horizontalInner, -yawRight);\r\n            }\r\n\r\n            const eyeRotation = quat.fromEuler(this._tempQuatA, pitch, yawRight, 0);\r\n            this.bones.rightEye.rotationLocal = quat.multiply(\r\n                eyeRotation,\r\n                this.restPose.rightEye,\r\n                eyeRotation\r\n            );\r\n        }\r\n    }\r\n\r\n    _resolveConstraints() {\r\n        for (const nodeConstraint of this._nodeConstraints) {\r\n            this._resolveConstraint(nodeConstraint);\r\n        }\r\n    }\r\n\r\n    _resolveConstraint(nodeConstraint) {\r\n        const dstRestQuat = nodeConstraint.destinationRestLocalRotation;\r\n        const srcRestQuatInv = nodeConstraint.sourceRestLocalRotationInv;\r\n        const targetQuat = quat.identity(this._tempQuatA);\r\n\r\n        switch (nodeConstraint.type) {\r\n            case 'roll':\r\n                {\r\n                    const deltaSrcQuat = quat.multiply(\r\n                        this._tempQuatA,\r\n                        srcRestQuatInv,\r\n                        nodeConstraint.source.rotationLocal\r\n                    );\r\n\r\n                    /* source to parent */\r\n                    const deltaSrcQuatInParent = quat.multiply(\r\n                        this._tempQuatA,\r\n                        nodeConstraint.sourceRestLocalRotation,\r\n                        deltaSrcQuat\r\n                    );\r\n                    quat.mul(deltaSrcQuatInParent, deltaSrcQuatInParent, srcRestQuatInv);\r\n\r\n                    /* parent to destination */\r\n                    const dstRestQuatInv = quat.invert(this._tempQuatB, dstRestQuat);\r\n                    const deltaSrcQuatInDst = quat.multiply(\r\n                        this._tempQuatB,\r\n                        dstRestQuatInv,\r\n                        deltaSrcQuatInParent\r\n                    );\r\n                    quat.multiply(deltaSrcQuatInDst, deltaSrcQuatInDst, dstRestQuat);\r\n\r\n                    const toVec = vec3.transformQuat(\r\n                        this._tempV3A,\r\n                        nodeConstraint.axis,\r\n                        deltaSrcQuatInDst\r\n                    );\r\n                    const fromToQuat = quat.rotationTo(\r\n                        this._tempQuatA,\r\n                        nodeConstraint.axis,\r\n                        toVec\r\n                    );\r\n\r\n                    quat.mul(\r\n                        targetQuat,\r\n                        dstRestQuat,\r\n                        quat.invert(this._tempQuat, fromToQuat)\r\n                    );\r\n                    quat.mul(targetQuat, targetQuat, deltaSrcQuatInDst);\r\n                }\r\n                break;\r\n            case 'aim':\r\n                {\r\n                    const dstParentWorldQuat =\r\n                        nodeConstraint.destination.parent.rotationWorld;\r\n                    /* fromVec = aimAxis.applyQuaternion( dstParentWorldQuat * dstRestQuat ) */\r\n                    const fromVec = vec3.transformQuat(\r\n                        this._tempV3A,\r\n                        nodeConstraint.axis,\r\n                        dstRestQuat\r\n                    );\r\n                    vec3.transformQuat(fromVec, fromVec, dstParentWorldQuat);\r\n                    /* toVec = ( srcWorldPos - dstWorldPos ).normalized */\r\n                    const toVec = nodeConstraint.source.getTranslationWorld(this._tempV3B);\r\n                    vec3.sub(\r\n                        toVec,\r\n                        toVec,\r\n                        nodeConstraint.destination.getTranslationWorld(this._tempV3)\r\n                    );\r\n                    vec3.normalize(toVec, toVec);\r\n\r\n                    /* fromToQuat = Quaternion.fromToRotation( fromVec, toVec ) */\r\n                    const fromToQuat = quat.rotationTo(this._tempQuatA, fromVec, toVec);\r\n\r\n                    quat.mul(\r\n                        targetQuat,\r\n                        quat.invert(this._tempQuat, dstParentWorldQuat),\r\n                        fromToQuat\r\n                    );\r\n                    quat.mul(targetQuat, targetQuat, dstParentWorldQuat);\r\n                    quat.mul(targetQuat, targetQuat, dstRestQuat);\r\n                }\r\n                break;\r\n            case 'rotation':\r\n                {\r\n                    const srcDeltaQuat = quat.mul(\r\n                        targetQuat,\r\n                        srcRestQuatInv,\r\n                        nodeConstraint.source.rotationLocal\r\n                    );\r\n                    quat.mul(targetQuat, dstRestQuat, srcDeltaQuat);\r\n                }\r\n                break;\r\n        }\r\n\r\n        /* Apply constraint */\r\n        quat.slerp(targetQuat, dstRestQuat, targetQuat, nodeConstraint.weight);\r\n        nodeConstraint.destination.rotationLocal = targetQuat;\r\n    }\r\n\r\n    _updateSpringBones(dt) {\r\n        /* Pre-compute collider positions */\r\n        this._sphereColliders.forEach(({object, shape, cache}) => {\r\n            const offset = vec3.copy(cache.head, shape.offset);\r\n            object.transformVectorWorld(offset);\r\n            vec3.add(cache.head, object.getTranslationWorld(this._tempV3), offset);\r\n        });\r\n        this._capsuleColliders.forEach(({object, shape, cache}) => {\r\n            const shapeCenter = object.getTranslationWorld(this._tempV3A);\r\n            const headOffset = vec3.copy(cache.head, shape.offset);\r\n            object.transformVectorWorld(headOffset);\r\n            vec3.add(cache.head, shapeCenter, headOffset);\r\n\r\n            const tailOffset = vec3.copy(cache.tail, shape.tail);\r\n            object.transformVectorWorld(tailOffset);\r\n            vec3.add(cache.tail, shapeCenter, tailOffset);\r\n        });\r\n\r\n        /* Update spring chains */\r\n        this._springChains.forEach((springChain) => {\r\n            for (let i = 0; i < springChain.joints.length - 1; ++i) {\r\n                const joint = springChain.joints[i];\r\n                const parentWorldRotation = joint.node.parent\r\n                    ? joint.node.parent.rotationWorld\r\n                    : this._identityQuat;\r\n\r\n                /* 1. Forces */\r\n                /* inertia = (currentTail - prevTail) * (1.0f - dragForce); */\r\n                const inertia = this._inertia;\r\n                if (springChain.center) {\r\n                    vec3.sub(\r\n                        inertia,\r\n                        joint.state.currentTailCenter,\r\n                        joint.state.prevTailCenter\r\n                    );\r\n                    springChain.center.transformVectorWorld(inertia);\r\n                } else {\r\n                    vec3.sub(inertia, joint.state.currentTail, joint.state.prevTail);\r\n                }\r\n                vec3.scale(inertia, inertia, 1.0 - joint.dragForce);\r\n\r\n                /* stiffness = deltaTime * parentWorldRotation * localRotation * boneAxis * stiffnessForce; */\r\n                const stiffness = vec3.copy(this._stiffness, joint.state.boneAxis);\r\n                vec3.transformQuat(stiffness, stiffness, joint.state.initialLocalRotation);\r\n                vec3.transformQuat(stiffness, stiffness, parentWorldRotation);\r\n                vec3.scale(stiffness, stiffness, dt * joint.stiffness);\r\n\r\n                /* external = deltaTime * gravityDir * gravityPower; */\r\n                const external = vec3.scale(\r\n                    this._external,\r\n                    joint.gravityDir,\r\n                    dt * joint.gravityPower\r\n                );\r\n\r\n                /* nextTail = currentTail + inertia + stiffness + external; */\r\n                const nextTail = vec3.copy(this._tempV3A, joint.state.currentTail);\r\n                vec3.add(nextTail, nextTail, inertia);\r\n                vec3.add(nextTail, nextTail, stiffness);\r\n                vec3.add(nextTail, nextTail, external);\r\n\r\n                /* constrain the length */\r\n                /* nextTail = worldPosition + (nextTail - worldPosition).normalized * boneLength; */\r\n                const worldPosition = joint.node.getTranslationWorld(this._tempV3B);\r\n                vec3.sub(nextTail, nextTail, worldPosition);\r\n                vec3.normalize(nextTail, nextTail);\r\n                vec3.scaleAndAdd(nextTail, worldPosition, nextTail, joint.state.boneLength);\r\n\r\n                /* 2. Collision with colliders */\r\n                /* Sphere colliders */\r\n                for (const {shape, cache} of springChain.sphereColliders) {\r\n                    let tailToShape = this._tailToShape;\r\n\r\n                    const sphereCenter = cache.head;\r\n                    tailToShape = vec3.sub(tailToShape, nextTail, sphereCenter);\r\n\r\n                    const radius = shape.radius + joint.hitRadius;\r\n                    const dist = vec3.length(tailToShape) - radius;\r\n                    if (dist < 0.0) {\r\n                        vec3.normalize(tailToShape, tailToShape);\r\n                        vec3.scaleAndAdd(nextTail, nextTail, tailToShape, -dist);\r\n\r\n                        /* constraint the length */\r\n                        vec3.sub(nextTail, nextTail, worldPosition);\r\n                        vec3.normalize(nextTail, nextTail);\r\n                        vec3.scaleAndAdd(\r\n                            nextTail,\r\n                            worldPosition,\r\n                            nextTail,\r\n                            joint.state.boneLength\r\n                        );\r\n                    }\r\n                }\r\n                /* Capsule colliders */\r\n                for (const {shape, cache} of springChain.capsuleColliders) {\r\n                    let tailToShape = this._tailToShape;\r\n\r\n                    const head = cache.head;\r\n                    const tail = cache.tail;\r\n\r\n                    /* Naively start with distance to the head */\r\n                    tailToShape = vec3.sub(tailToShape, nextTail, head);\r\n\r\n                    const headToTail = vec3.sub(this._headToTail, tail, head);\r\n                    const dot = vec3.dot(headToTail, tailToShape);\r\n                    if (vec3.squaredLength(headToTail) <= dot) {\r\n                        /* Closest to tail */\r\n                        vec3.sub(tailToShape, nextTail, tail);\r\n                    } else if (dot > 0.0) {\r\n                        /* Closest to middle */\r\n                        vec3.scale(\r\n                            headToTail,\r\n                            headToTail,\r\n                            dot / vec3.squaredLength(headToTail)\r\n                        );\r\n                        vec3.sub(tailToShape, tailToShape, headToTail);\r\n                    }\r\n\r\n                    const radius = shape.radius + joint.hitRadius;\r\n                    const dist = vec3.length(tailToShape) - radius;\r\n                    if (dist < 0.0) {\r\n                        vec3.normalize(tailToShape, tailToShape);\r\n                        vec3.scaleAndAdd(nextTail, nextTail, tailToShape, -dist);\r\n\r\n                        /* constraint the length */\r\n                        vec3.sub(nextTail, nextTail, worldPosition);\r\n                        vec3.normalize(nextTail, nextTail);\r\n                        vec3.scaleAndAdd(\r\n                            nextTail,\r\n                            worldPosition,\r\n                            nextTail,\r\n                            joint.state.boneLength\r\n                        );\r\n                    }\r\n                }\r\n\r\n                /* 3. Applying rotation */\r\n                vec3.copy(joint.state.prevTail, joint.state.currentTail);\r\n                vec3.copy(joint.state.currentTail, nextTail);\r\n                if (springChain.center) {\r\n                    vec3.copy(joint.state.prevTailCenter, joint.state.currentTailCenter);\r\n                    vec3.copy(joint.state.currentTailCenter, nextTail);\r\n                    springChain.center.transformPointInverseWorld(\r\n                        joint.state.currentTailCenter\r\n                    );\r\n                }\r\n\r\n                /* to = (nextTail * (node.parent.worldMatrix * initialLocalMatrix).inverse).normalized */\r\n                joint.node.parent.transformPointInverseWorld(nextTail);\r\n                const nextTailDualQuat = quat2.fromTranslation(this._tempQuat2, nextTail);\r\n                quat2.multiply(\r\n                    nextTailDualQuat,\r\n                    joint.state.initialLocalTransformInvert,\r\n                    nextTailDualQuat\r\n                );\r\n                quat2.getTranslation(nextTail, nextTailDualQuat);\r\n                vec3.normalize(nextTail, nextTail);\r\n                /* node.rotation = initialLocalRotation * Quaternion.fromToQuaternion(boneAxis, to); */\r\n                const jointRotation = quat.rotationTo(\r\n                    this._tempQuatA,\r\n                    joint.state.boneAxis,\r\n                    nextTail\r\n                );\r\n                joint.node.rotationLocal = quat.mul(\r\n                    this._tempQuatA,\r\n                    joint.state.initialLocalRotation,\r\n                    jointRotation\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} firstPerson Whether the model should render for first person or third person views\r\n     */\r\n    set firstPerson(firstPerson) {\r\n        this._firstPersonAnnotations.forEach((annotation) => {\r\n            const visible =\r\n                firstPerson == annotation.firstPerson ||\r\n                firstPerson != annotation.thirdPerson;\r\n            annotation.node.getComponents('mesh').forEach((mesh) => {\r\n                mesh.active = visible;\r\n            });\r\n        });\r\n    }\r\n}\r\n", "import {vec3} from 'gl-matrix';\r\nimport {Component, Type} from '@wonderlandengine/api';\r\n/**\r\n * Basic movement with W/A/S/D keys.\r\n */\r\nexport class WasdControlsComponent extends Component {\r\n    static TypeName = 'wasd-controls';\r\n    static Properties = {\r\n        /** Movement speed in m/s. */\r\n        speed: {type: Type.Float, default: 0.1},\r\n        /** Object of which the orientation is used to determine forward direction */\r\n        headObject: {type: Type.Object},\r\n    };\r\n\r\n    init() {\r\n        this.up = false;\r\n        this.right = false;\r\n        this.down = false;\r\n        this.left = false;\r\n\r\n        window.addEventListener('keydown', this.press.bind(this));\r\n        window.addEventListener('keyup', this.release.bind(this));\r\n    }\r\n\r\n    start() {\r\n        this.headObject = this.headObject || this.object;\r\n    }\r\n\r\n    update() {\r\n        let direction = [0, 0, 0];\r\n\r\n        if (this.up) direction[2] -= 1.0;\r\n        if (this.down) direction[2] += 1.0;\r\n        if (this.left) direction[0] -= 1.0;\r\n        if (this.right) direction[0] += 1.0;\r\n\r\n        vec3.normalize(direction, direction);\r\n        direction[0] *= this.speed;\r\n        direction[2] *= this.speed;\r\n        vec3.transformQuat(direction, direction, this.headObject.transformWorld);\r\n        this.object.translate(direction);\r\n    }\r\n\r\n    press(e) {\r\n        if (\r\n            e.keyCode === 38 /* up */ ||\r\n            e.keyCode === 87 /* w */ ||\r\n            e.keyCode === 90 /* z */\r\n        ) {\r\n            this.up = true;\r\n        } else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */) {\r\n            this.right = true;\r\n        } else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */) {\r\n            this.down = true;\r\n        } else if (\r\n            e.keyCode === 37 /* left */ ||\r\n            e.keyCode === 65 /* a */ ||\r\n            e.keyCode === 81 /* q */\r\n        ) {\r\n            this.left = true;\r\n        }\r\n    }\r\n\r\n    release(e) {\r\n        if (\r\n            e.keyCode === 38 /* up */ ||\r\n            e.keyCode === 87 /* w */ ||\r\n            e.keyCode === 90 /* z */\r\n        ) {\r\n            this.up = false;\r\n        } else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */) {\r\n            this.right = false;\r\n        } else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */) {\r\n            this.down = false;\r\n        } else if (\r\n            e.keyCode === 37 /* left */ ||\r\n            e.keyCode === 65 /* a */ ||\r\n            e.keyCode === 81 /* q */\r\n        ) {\r\n            this.left = false;\r\n        }\r\n    }\r\n}\r\n", "import PrefabBase, {PrefabBaseConstructor} from \"./PrefabBase\";\r\nimport {Object} from \"@wonderlandengine/api\";\r\n\r\nclass PrefabsRegistry\r\n{\r\n    private _prefabs: Map<string, PrefabBase>;\r\n\r\n    public readonly PREFAB_UNAME_KEY = 'pun';\r\n    public readonly PREFAB_TNAME_KEY = 'texName';\r\n\r\n    public constructor()\r\n    {\r\n        this._prefabs = new Map<string, PrefabBase>();\r\n    }\r\n\r\n    public registerPrefab<T extends PrefabBase>(prefab: T): void\r\n    {\r\n        let prefabUniqueName = prefab.getPrefabUniqueName();\r\n\r\n        if(this._prefabs.has(prefabUniqueName))\r\n            throw new Error(\"Can't register the same prefab twice: \" + prefabUniqueName);\r\n\r\n        this._prefabs.set(prefabUniqueName, prefab);\r\n        prefab.object[this.PREFAB_UNAME_KEY] = prefabUniqueName;\r\n    }\r\n\r\n    public getPrefab<T extends PrefabBase>(typeOrClass: PrefabBaseConstructor<T>): T | null\r\n    {\r\n        if(this._prefabs.has(typeOrClass.TypeName))\r\n            return this._prefabs.get(typeOrClass.TypeName) as T;\r\n\r\n        return null;\r\n    }\r\n\r\n    public getPrefabByName(uName: string): PrefabBase\r\n    {\r\n        if(this._prefabs.has(uName))\r\n            return this._prefabs.get(uName);\r\n\r\n        return null;\r\n    }\r\n\r\n    public removePrefab<T extends PrefabBase>(typeOrClass: PrefabBaseConstructor<T>): void\r\n    {\r\n        if(!this._prefabs.has(typeOrClass.TypeName))\r\n            return;\r\n\r\n        this._prefabs.delete(typeOrClass.TypeName);\r\n    }\r\n}\r\n\r\nexport default new PrefabsRegistry();", "import { TextureInformation } from \"./TextureInformation\";\r\n\r\n\r\n/**\r\n * Is used as registry for all Texture Information that leave in the\r\n * scene. It's usefull to fetch information.\r\n * Use the same system as prefabs.\r\n */\r\nclass TextureInformationRegistry\r\n{\r\n    private _texturesInformation: Map<string, TextureInformation>;\r\n\r\n    public get texturesUniqueID(): Array<string> { return Array.from(this._texturesInformation.keys()); }\r\n\r\n    public constructor()\r\n    {\r\n        this._texturesInformation = new Map<string, TextureInformation>();\r\n    }\r\n\r\n    public register(texInfo: TextureInformation): boolean \r\n    {\r\n        // Check if entry already exists\r\n        if(this._texturesInformation.has(texInfo.uniqueID))\r\n            return false;\r\n\r\n        this._texturesInformation.set(texInfo.uniqueID, texInfo);\r\n        console.log('New Texture information registered ', texInfo.uniqueID);\r\n        \r\n        return true;\r\n    }\r\n\r\n    public getTextureInformation(uniqueID: string): TextureInformation\r\n    {\r\n        return this._texturesInformation.get(uniqueID);\r\n    }\r\n}\r\n\r\nexport default new TextureInformationRegistry();", "// <reference path=\"./../../deploy/wonderland.min.js\"/>\r\n\r\nimport {Component, Scene, XrSessionStartCallback} from \"@wonderlandengine/api\";\r\n\r\nexport function registerComponent(component: Component): void\r\n{\r\n    // @ts-ignore\r\n    WL.registerComponent(component);\r\n}\r\n\r\nexport function getCurrentScene(): Scene\r\n{\r\n    // @ts-ignore\r\n    return WL.scene;\r\n}\r\n\r\nexport function getXrSessionStart(): Array<XrSessionStartCallback>\r\n{\r\n    // @ts-ignore\r\n    return WL.onXRSessionStart;\r\n}", "import {Object} from \"@wonderlandengine/api\";\r\n\r\n/**\r\n * Represent a logical grid layer (bi dimensional)\r\n */\r\nexport default class GridLayer\r\n{\r\n    private _layerData: Array<Array<Object>>\r\n    private _layerSize: number;\r\n\r\n    public constructor(size: number)\r\n    {\r\n        this._layerSize = size;\r\n        this._layerData = new Array<Array<Object>>(this._layerSize);\r\n\r\n        for (let i = 0; i < this._layerSize; ++i)\r\n        {\r\n            this._layerData[i] = new Array<Object>(this._layerSize);\r\n        }\r\n    }\r\n}", "import { vec3 } from \"gl-matrix\";\r\nimport GridLayer from \"./GridLayer\";\r\nimport {math} from \"@wonderlandengine/api\";\r\n\r\n/**\r\n * Represent a logical grid\r\n */\r\nexport default class Grid\r\n{\r\n    private _gridData: Array<GridLayer>;\r\n    private _gridSize: number;\r\n    private _layerCount: number;\r\n    private _cellSize: number;\r\n\r\n    private _gridOffset: number;\r\n\r\n    public get gridSize() { return this._gridSize; }\r\n    public get layerCount() { return this._layerCount; }\r\n    public get cellSize() { return this._cellSize; }\r\n\r\n    public constructor(size: number, layerCount: number, cellSize)\r\n    {\r\n        this._gridSize = size;\r\n        this._layerCount = layerCount;\r\n        this._cellSize = cellSize;\r\n        this._gridOffset = (this._gridSize * this._cellSize) / 2.0;\r\n\r\n        this._gridData = new Array<GridLayer>(this._layerCount);\r\n\r\n        for (let i = 0; i < this._layerCount; ++i)\r\n        {\r\n            this._gridData[i] = new GridLayer(this._gridSize);\r\n        }\r\n\r\n        console.log(this._gridData);\r\n    }\r\n\r\n    /**\r\n     * Return position on the grid for the given indices\r\n     * @param worldPos\r\n     */\r\n    public getCellPositionVec3(worldPos: vec3): vec3\r\n    {\r\n        return this.getCellPosition(worldPos[0], worldPos[1], worldPos[2]);\r\n    }\r\n\r\n    /**\r\n     * Return position on the grid for the given indices\r\n     * @param x\r\n     * @param y\r\n     * @param z\r\n     */\r\n    public getCellPosition(x: number, y: number, z: number): vec3\r\n    {\r\n        let position = vec3.create();\r\n        position[1] = (y * this._cellSize); // y coordinate\r\n        position[0] = (x * this._cellSize) - this._gridOffset; // x coordinate\r\n        position[2] = (z * this._cellSize) - this._gridOffset; // z coordinate\r\n\r\n        return position;\r\n    }\r\n\r\n    /**\r\n     * Return cell indices from a world position\r\n     * @param x\r\n     * @param y\r\n     * @param z\r\n     */\r\n    public getCellIndices(x: number, y: number, z:number): vec3\r\n    {\r\n        let indices = vec3.create();\r\n        indices[0] = Math.round((x + this._gridOffset) / this._cellSize);\r\n        indices[1] = Math.floor(y / this._cellSize);\r\n        indices[2] = Math.round((z + this._gridOffset) / this._cellSize);\r\n\r\n        return indices;\r\n    }\r\n}", "import Grid from \"./Grid\";\r\n\r\n\r\nclass GridManager\r\n{\r\n    private _grid: Grid;\r\n\r\n    public get grid() { return this._grid; }\r\n\r\n    public constructor(size: number, layoutCount: number, cellSize: number)\r\n    {\r\n        this._grid = new Grid(size, layoutCount, cellSize);\r\n    }\r\n}\r\n\r\nexport default new GridManager(30, 10, 0.25);", "/**\r\n * Since Wonderland Engine has no built-in tag system\r\n * this util static class simulate the integration of tag\r\n * support using key access to a property.\r\n */\r\nimport {Object} from \"@wonderlandengine/api\";\r\nimport {Tag} from \"./Tag\";\r\n\r\n\r\nexport default class TagUtils\r\n{\r\n    public static readonly tagKey: string = 'TAG';\r\n\r\n    public static setTag(object: Object, tag: Tag): void\r\n    {\r\n        object[this.tagKey] = tag;\r\n    }\r\n\r\n    public static hasTag(object: Object, tag: Tag): boolean\r\n    {\r\n        return !(!object[this.tagKey] && object[this.tagKey] !== tag);\r\n    }\r\n\r\n    public static getTag(object: Object): Tag | undefined\r\n    {\r\n        return object[this.tagKey];\r\n    }\r\n}", "import {Component, Type} from \"@wonderlandengine/api\";\r\nimport {Tag} from \"./Tag\";\r\nimport TagUtils from \"./TagUtils\";\r\n\r\n/**\r\n * The only goal of this component is to set the object's tag\r\n * on start.\r\n */\r\nexport class TagComponent extends Component\r\n{\r\n    static TypeName = 'tag-component';\r\n    static Properties = {\r\n        tag: {\r\n            type: Type.Enum,\r\n            values: [\r\n                Tag.ENVIRONMENT.toString(),\r\n                Tag.UI.toString()\r\n            ]\r\n        }\r\n    }\r\n\r\n    private tag: string;\r\n\r\n    public override start()\r\n    {\r\n        TagUtils.setTag(this.object, parseInt(this.tag));\r\n    }\r\n}", "import { Collider, Component, Material, Mesh, Object, Scene, Type } from \"@wonderlandengine/api\";\r\nimport { Constructor, CustomParameter } from \"@wonderlandengine/api/wonderland\";\r\nimport { quat, vec3, vec4 } from \"gl-matrix\";\r\nimport { getCurrentScene } from \"../../lib/WlApi\";\r\nimport GridManager from \"../grid/GridManager\";\r\nimport { TagComponent } from \"../../utils/TagComponent\";\r\nimport { Tag } from \"../../utils/Tag\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\nimport { PhysicalMaterial } from \"../../utils/materials/PhysicalMaterial\";\r\nimport { TextureInformation } from \"../../utils/textures/TextureInformation\";\r\n\r\nexport type PrefabBaseConstructor<T extends PrefabBase> = Constructor<T> & {\r\n    TypeName: string;\r\n    Properties: Record<string, CustomParameter>;\r\n};\r\n\r\nexport default abstract class PrefabBase extends Component\r\n{\r\n    static TypeName = '';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    // Properties declarations\r\n    protected finalMesh: Mesh;\r\n    protected previsMesh: Mesh;\r\n    protected finalMat: Material;\r\n    protected previsMat: Material;\r\n\r\n    // Scene information\r\n    protected _scene: Scene;\r\n    protected _cellSize: number;\r\n    protected _previsObject: Object;\r\n\r\n    public override start(): void\r\n    {\r\n        // Get Scene information\r\n        this._scene = getCurrentScene();\r\n        this._cellSize = GridManager.grid.cellSize;\r\n    }\r\n\r\n    public abstract getPrefabUniqueName(): string;\r\n\r\n    protected createPrevisObject(): void\r\n    {\r\n        // Create previs object\r\n        this._previsObject = this._scene.addObject(null);\r\n        this._previsObject.translateWorld([0, -5.0, 0]);\r\n\r\n        // Create previs visual object\r\n        let previsVisual = this._scene.addObject(this._previsObject);\r\n        previsVisual.translateObject([0, this._cellSize / 2.0, 0]);\r\n        previsVisual.addComponent('mesh', {\r\n            mesh: this.previsMesh,\r\n            material: this.previsMat\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the block in the scene at the specified world\r\n     * position\r\n     * @param position\r\n     * @param color\r\n     * @param container\r\n     */\r\n    public createBlock(position: vec3, texInfo: TextureInformation, container: Object): Object\r\n    {\r\n        let newBlock = this._scene.addObject(container);\r\n        newBlock[PrefabsRegistry.PREFAB_UNAME_KEY] = this.getPrefabUniqueName();\r\n        newBlock[PrefabsRegistry.PREFAB_TNAME_KEY] = texInfo.uniqueID;\r\n\r\n        newBlock.translateWorld(position);\r\n \r\n        // Create visual object\r\n        let finalVisual = this._scene.addObject(newBlock);\r\n        finalVisual.resetTransform();\r\n        finalVisual.translateObject([0, this._cellSize / 2.0, 0]);\r\n        finalVisual.rotationWorld = this._previsObject.rotationWorld;\r\n\r\n        // Setup Material\r\n        let mat: PhysicalMaterial = this.finalMat.clone() as PhysicalMaterial;\r\n\r\n        // Set textures based on current Texture Information\r\n        mat.albedoTexture = texInfo.albedoTexture;\r\n        mat.normalTexture = texInfo.normalTexture;\r\n\r\n        // Apply the material to the mesh\r\n        finalVisual.addComponent('mesh', {\r\n            mesh: this.finalMesh,\r\n            material: mat\r\n        });\r\n\r\n        finalVisual.addComponent(TagComponent, {\r\n            tag: Tag.BLOCK\r\n        });\r\n\r\n        let extents = (this._cellSize / 2.0) + 0.001;\r\n        finalVisual.addComponent('collision', {\r\n            collider: Collider.AxisAlignedBox,\r\n            extents: [extents, extents, extents],\r\n            group: 1,\r\n        });\r\n\r\n        return newBlock;\r\n    }\r\n\r\n    /**\r\n     * Update the world position of the previs visual\r\n     * @param position\r\n     */\r\n    public updatePrevisPosition(position: vec3): void\r\n    {\r\n        this._previsObject.setTranslationWorld(position);\r\n        let pos: vec3 = vec3.create();\r\n        this._previsObject.getTranslationWorld(pos);\r\n    }\r\n\r\n    public updatePrevisRotation(xRot: number, yRot: number): void\r\n    {\r\n        this._previsObject.rotateAxisAngleDeg([1,0,0], xRot);\r\n        this._previsObject.rotateAxisAngleDeg([0,1,0], yRot);\r\n    }\r\n\r\n    public setPrevisRotation(rotation: quat): void\r\n    {\r\n        this._previsObject.resetRotation();\r\n        this._previsObject.rotationWorld = rotation;\r\n    }\r\n\r\n    public updatePrevisColor(color: vec4): void\r\n    {\r\n        this.previsMat['diffuseColor'] = color;\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class BlockPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'block-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return BlockPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "// Third party\r\nimport { Object } from \"@wonderlandengine/api\";\r\nimport { vec3, vec4 } from \"gl-matrix\";\r\n\r\n// Prefabs\r\nimport PrefabsRegistry from \"../prefabs/PrefabsRegistry\";\r\nimport PrefabBase from \"../prefabs/PrefabBase\";\r\n\r\n// Others\r\nimport { BlockData } from \"../serialization/SarielizationData\";\r\nimport { BuildContainer } from \"./BuildContainer\";\r\nimport { TextureInformation } from \"../../utils/textures/TextureInformation\";\r\nimport TextureInformationRegistry from \"../../utils/textures/TextureInformationRegistry\";\r\nimport { BlockPrefab } from \"../prefabs/BlockPrefab\";\r\n\r\n\r\n/**\r\n * This class control the building system and use prefabs\r\n * to operate as well as Texture Information to apply materials\r\n * on prefabs instances in the scene\r\n */\r\nclass BuildController\r\n{\r\n    private _buildContainer: Object;\r\n\r\n    private _currentPrefab: PrefabBase;\r\n    private _currentTexture: TextureInformation;\r\n    private _currentColor: vec4;\r\n\r\n    public constructor()\r\n    {\r\n        this._currentPrefab = null;\r\n        this._currentColor = [1.0, 1.0, 1.0, 1.0] as vec4;\r\n\r\n        // Temp\r\n        this.test();\r\n    }\r\n\r\n    private async test(): Promise<void>\r\n    {\r\n        await new Promise(f => setTimeout(f, 1000));\r\n\r\n        // Set default selected cube\r\n        this._currentPrefab = PrefabsRegistry.getPrefab(BlockPrefab);\r\n        this._currentPrefab.updatePrevisColor(this._currentColor);\r\n\r\n        // Set default selected texture\r\n        this._currentTexture = TextureInformationRegistry.getTextureInformation('Stone01');\r\n    }\r\n\r\n    /**\r\n     * Setters and initialisation\r\n     * ==============================\r\n     */\r\n\r\n    public setBuildContainer(container: Object): void { this._buildContainer = container; }\r\n\r\n    public setCurrentPrevizPosition(position: vec3): void { this._currentPrefab.updatePrevisPosition(position); }\r\n\r\n    /**\r\n     * Set the prefab that should be placed and shown as previs in the world\r\n     * @param prefab the new prefab\r\n     */\r\n    public setPrefab(prefab: PrefabBase): void { this._currentPrefab = prefab; }\r\n\r\n    /**\r\n     * Set the color that should use the previsualisation mesh's material\r\n     * @param color the new color of the previz\r\n     */\r\n    public setColor(color: vec4): void \r\n    {\r\n        this._currentColor = color;\r\n        this._currentPrefab.updatePrevisColor(this._currentColor);\r\n    }\r\n\r\n    /**\r\n     * Set the current Texture information that will be used when a new block will be\r\n     * placed in the world by the user.\r\n     * @param texInfo the new texture to use on block creation in the world\r\n     */\r\n    public setTexture(texInfo: TextureInformation): void\r\n    {\r\n        this._currentTexture = texInfo;\r\n    }\r\n\r\n    /**\r\n     * Previz and prefab control\r\n     * ==============================\r\n     */\r\n\r\n    public addCurrentPrevizRotation(xRot: number, yRot: number): void \r\n    { \r\n        this._currentPrefab.updatePrevisRotation(xRot, yRot); \r\n    }\r\n\r\n    public instanciatePrefabAt(position: vec3): void \r\n    { \r\n        this._currentPrefab.createBlock(position, this._currentTexture, this._buildContainer); \r\n    }\r\n\r\n    /**\r\n     * Save and Load\r\n     * ==============================\r\n     */\r\n\r\n    public getCurrentBuildData(): Array<BlockData> \r\n    { \r\n        return this._buildContainer.getComponent(BuildContainer).generateBuildData(); \r\n    }\r\n\r\n    public loadBuild(data: Array<BlockData>): void \r\n    { \r\n        this._buildContainer.getComponent(BuildContainer).loadBuildData(data); \r\n    }\r\n}\r\n\r\nexport default new BuildController();", "import {Component} from \"@wonderlandengine/api\";\r\nimport BuildController from \"./BuildController\";\r\nimport { BlockData } from \"../serialization/SarielizationData\";\r\nimport PrefabsRegistry from \"../prefabs/PrefabsRegistry\";\r\nimport {quat, vec3, vec4} from \"gl-matrix\";\r\nimport PrefabBase from \"../prefabs/PrefabBase\";\r\nimport TextureInformationRegistry from \"../../utils/textures/TextureInformationRegistry\";\r\n\r\n\r\nexport class BuildContainer extends Component\r\n{\r\n    static TypeName = 'build-container';\r\n    static Properties = {};\r\n\r\n    public override init()\r\n    {\r\n        // Auto reference as build container to build controller\r\n        BuildController.setBuildContainer(this.object);\r\n    }\r\n\r\n    public generateBuildData(): Array<BlockData>\r\n    {\r\n        let data = new Array<BlockData>();\r\n\r\n        const children = this.object.children;\r\n        for (const child of children)\r\n        {\r\n            let visual = child.children[0];\r\n            let position: vec3 = vec3.create();\r\n            child.getTranslationWorld(position);\r\n\r\n            data.push({\r\n                type: child[PrefabsRegistry.PREFAB_UNAME_KEY],\r\n                texture: child[PrefabsRegistry.PREFAB_TNAME_KEY],\r\n                position: position,\r\n                rotation: visual.rotationWorld\r\n            });\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    public loadBuildData(data: Array<BlockData>): void\r\n    {\r\n        this.clearBlocksInScene();\r\n\r\n        let currentPrefab: PrefabBase;\r\n        for (const block of data)\r\n        {\r\n            currentPrefab = PrefabsRegistry.getPrefabByName(block.type);\r\n\r\n            const rot = block.rotation;\r\n            currentPrefab.setPrevisRotation(quat.fromValues(rot[0], rot[1], rot[2], rot[3]));\r\n\r\n            BuildController.setPrefab(currentPrefab);\r\n\r\n            const currentTexture = TextureInformationRegistry.getTextureInformation(block.texture);\r\n            BuildController.setTexture(currentTexture);\r\n\r\n            BuildController.instanciatePrefabAt(block.position);\r\n        }\r\n    }\r\n\r\n    public clearBlocksInScene(): void\r\n    {\r\n        for (const child of this.object.children)\r\n        {\r\n            child.destroy();\r\n        }\r\n    }\r\n}", "import {Component, Object, Type} from \"@wonderlandengine/api\";\r\nimport {getCurrentScene} from \"../../lib/WlApi\";\r\nimport Grid from \"./Grid\";\r\n\r\n\r\nexport class GridDebugComponent extends Component\r\n{\r\n    static TypeName = 'grid-debug-component';\r\n    static Properties = {\r\n        debugVisualObject: {type: Type.Object, default: null}\r\n    }\r\n\r\n    private debugVisualObject: Object;\r\n    private _grid: Grid;\r\n\r\n    public override start()\r\n    {\r\n        this._grid = new Grid(2, 10, 0.5);\r\n        let mesh = this.debugVisualObject.getComponent('mesh');\r\n        let scene = getCurrentScene();\r\n\r\n        let offset = 25.0 / 2;\r\n\r\n        for (let y = 0; y < this._grid.layerCount; ++y)\r\n            for (let x = 0; x < this._grid.gridSize; ++x)\r\n                for (let z = 0; z < this._grid.gridSize; ++z)\r\n                {\r\n                    let tmp = scene.addObject(this.object);\r\n                    tmp.addComponent('mesh', {\r\n                        mesh: mesh.mesh,\r\n                        material: mesh.material\r\n                    });\r\n\r\n                    tmp.resetTranslation();\r\n                    tmp.translate(this._grid.getCellPosition(x, y, z));\r\n                    let cellSize = this._grid.cellSize;\r\n                    tmp.scale([cellSize, cellSize, cellSize]);\r\n                }\r\n    }\r\n}", "import {Component, MeshComponent, Object, Scene, Type} from \"@wonderlandengine/api\";\r\nimport {vec3, vec4} from \"gl-matrix\";\r\nimport {getCurrentScene} from \"../../lib/WlApi\";\r\n\r\n\r\nexport class PointerRay extends Component\r\n{\r\n    static TypeName = 'pointer-ray';\r\n    static Properties = {\r\n        rayOrigin: {type: Type.Object},\r\n        rayObject: {type: Type.Object},\r\n        rayVisualObject: {type: Type.Object},\r\n        cursorHitVisualObject: {type: Type.Object},\r\n    }\r\n\r\n    // Properties class declaration\r\n    private rayOrigin: Object;\r\n    private rayObject: Object;\r\n    private rayVisualObject: Object;\r\n    private cursorHitVisualObject: Object;\r\n\r\n    // Scene elements\r\n    private _scene: Scene;\r\n    private _rayMesh: MeshComponent;\r\n\r\n    // Physic Ray cast fields\r\n    private _origin: Array<number>;\r\n    private _direction: Array<number>;\r\n\r\n    // current information\r\n    private _isPointing: boolean;\r\n    private _currentHitPosition: vec3;\r\n    private _currentHitObject: Object;\r\n\r\n    // Getters\r\n    public get isPointing() { return this._isPointing; }\r\n    public get currentHitPosition() { return this._currentHitPosition; }\r\n    public get currentHitObject() { return this._currentHitObject; }\r\n\r\n    public override start()\r\n    {\r\n        this._scene = getCurrentScene();\r\n\r\n        this._rayMesh = this.rayVisualObject.getComponent('mesh');\r\n        this._rayMesh.material[\"diffuseColor\"] = vec4.create();\r\n\r\n        this.rayVisualObject.translate([0,0,-0.5]);\r\n\r\n        this._origin = [0,0,0];\r\n        this._direction = [0,0,0];\r\n    }\r\n\r\n    public override update(delta: number)\r\n    {\r\n        this.rayOrigin.getTranslationWorld(this._origin);\r\n        this.rayOrigin.getForward(this._direction);\r\n\r\n        let hit = this._scene.rayCast(this._origin, this._direction, 1);\r\n        if(hit.hitCount > 0)\r\n        {\r\n            this._isPointing = true;\r\n            this._currentHitPosition = vec3.clone(hit.locations[0]);\r\n            this._currentHitObject = hit.objects[0];\r\n\r\n            this.processRayStretch();\r\n            this.cursorHitVisualObject.setTranslationWorld(this._currentHitPosition);\r\n        }\r\n        else\r\n        {\r\n            this._isPointing = false;\r\n            this.rayObject.resetScaling();\r\n            this.cursorHitVisualObject.setTranslationWorld([0,-5,0]);\r\n        }\r\n    }\r\n\r\n    private processRayStretch(): void\r\n    {\r\n        let rayPos: vec3 = vec3.create();\r\n        rayPos[0] = this._origin[0];\r\n        rayPos[1] = this._origin[1];\r\n        rayPos[2] = this._origin[2];\r\n\r\n        let distance = vec3.distance(rayPos, this._currentHitPosition);\r\n\r\n        this.rayObject.resetScaling();\r\n        this.rayObject.scale([1, distance - 0.05, 1]);\r\n    }\r\n}", "import {XrInputButton} from \"./XrInputButton\";\r\n\r\nexport type XrButtonListener = (button: XrButton) => void;\r\n\r\nexport default class XrButton\r\n{\r\n    private _gamepadButton: GamepadButton;\r\n\r\n    private _index: number;\r\n    private _isPressed: boolean;\r\n    private _wasPressed: boolean;\r\n\r\n    private _onPressedEvent: Array<XrButtonListener>\r\n    private _onReleasedEvent: Array<XrButtonListener>\r\n\r\n    public get isPressed(): boolean { return this._isPressed }\r\n    public get wasPressed(): boolean { return this._wasPressed }\r\n\r\n    public constructor(gamepadButton: GamepadButton, index: XrInputButton)\r\n    {\r\n        this._gamepadButton = gamepadButton;\r\n\r\n        this._index = index;\r\n        this._isPressed = false;\r\n        this._wasPressed = false;\r\n\r\n        this._onPressedEvent = new Array<XrButtonListener>();\r\n        this._onReleasedEvent = new Array<XrButtonListener>();\r\n    }\r\n\r\n    public update(): void\r\n    {\r\n        this._isPressed = this._gamepadButton.pressed;\r\n\r\n        // Just pressed\r\n        if(this._isPressed && !this._wasPressed)\r\n        {\r\n            for (let onPressedEventListener of this._onPressedEvent)\r\n            {\r\n                onPressedEventListener(this);\r\n            }\r\n\r\n            this._wasPressed = true;\r\n        }\r\n\r\n        // Just released\r\n        if(!this._isPressed && this._wasPressed)\r\n        {\r\n            for (let i = 0; i < this._onReleasedEvent.length; i++)\r\n                this._onReleasedEvent[i](this);\r\n\r\n            this._wasPressed = false;\r\n        }\r\n    }\r\n\r\n    public addPressedListener(listener: XrButtonListener): number\r\n    {\r\n        return this._onPressedEvent.push(listener) - 1;\r\n    }\r\n\r\n    public addReleasedListener(listener: XrButtonListener): number\r\n    {\r\n        return this._onReleasedEvent.push(listener) - 1;\r\n    }\r\n\r\n    public removePressedListener(handler: number): void\r\n    {\r\n        this._onPressedEvent.splice(handler, 1);\r\n    }\r\n\r\n    public removeReleasedListener(handler: number): void\r\n    {\r\n        this._onReleasedEvent.splice(handler, 1);\r\n    }\r\n\r\n    public clearPressedListeners(): void { this._onPressedEvent = new Array<XrButtonListener>(); }\r\n    public clearReleasedListeners(): void { this._onReleasedEvent = new Array<XrButtonListener>(); }\r\n}", "import XrButton from \"./XrButton\";\r\nimport {XrInputButton} from \"./XrInputButton\";\r\nimport {XrInputAxes} from \"./XrInputAxes\";\r\n\r\n/**\r\n * This class represent a Xr-standard controller\r\n * It handle the gamepad and update XrButton instances.\r\n *\r\n * Use example :\r\n * ```\r\n     this._xrGamepad = new XrGamepad(current.gamepad, this._hand);\r\n     console.log(this._xrGamepad);\r\n\r\n     this._xrGamepad.getButton(XrInputButton.BUTTON_A_X).addPressedListener((btn: XrButton) => {\r\n        console.log(\"PRESSED X Button\");\r\n    });\r\n\r\n     this._xrGamepad.getButton(XrInputButton.BUTTON_A_X).addReleasedListener((btn: XrButton) => {\r\n        console.log(\"Release X Button\");\r\n    });\r\n\r\n     this._xrGamepad.getButton(XrInputButton.BUTTON_B_Y).addPressedListener((btn: XrButton) => {\r\n        console.log(\"Y PRESSED\");\r\n    });\r\n * ```\r\n */\r\nexport default class XrGamepad\r\n{\r\n    private _hand: XRHandedness;\r\n    private _gamepad: Gamepad;\r\n\r\n    // @ts-ignore\r\n    private _buttons: Map<XrInputButton, XrButton>;\r\n\r\n    private _joystickXWasMoving: boolean;\r\n    private _joystickXIsMoving: boolean;\r\n    private _joystickYWasMoving: boolean;\r\n    private _joystickYIsMoving: boolean;\r\n\r\n    private _joystickXJustMoved: boolean;\r\n    private _joystickYJustMoved: boolean;\r\n\r\n    private readonly _joystickTriggerValue: number = 0.5;\r\n\r\n    public get hand(): XRHandedness { return this._hand; }\r\n\r\n    public get joystickXValue(): number { return this._gamepad.axes[XrInputAxes.THUMBSTICK_X]; }\r\n    public get joystickYValue(): number { return this._gamepad.axes[XrInputAxes.THUMBSTICK_Y]; }\r\n\r\n    public get joystickXJustMoved(): boolean { return this._joystickXJustMoved; }\r\n    public get joystickYJustMoved(): boolean { return this._joystickYJustMoved; }\r\n\r\n    public constructor(gamepad: Gamepad, hand: XRHandedness)\r\n    {\r\n        this.setup(gamepad, hand);\r\n    }\r\n\r\n    public setup(gamepad: Gamepad, hand: XRHandedness): void\r\n    {\r\n        this._gamepad = gamepad;\r\n        this._hand = hand;\r\n\r\n        this.initButtons();\r\n    }\r\n\r\n    public update(): void\r\n    {\r\n        // Buttons update\r\n        for (const key of this._buttons.keys())\r\n        {\r\n            this._buttons.get(key).update();\r\n        }\r\n\r\n        // Joysticks update\r\n\r\n        this._joystickXIsMoving = Math.abs(this._gamepad.axes[XrInputAxes.THUMBSTICK_X]) > this._joystickTriggerValue;\r\n        this._joystickYIsMoving = Math.abs(this._gamepad.axes[XrInputAxes.THUMBSTICK_Y]) > this._joystickTriggerValue;\r\n\r\n        this._joystickXJustMoved = this._joystickXIsMoving && !this._joystickXWasMoving\r\n        this._joystickYJustMoved = this._joystickYIsMoving && !this._joystickYWasMoving\r\n\r\n        this._joystickXWasMoving = this._joystickXIsMoving;\r\n        this._joystickYWasMoving = this._joystickYIsMoving;\r\n    }\r\n\r\n    public getButton(buttonIndex: XrInputButton): XrButton\r\n    {\r\n        return this._buttons.get(buttonIndex);\r\n    }\r\n\r\n    private initButtons(): void\r\n    {\r\n        let buttonsIndices = [\r\n            XrInputButton.BUTTON_TRIGGER,\r\n            XrInputButton.BUTTON_SQUEEZE,\r\n            XrInputButton.BUTTON_A_X,\r\n            XrInputButton.BUTTON_B_Y\r\n        ]\r\n\r\n        // Clear the map if needed\r\n        if(this._buttons != null)\r\n        {\r\n            this._buttons.clear();\r\n            this._buttons = null;\r\n        }\r\n\r\n        // @ts-ignore\r\n        this._buttons = new Map<XrInputButton, XrButton>()\r\n\r\n        for (let i = 0; i < buttonsIndices.length; ++i)\r\n        {\r\n            let index = buttonsIndices[i];\r\n            let gamepadButton = this._gamepad.buttons[index];\r\n            let button = new XrButton(gamepadButton, index);\r\n\r\n            this._buttons.set(index, button);\r\n        }\r\n    }\r\n}", "import {Component} from \"@wonderlandengine/api\";\r\n\r\nexport type UiInteractCallback = () => void;\r\n\r\n/**\r\n * Base class for UI Elements components\r\n */\r\nexport abstract class UiElementBase extends Component\r\n{\r\n    static TypeName = 'ui-element-base';\r\n    static Properties = {};\r\n\r\n    protected _interactCallbacks: Array<UiInteractCallback>;\r\n\r\n    public override init()\r\n    {\r\n        this._interactCallbacks = new Array<UiInteractCallback>();\r\n    }\r\n\r\n    public addInteractCallback(callback: UiInteractCallback): void\r\n    {\r\n        this._interactCallbacks.push(callback);\r\n    }\r\n\r\n    public removeInteractCallback(callback: UiInteractCallback): void\r\n    {\r\n        const index = this._interactCallbacks.indexOf(callback);\r\n        this._interactCallbacks.splice(index, 1);\r\n    }\r\n\r\n    public abstract interact(): void;\r\n}\r\n", "import { vec4 } from \"gl-matrix\";\r\n\r\n/**\r\n * Util class to handle RGB colors\r\n * Plan to add color manipulation features (mix, blend, ...)\r\n */\r\nexport class Color\r\n{\r\n    public static readonly COLOR_NORMAL = vec4.fromValues(76.0/255.0, 106.0/255.0, 134.0/255.0, 1.0);\r\n    public static readonly COLOR_ACTIVE = vec4.fromValues(255.0/255.0, 162.0/255.0, 56.0/255.0, 1.0);\r\n\r\n    public static readonly COLOR_TINT_NORMAL = vec4.fromValues(1.0, 1.0, 1.0, 1.0);\r\n    public static readonly COLOR_TINT_ACTIVE = vec4.fromValues(0.7, 0.7, 0.7, 1.0);\r\n\r\n    private _value: vec4;\r\n\r\n    public constructor(r: number, g: number, b: number, a: number)\r\n    {\r\n        this._value = [r, g, b, a];\r\n    }\r\n\r\n    public static createRGB(r: number, g: number, b: number): Color\r\n    {\r\n        return new Color(r, g, b, 1.0);\r\n    }\r\n\r\n    public asArray(): vec4 { return this._value; }\r\n}", "import {Material, MeshComponent, Object, TextComponent, Type} from \"@wonderlandengine/api\";\r\nimport {TagComponent} from \"../utils/TagComponent\";\r\nimport {Tag} from \"../utils/Tag\";\r\nimport {UiElementBase} from \"./UiElementBase\";\r\nimport { Color } from \"../utils/materials/Color\";\r\n\r\n\r\nexport class UiButton extends UiElementBase\r\n{\r\n    static TypeName = 'ui-button';\r\n    static Properties = {\r\n        textObject: {type: Type.Object},\r\n        visualFeedbackEnabled: {type: Type.Bool, default: true}\r\n    }\r\n\r\n    // Properties declaration\r\n    private textObject: Object;\r\n    private visualFeedbackEnabled: boolean;\r\n\r\n    // Class fields\r\n    private _meshComponent: MeshComponent;\r\n    private _textComponent: TextComponent;\r\n\r\n    public start(): void\r\n    {\r\n        // Create a copy of the material instance\r\n        this._meshComponent = this.object.getComponent('mesh');\r\n        this._meshComponent.material = this._meshComponent.material.clone();\r\n\r\n        // Get the text component\r\n        if(this.textObject != null)\r\n            this._textComponent = this.textObject.getComponent('text');\r\n\r\n        // Mark object as UI Element\r\n        this.object.addComponent(TagComponent, {\r\n            tag: Tag.UI\r\n        });\r\n    }\r\n\r\n    public interact(): void\r\n    {\r\n        console.log(\"Button clicked: \" + this.object.name);\r\n        \r\n        for (const interactCallback of this._interactCallbacks)\r\n            interactCallback();\r\n\r\n        if(this.visualFeedbackEnabled)\r\n            this.processVisualFeedback();\r\n    }\r\n\r\n    private processVisualFeedback(): void\r\n    {\r\n        this._meshComponent.material['color'] = Color.COLOR_TINT_ACTIVE;\r\n        setTimeout(() => {\r\n            this._meshComponent.material['color'] = Color.COLOR_TINT_NORMAL;\r\n        }, 100);\r\n    }\r\n}", "import { SoundEmitterBase } from \"./SoundEmitterBase\";\r\nimport { SoundEmitterType } from \"./SoundEmitterType\";\r\nimport { vec3 } from \"gl-matrix\";\r\n\r\n/**\r\n * Manage all sound emitter sources from the scene that register\r\n * by themself to the system.\r\n */\r\nclass SoundSystem\r\n{\r\n    private _soundEmitters: Map<SoundEmitterType, SoundEmitterBase>;\r\n\r\n    public constructor()\r\n    {\r\n        this._soundEmitters = new Map<SoundEmitterType, SoundEmitterBase>();\r\n    }\r\n\r\n    public registerEmitter(soundEmitter: SoundEmitterBase): void\r\n    {\r\n        if(this._soundEmitters.has(soundEmitter.emitterType))\r\n        {\r\n            console.warn('Only one emitter can be register by type');\r\n            return;\r\n        }\r\n\r\n        this._soundEmitters.set(soundEmitter.emitterType, soundEmitter);\r\n    }\r\n\r\n    public playAt(soundEmitterType: SoundEmitterType, position: vec3): void\r\n    {\r\n        if(!this._soundEmitters.has(soundEmitterType))\r\n        {\r\n            console.warn(`Can't play sound from emitter ${soundEmitterType}. It doesn't exist`);\r\n            return;\r\n        }\r\n\r\n        this._soundEmitters.get(soundEmitterType).playAt(position);\r\n    }\r\n}\r\n\r\nexport default new SoundSystem();", "import {Component, InputComponent, Object, Scene, Type} from \"@wonderlandengine/api\";\r\n\r\nimport {getCurrentScene, getXrSessionStart} from \"../../lib/WlApi\";\r\n\r\nimport XrGamepad from \"../input/XrGamepad\";\r\nimport { PointerMode } from \"./PointerMode\";\r\nimport { PointerRay } from \"./PointerRay\";\r\nimport { XrInputButton } from \"../input/XrInputButton\";\r\n\r\nimport BuildController from \"./../buildSystem/BuildController\";\r\nimport GridManager from \"./../grid/GridManager\";\r\nimport TagUtils from \"./../../utils/TagUtils\";\r\nimport {Tag} from \"../../utils/Tag\";\r\nimport {UiButton} from \"./../../ui/UiButton\";\r\nimport SoundSystem from \"../../sound/SoundSystem\";\r\nimport {SoundEmitterType} from \"../../sound/SoundEmitterType\";\r\n\r\nexport class XrController extends Component\r\n{\r\n    static TypeName = 'XR-Controller';\r\n    static Properties = {\r\n        pointerMode: {type: Type.Int, default: 0},\r\n        inputObject: {type: Type.Object, default: null},\r\n        pointerRay: {type: Type.Object, default: null}\r\n    }\r\n\r\n    // Properties definition\r\n    private inputObject: Object;\r\n    private pointerRay: Object;\r\n\r\n    private _inputComponent: InputComponent;\r\n    private _hand: XRHandedness;\r\n\r\n    private _xrGamepad: XrGamepad;\r\n    private _pointerRayComponent: PointerRay;\r\n\r\n    public override start()\r\n    {\r\n        // Input component fetching\r\n        if(this.inputObject === null)\r\n            throw new Error(\"Input Object must be defined\");\r\n\r\n        this._inputComponent = this.inputObject.getComponent('input');\r\n        this._hand = this._inputComponent.handedness;\r\n\r\n        // Pointer Ray component fetching\r\n        if(this.pointerRay === null)\r\n            throw new Error(\"Pointer Ray Object must be defined\");\r\n\r\n        this._pointerRayComponent = this.pointerRay.getComponent(PointerRay);\r\n\r\n        // Subscribe to XR session start event to setup inputs and other listeners\r\n        getXrSessionStart().push(this.onXrSessionStart.bind(this));\r\n    }\r\n\r\n    public override update(delta: number)\r\n    {\r\n        if(this._xrGamepad == null) return;\r\n\r\n        this._xrGamepad.update(); // Update inputs\r\n\r\n        if(!this._pointerRayComponent.isPointing)\r\n        {\r\n            BuildController.setCurrentPrevizPosition([0, -5, 0]);\r\n            return;\r\n        }\r\n\r\n        switch (TagUtils.getTag(this._pointerRayComponent.currentHitObject))\r\n        {\r\n            case Tag.BLOCK:\r\n            case Tag.ENVIRONMENT: {\r\n                // Update previs position\r\n                const ptrPos = this._pointerRayComponent.currentHitPosition;\r\n                const indices = GridManager.grid.getCellIndices(ptrPos[0], ptrPos[1], ptrPos[2]);\r\n                const position = GridManager.grid.getCellPositionVec3(indices);\r\n\r\n                if(this._xrGamepad.joystickXJustMoved)\r\n                {\r\n                    BuildController.addCurrentPrevizRotation(\r\n                        0,\r\n                        this._xrGamepad.joystickXValue > 0 ? 90: -90\r\n                    );\r\n\r\n                    SoundSystem.playAt(SoundEmitterType.BlockRotate, this._pointerRayComponent.currentHitPosition);\r\n                }\r\n\r\n                BuildController.setCurrentPrevizPosition(position);\r\n                break;\r\n            }\r\n\r\n            case Tag.UI: {\r\n                BuildController.setCurrentPrevizPosition([0, -5, 0]);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback for XR Session start.\r\n     * Initialization of the input and listeners of session's events\r\n     * @param session\r\n     * @private\r\n     */\r\n    private onXrSessionStart(session: XRSession): void\r\n    {\r\n        this.inputSourcesSetup(session);\r\n    }\r\n\r\n    /**\r\n     * Handle session start input sources and subscribe to Input Sources change\r\n     * event to handle controllers changes while session is running.\r\n     * @param session\r\n     * @private\r\n     */\r\n    private inputSourcesSetup(session: XRSession): void\r\n    {\r\n        // Initial gamepad fetching\r\n        for (let i = 0; i < session.inputSources.length; ++i)\r\n        {\r\n            let current = session.inputSources[i];\r\n\r\n            if(current.handedness === this._hand)\r\n            {\r\n                console.log(\"Setup hand : \" + current.handedness + \" For XR Controller \" + this._hand);\r\n                this.setupXrGamepad(current.gamepad);\r\n            }\r\n        }\r\n\r\n        // Change XR Input Source Event\r\n        session.addEventListener('inputsourceschange', this.onXrInputSourceChangeHandler.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Setup given gamepad and subscribe to all necessary events\r\n     * in order to map actions on controls (Xr Buttons)\r\n     * @param gamepad\r\n     * @private\r\n     */\r\n    private setupXrGamepad(gamepad: Gamepad): void\r\n    {\r\n        this._xrGamepad = new XrGamepad(gamepad, this._hand);\r\n\r\n        // Setup events listeners\r\n        this._xrGamepad.getButton(XrInputButton.BUTTON_TRIGGER).addPressedListener(this.onPlacementTriggerPressed.bind(this));\r\n        this._xrGamepad.getButton(XrInputButton.BUTTON_B_Y).addPressedListener(this.onDeleteButtonPressed.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Handler for 'inputsourceschange' event\r\n     * @param event\r\n     * @private\r\n     */\r\n    private onXrInputSourceChangeHandler(event: XRInputSourceChangeEvent): void\r\n    {\r\n        for (let i = 0; i < event.added.length; ++i)\r\n        {\r\n            let current = event.added[i];\r\n\r\n            if(current.handedness === this._hand)\r\n            {\r\n                console.log(\"Setup hand : \" + current.handedness + \" For XR Controller \" + this._hand);\r\n                this.setupXrGamepad(current.gamepad);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handler trigger input\r\n     * @private\r\n     */\r\n    private onPlacementTriggerPressed(): void\r\n    {\r\n        if(!this._pointerRayComponent.currentHitObject)\r\n            return;\r\n\r\n        switch (TagUtils.getTag(this._pointerRayComponent.currentHitObject))\r\n        {\r\n            case Tag.BLOCK:\r\n            case Tag.ENVIRONMENT: {\r\n                let ptrPos = this._pointerRayComponent.currentHitPosition;\r\n                let indices = GridManager.grid.getCellIndices(ptrPos[0], ptrPos[1], ptrPos[2]);\r\n                let position = GridManager.grid.getCellPositionVec3(indices);\r\n\r\n                BuildController.instanciatePrefabAt(position);\r\n                SoundSystem.playAt(SoundEmitterType.BlockPlaced, this._pointerRayComponent.currentHitPosition);\r\n                break;\r\n            }\r\n\r\n            case Tag.UI: {\r\n                const buttonComponent = this._pointerRayComponent.currentHitObject.getComponent(UiButton) as UiButton;\r\n                if(buttonComponent)\r\n                {\r\n                    buttonComponent.interact();\r\n                    SoundSystem.playAt(SoundEmitterType.Click, this._pointerRayComponent.currentHitPosition);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handler B button input\r\n     * @private\r\n     */\r\n    private onDeleteButtonPressed(): void\r\n    {\r\n        if(!this._pointerRayComponent.currentHitObject)\r\n            return;\r\n\r\n        switch (TagUtils.getTag(this._pointerRayComponent.currentHitObject))\r\n        {\r\n            case Tag.BLOCK: {\r\n                this._pointerRayComponent.currentHitObject.parent.destroy();\r\n                SoundSystem.playAt(SoundEmitterType.BlockDestroy, this._pointerRayComponent.currentHitPosition);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}", "import { Type } from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class BlockSlopePrefab extends PrefabBase\r\n{\r\n    static TypeName = 'block-slope-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return BlockSlopePrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import { Type } from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class BlockStairPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'block-stair-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return BlockStairPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class BlockVerticalPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'block-vertical-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return BlockVerticalPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class ConeCutPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'cone-cut-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return ConeCutPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class ConePrefab extends PrefabBase\r\n{\r\n    static TypeName = 'cone-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return ConePrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class CylinderPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'cylinder-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return CylinderPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class PyramidCutPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'pyramid-cut-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return PyramidCutPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class PyramidPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'pyramid-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return PyramidPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"./PrefabBase\";\r\nimport PrefabsRegistry from \"./PrefabsRegistry\";\r\n\r\n\r\nexport class SlabPrefab extends PrefabBase\r\n{\r\n    static TypeName = 'slab-prefab';\r\n    static Properties = {\r\n        finalMesh: {type: Type.Mesh},\r\n        previsMesh: {type: Type.Mesh},\r\n\r\n        finalMat: {type: Type.Material},\r\n        previsMat: {type: Type.Material},\r\n    };\r\n\r\n    public override getPrefabUniqueName(): string { return SlabPrefab.TypeName; }\r\n\r\n    public override start()\r\n    {\r\n        super.start();\r\n        PrefabsRegistry.registerPrefab(this);\r\n\r\n        this.createPrevisObject();\r\n    }\r\n}", "import {Component} from \"@wonderlandengine/api\";\r\nimport {HowlerAudioSourceComponent} from \"./HowlerAudioSourceComponent\";\r\nimport {SoundEmitterType} from \"./SoundEmitterType\";\r\nimport {vec3} from \"gl-matrix\";\r\nimport SoundSystem from \"./SoundSystem\";\r\n\r\n\r\nexport abstract class SoundEmitterBase extends Component {\r\n    static TypeName = 'sound-emitter-base';\r\n    static Properties = {};\r\n\r\n    protected _audioSource: HowlerAudioSourceComponent;\r\n    protected _emitterType: SoundEmitterType;\r\n\r\n    public get emitterType(): SoundEmitterType { return this._emitterType; }\r\n\r\n    public override init()\r\n    {\r\n        this.onInit();\r\n\r\n        SoundSystem.registerEmitter(this);\r\n    }\r\n\r\n    public override start() {\r\n        this._audioSource = this.object.getComponent('howler-audio-source') as HowlerAudioSourceComponent;\r\n    }\r\n\r\n    /**\r\n     * Use this method to set emitter type and process\r\n     * other init task instead of Init\r\n     */\r\n    protected abstract onInit(): void\r\n\r\n    public playAt(position: vec3): void\r\n    {\r\n        this.object.setTranslationWorld(position);\r\n        this._audioSource.play();\r\n    }\r\n}\r\n", "import { SoundEmitterBase } from \"../SoundEmitterBase\";\r\nimport { SoundEmitterType } from \"../SoundEmitterType\";\r\n\r\n\r\nexport class ClickSoundEmitter extends SoundEmitterBase\r\n{\r\n    static TypeName = 'sound-emitter-click';\r\n\r\n    protected onInit(): void\r\n    {\r\n        this._emitterType = SoundEmitterType.Click;\r\n    }\r\n}", "import { SoundEmitterBase } from \"../SoundEmitterBase\";\r\nimport { SoundEmitterType } from \"../SoundEmitterType\";\r\n\r\n\r\nexport class DestroySoundEmitter extends SoundEmitterBase\r\n{\r\n    static TypeName = 'sound-emitter-destroy';\r\n\r\n    protected onInit(): void\r\n    {\r\n        this._emitterType = SoundEmitterType.BlockDestroy;\r\n    }\r\n}", "import { SoundEmitterBase } from \"../SoundEmitterBase\";\r\nimport { SoundEmitterType } from \"../SoundEmitterType\";\r\n\r\n\r\nexport class PlaceSoundEmitter extends SoundEmitterBase\r\n{\r\n    static TypeName = 'sound-emitter-place';\r\n\r\n    protected onInit(): void\r\n    {\r\n        this._emitterType = SoundEmitterType.BlockPlaced;\r\n    }\r\n}", "import { SoundEmitterBase } from \"../SoundEmitterBase\";\r\nimport { SoundEmitterType } from \"../SoundEmitterType\";\r\n\r\n\r\nexport class RotateSoundEmitter extends SoundEmitterBase\r\n{\r\n    static TypeName = 'sound-emitter-rotate';\r\n\r\n    protected onInit(): void\r\n    {\r\n        this._emitterType = SoundEmitterType.BlockRotate;\r\n    }\r\n}", "import { Component, CustomParameter } from \"@wonderlandengine/api\";\r\nimport { Color } from \"../../utils/materials/Color\";\r\nimport { BlockSelectorInteractible } from \"../BlockSelectorInteractible\";\r\n\r\n\r\n/**\r\n * This component manage the content and the bahaviour of the block\r\n * selection panel that can be enabled with the arm menu\r\n */\r\nexport class BlockSelectionPanel extends Component\r\n{\r\n    static TypeName: string = 'block-selection-panel';\r\n    static Properties: Record<string, CustomParameter> = { };\r\n\r\n    // Private fields \r\n    private _buttons: Map<string, BlockSelectorInteractible>;\r\n\r\n    public override init(): void \r\n    {\r\n        this._buttons = new Map<string, BlockSelectorInteractible>();\r\n    }\r\n\r\n    // Each child buttons will register using this method\r\n    public registerButton(button: BlockSelectorInteractible): void\r\n    {\r\n        this._buttons.set(button.object.name, button);\r\n    }\r\n\r\n    // Button will notify this panel on interaction\r\n    public notifyInteraction(button: BlockSelectorInteractible): void\r\n    {\r\n        const keys = this._buttons.keys();\r\n\r\n        // Reset all button's tint color\r\n        for (const key of keys) \r\n        {\r\n            const tmpBtn = this._buttons.get(key);\r\n            tmpBtn.setVisualColor(Color.COLOR_TINT_NORMAL);\r\n        }\r\n\r\n        // Set the current selected button color to active tint\r\n        button.setVisualColor(Color.COLOR_TINT_ACTIVE);\r\n    }\r\n}", "import {Component, MeshComponent, Object, Type} from \"@wonderlandengine/api\";\r\nimport PrefabBase from \"../gameplay/prefabs/PrefabBase\";\r\nimport {UiButton} from \"./UiButton\";\r\nimport BuildController from \"../gameplay/buildSystem/BuildController\";\r\nimport PrefabsRegistry from \"../gameplay/prefabs/PrefabsRegistry\";\r\nimport { Color } from \"../utils/materials/Color\";\r\nimport { vec4 } from \"gl-matrix\";\r\nimport { BlockSelectionPanel } from \"./armMenu/BlockSelectionPanel\";\r\n\r\n\r\nexport class BlockSelectorInteractible extends Component\r\n{\r\n    static TypeName = 'block-selector-interactible';\r\n    static Properties = {\r\n        prefab: {type: Type.Object}\r\n    }\r\n\r\n    // Properties fields declaration\r\n    private prefab: Object;\r\n\r\n    // fields\r\n    private _prefabComponent: PrefabBase;\r\n    private _buttonComponent: UiButton;\r\n    private _mesh: MeshComponent;\r\n\r\n    private _parent: BlockSelectionPanel;\r\n\r\n    public override start()\r\n    {\r\n        this._prefabComponent = PrefabsRegistry.getPrefabByName(this.prefab[PrefabsRegistry.PREFAB_UNAME_KEY]);\r\n\r\n        this._buttonComponent = this.object.getComponent(UiButton);\r\n        this._buttonComponent.addInteractCallback(this.onInteractHandler.bind(this));\r\n\r\n        this._mesh = this.object.getComponent('mesh');\r\n        let material = this._mesh.material;\r\n        this._mesh.material = material.clone();\r\n\r\n        // Get parent BlockSelectionPanel component\r\n        this._parent = this.object.parent.getComponent(BlockSelectionPanel);\r\n        this._parent.registerButton(this);\r\n    }\r\n\r\n    public override onActivate(): void \r\n    {\r\n        this._prefabComponent = PrefabsRegistry.getPrefabByName(this.prefab[PrefabsRegistry.PREFAB_UNAME_KEY]);\r\n    }\r\n\r\n    public setVisualColor(color: vec4): void \r\n    {\r\n        this._mesh.material['color'] = color;\r\n    }\r\n\r\n    private onInteractHandler(): void\r\n    {\r\n        BuildController.setPrefab(this._prefabComponent);\r\n        this._parent.notifyInteraction(this);\r\n    }\r\n}", "import { Component, CustomParameter, Texture, Type } from \"@wonderlandengine/api\";\r\nimport TextureInformationRegistry from \"./TextureInformationRegistry\";\r\n\r\n\r\n/**\r\n * Just a simple container that exists in the scene to reference\r\n * textures (albedo + normal) to be used with blocks spawned from\r\n * prefabs in the scene at runtime.\r\n * \r\n * Each instance of this component should exists under an object\r\n * that hold a TextureInformationContainer component.\r\n */\r\nexport class TextureInformation extends Component\r\n{\r\n    static TypeName: string = \"texture-information\";\r\n    static Properties: Record<string, CustomParameter> = {\r\n        uid: {type: Type.String},\r\n        albedo: {type: Type.Texture, default: null},\r\n        normal: {type: Type.Texture, default: null}\r\n    };\r\n\r\n    private uid: string;\r\n    private albedo: Texture;\r\n    private normal: Texture;\r\n\r\n    public get uniqueID(): string { return this.uid; }\r\n    public get albedoTexture(): Texture { return this.albedo; }\r\n    public get normalTexture(): Texture { return this.normal; }\r\n\r\n    public override start(): void \r\n    {\r\n        // Register himself to the texture information registry\r\n        TextureInformationRegistry.register(this);\r\n    }\r\n}", "import { Component, CustomParameter } from \"@wonderlandengine/api\";\r\nimport { Color } from \"../../utils/materials/Color\";\r\nimport { BlockSelectorInteractible } from \"../BlockSelectorInteractible\";\r\nimport { TextureSelectorInteractible } from \"../TextureSelectorInteractible\";\r\n\r\n\r\n/**\r\n * This component manage the content and the bahaviour of the texture\r\n * selection panel that can be enabled with the arm menu\r\n */\r\nexport class TextureSelectionPanel extends Component\r\n{\r\n    static TypeName: string = 'texture-selection-panel';\r\n    static Properties: Record<string, CustomParameter> = { };\r\n\r\n    // Private fields \r\n    private _buttons: Map<string, TextureSelectorInteractible>;\r\n\r\n    public override init(): void \r\n    {\r\n        this._buttons = new Map<string, TextureSelectorInteractible>();\r\n    }\r\n\r\n    // Each child buttons will register using this method\r\n    public registerButton(button: TextureSelectorInteractible): void\r\n    {\r\n        this._buttons.set(button.object.name, button);\r\n    }\r\n\r\n    // Button will notify this panel on interaction\r\n    public notifyInteraction(button: TextureSelectorInteractible): void\r\n    {\r\n        const keys = this._buttons.keys();\r\n\r\n        // Reset all button's tint color\r\n        for (const key of keys) \r\n        {\r\n            const tmpBtn = this._buttons.get(key);\r\n            tmpBtn.setVisualColor(Color.COLOR_TINT_NORMAL);\r\n        }\r\n\r\n        // Set the current selected button color to active tint\r\n        button.setVisualColor(Color.COLOR_TINT_ACTIVE);\r\n    }\r\n}", "import {Component, CustomParameter, MeshComponent, Object, Type} from \"@wonderlandengine/api\";\r\nimport {UiButton} from \"./UiButton\";\r\n\r\nimport BuildController from \"../gameplay/buildSystem/BuildController\";\r\nimport { TextureInformation } from \"../utils/textures/TextureInformation\";\r\nimport { TextureSelectionPanel } from \"./armMenu/TextureSelectionPanel\";\r\nimport { vec4 } from \"gl-matrix\";\r\n\r\n\r\nexport class TextureSelectorInteractible extends Component\r\n{\r\n    static TypeName: string = 'texture-selector-interactible';\r\n    static Properties: Record<string, CustomParameter> = {\r\n        textureInfoObject: { type: Type.Object, default: null }\r\n    };\r\n\r\n    private textureInfoObject: Object;\r\n\r\n    // fields\r\n    private _texture: TextureInformation;\r\n    private _buttonComponent: UiButton;\r\n    private _mesh: MeshComponent;\r\n\r\n    private _parent: TextureSelectionPanel;\r\n\r\n    public override start()\r\n    {\r\n        if(!this.textureInfoObject)\r\n        {\r\n            console.error('Object must be set to initialize the button ', this.object.name);\r\n            return;\r\n        }\r\n\r\n        this._texture = this.textureInfoObject.getComponent(TextureInformation);\r\n\r\n        this._buttonComponent = this.object.getComponent(UiButton);\r\n        this._buttonComponent.addInteractCallback(this.onInteractHandler.bind(this));\r\n\r\n        this._mesh = this.object.getComponent('mesh');\r\n        let material = this._mesh.material;\r\n        this._mesh.material = material.clone();\r\n\r\n        // Get parent BlockSelectionPanel component\r\n        this._parent = this.object.parent.getComponent(TextureSelectionPanel);\r\n        this._parent.registerButton(this);\r\n    }\r\n\r\n    public setVisualColor(color: vec4): void \r\n    {\r\n        this._mesh.material['color'] = color;\r\n    }\r\n\r\n    private onInteractHandler(): void\r\n    {\r\n        BuildController.setTexture(this._texture);\r\n        this._parent.notifyInteraction(this);\r\n    }\r\n}", "import { Object, Component, CustomParameter } from \"@wonderlandengine/api\";\r\nimport { ArmPanel } from \"../ui/armMenu/ArmPanel\";\r\n\r\n\r\nexport class ObjectToggler extends Component\r\n{\r\n    static TypeName: string = 'object-toggler';\r\n    static Properties: Record<string, CustomParameter> = { };\r\n\r\n    // Fields\r\n    private _components: Array<Component>;\r\n\r\n    public override start(): void \r\n    {\r\n        this._components = new Array<Component>();\r\n        this.fetchAllComponents(this.object);\r\n    }\r\n\r\n    /**\r\n     * Enable or disable all components from the owner and its\r\n     * children (all the hierarchy is affected by the process)\r\n     * @param active \r\n     */\r\n    public setActive(active: boolean): void\r\n    {\r\n        for (let i = 0; i < this._components.length; i++)\r\n        {\r\n            this._components[i].active = active;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method fetch all components for the given object and\r\n     * store them into an array.\r\n     * This array is then use to enable/disable all components in order\r\n     * to reproduce a enable/disable behaviour on the object\r\n     * @param object object to extract components ref\r\n     */\r\n    private fetchAllComponents(object: Object): void\r\n    {\r\n        const objComponents = object.getComponents(null).filter((e) =>  e.type !== ArmPanel.TypeName);\r\n\r\n        this._components = this._components.concat(objComponents);\r\n\r\n        const children = object.children;\r\n        for (let i = 0; i < children.length; i++) \r\n        {\r\n            const child = children[i];\r\n            this.fetchAllComponents(child);\r\n        }\r\n    }\r\n}", "import { Component, CustomParameter, MeshComponent, Object } from \"@wonderlandengine/api\";\r\nimport { vec3 } from \"gl-matrix\";\r\nimport { ObjectToggler } from \"../../utils/ObjectToggler\";\r\n\r\n\r\n/**\r\n * Represent a panel on the arm menu. It doesn't contain any specific\r\n * panel's logic, only general purpose manipulations that are shared\r\n * between all panels.\r\n */\r\nexport class ArmPanel extends Component\r\n{\r\n    static TypeName: string = 'arm-panel';\r\n    static Properties: Record<string, CustomParameter> = { };\r\n\r\n    // Fields\r\n    private _objToggler: ObjectToggler;\r\n    private _mesh: MeshComponent;\r\n\r\n    public override start(): void \r\n    {\r\n        this._objToggler = this.object.addComponent(ObjectToggler);\r\n        this._mesh = this.object.getComponent('mesh');\r\n\r\n        // Reset object position\r\n        this.object.setTranslationLocal(vec3.fromValues(0, 0, 0));\r\n    }\r\n\r\n    /** Show the panel and enable all interactions */\r\n    public show(): void \r\n    {\r\n        this._objToggler.setActive(true);\r\n    }\r\n\r\n    /** Hide the panel and disable all interaction */\r\n    public hide(): void \r\n    {\r\n        this._objToggler.setActive(false);\r\n    }\r\n}", "import { Component, CustomParameter, MeshComponent, Object, Texture, Type, WASM } from \"@wonderlandengine/api\";\r\nimport { vec4 } from \"gl-matrix\";\r\nimport { Color } from \"../../utils/materials/Color\";\r\nimport { FlatTexturedMaterial } from \"../../utils/materials/FlatTexturedMaterial\";\r\nimport { UiButton } from \"../UiButton\";\r\n\r\n\r\n/**\r\n * Class MenuSelectionButton.\r\n * Represente buttons for menu selection on the arm menu.\r\n */\r\nexport class MenuSelectionButton extends Component\r\n{\r\n    static TypeName: string = 'menu-selection-button';\r\n    static Properties: Record<string, CustomParameter> = {\r\n        iconObject: {type: Type.Object, default: null},\r\n        iconTexture: {type: Type.Texture, default: null}\r\n    };\r\n\r\n    // Properties declaration\r\n    private iconObject: Object;\r\n    private iconTexture: Texture;\r\n\r\n    // Private fields\r\n    private _button: UiButton;\r\n    private _mesh: MeshComponent;\r\n    private _material: FlatTexturedMaterial;\r\n    private _iconMaterial: FlatTexturedMaterial;\r\n    private _isActive: boolean;\r\n\r\n    // Getters\r\n    public get isActive(): boolean { return this._isActive; }\r\n    public get button(): UiButton { return this._button; }\r\n\r\n    public override init(): void \r\n    {\r\n        this.setup();\r\n        this.setupIcon();\r\n    }\r\n\r\n    /**\r\n     * Change the visual appearance of the button based on\r\n     * given properties\r\n     * @param isActive \r\n     */\r\n    public setActive(isActive: boolean): void \r\n    {\r\n        // NOTE: since it seems that it's not possible to keep a reference\r\n        // to the WASM instance of the material, it's mandatory to modify the material value\r\n        // through the array access notation... \r\n        this._mesh.material['color'] = isActive ? Color.COLOR_ACTIVE : Color.COLOR_NORMAL;\r\n        this._isActive = isActive;\r\n    }\r\n\r\n    private setup(): void\r\n    {\r\n        // === Button setup ===\r\n        this._button = this.object.getComponent(UiButton);\r\n\r\n        // === Visual setup ===\r\n        this._mesh = this.object.getComponent('mesh');\r\n        this._material = this._mesh.material?.clone() as FlatTexturedMaterial;\r\n        this._mesh.material = this._material;\r\n\r\n        // Set to not selected by default\r\n        this._material.color = Color.COLOR_NORMAL;\r\n        this._isActive = false;\r\n    }\r\n\r\n    private setupIcon(): void\r\n    {\r\n        const iconTempMesh = this.iconObject.getComponent('mesh');\r\n        this._iconMaterial = iconTempMesh.material?.clone() as FlatTexturedMaterial;\r\n\r\n        iconTempMesh.material = this._iconMaterial;\r\n        this._iconMaterial.flatTexture = this.iconTexture;\r\n    }\r\n}", "import { Component, CustomParameter, Object, Type, WonderlandEngine } from \"@wonderlandengine/api\";\r\nimport { ArmPanel } from \"./ArmPanel\";\r\nimport { MenuSelectionButton } from \"./MenuSelectionButton\";\r\n\r\n\r\nexport class MenuController extends Component\r\n{\r\n    static TypeName: string = 'menu-controller';\r\n    static Properties: Record<string, CustomParameter> = {\r\n        // Buttons\r\n        menuButton: {type: Type.Object},\r\n        blockButton: {type: Type.Object},\r\n        textureButton: {type: Type.Object},\r\n\r\n        // Panels\r\n        menuPanel: {type: Type.Object},\r\n        blockPanel: {type: Type.Object},\r\n        texturePanel: {type: Type.Object},\r\n    };\r\n\r\n    // Properties declaration\r\n    // Buttons\r\n    private menuButton: Object;\r\n    private blockButton: Object;\r\n    private textureButton: Object;\r\n\r\n    // Panels\r\n    private menuPanel: Object;\r\n    private blockPanel: Object;\r\n    private texturePanel: Object;\r\n\r\n    // Fields declaration\r\n    // Buttons\r\n    private _menuButtonComp: MenuSelectionButton;\r\n    private _blockButtonComp: MenuSelectionButton;\r\n    private _textureButtonComp: MenuSelectionButton;\r\n\r\n    // Panels\r\n    private _menuPanelComp: ArmPanel;\r\n    private _blockPanelComp: ArmPanel;\r\n    private _texturePanelComp: ArmPanel;\r\n\r\n    public override start(): void \r\n    {\r\n        // Get buttons components\r\n        this._menuButtonComp = this.menuButton.getComponent(MenuSelectionButton);\r\n        this._blockButtonComp = this.blockButton.getComponent(MenuSelectionButton);\r\n        this._textureButtonComp = this.textureButton.getComponent(MenuSelectionButton);\r\n\r\n        // Set interaction callbacks\r\n        this._menuButtonComp.button.addInteractCallback(this.onMenuButtonPressed.bind(this));\r\n        this._blockButtonComp.button.addInteractCallback(this.onBlockButtonPressed.bind(this));\r\n        this._textureButtonComp.button.addInteractCallback(this.onTextureButtonPressed.bind(this));\r\n\r\n        this._menuPanelComp = this.menuPanel.getComponent(ArmPanel);\r\n        this._blockPanelComp = this.blockPanel.getComponent(ArmPanel);\r\n        this._texturePanelComp = this.texturePanel.getComponent(ArmPanel);\r\n\r\n        // Disable all panels\r\n        console.log(this.engine);\r\n        \r\n        this.engine.onXRSessionStart.push(() => {\r\n            setTimeout(() => {\r\n                this._menuPanelComp.hide();\r\n                this._blockPanelComp.hide();\r\n                this._texturePanelComp.hide();\r\n                console.log(\"COUCOU scene loaded !\");\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    private onMenuButtonPressed(): void \r\n    {\r\n        this._menuButtonComp.setActive(true);\r\n        this._menuPanelComp.show();\r\n\r\n        this._blockButtonComp.setActive(false);\r\n        this._textureButtonComp.setActive(false);\r\n        this._blockPanelComp.hide();\r\n        this._texturePanelComp.hide();\r\n    }\r\n    \r\n    private onBlockButtonPressed(): void \r\n    {\r\n        this._blockButtonComp.setActive(true);\r\n        this._blockPanelComp.show();\r\n\r\n        this._menuButtonComp.setActive(false);\r\n        this._textureButtonComp.setActive(false);\r\n        this._menuPanelComp.hide();\r\n        this._texturePanelComp.hide();\r\n    }\r\n\r\n    private onTextureButtonPressed(): void \r\n    {\r\n        this._textureButtonComp.setActive(true);\r\n        this._texturePanelComp.show();\r\n\r\n        this._menuButtonComp.setActive(false);\r\n        this._blockButtonComp.setActive(false);\r\n        this._menuPanelComp.hide();\r\n        this._blockPanelComp.hide();\r\n    }\r\n}", "import {BlockData, SaveData, SceneBuildData} from \"./SarielizationData\";\r\n\r\nconst SAVE_ITEM_KEY = 'SAVE_DATA';\r\n\r\nclass SerializationUtils\r\n{\r\n    private _localStorage: Storage;\r\n    private _saveData: SaveData;\r\n\r\n    public constructor()\r\n    {\r\n        if(typeof window === 'undefined' || !window.localStorage)\r\n            return;\r\n\r\n        this._localStorage = window.localStorage;\r\n\r\n        if(this._localStorage.getItem(SAVE_ITEM_KEY) !== null)\r\n        {\r\n            this.processExistingSaveData();\r\n            return;\r\n        }\r\n\r\n        this.createSaveData();\r\n    }\r\n\r\n    private processExistingSaveData(): void\r\n    {\r\n        this._saveData = JSON.parse(this._localStorage.getItem(SAVE_ITEM_KEY)) as SaveData;\r\n        console.log(this._saveData);\r\n    }\r\n\r\n    private createSaveData(): void\r\n    {\r\n        this._saveData = { saves: new Array<SceneBuildData> }\r\n        this._localStorage.setItem(SAVE_ITEM_KEY, JSON.stringify(this._saveData));\r\n    }\r\n\r\n    // Saves manipulation\r\n    // =============================\r\n\r\n    public getSavesEntries(): Array<SceneBuildData>\r\n    {\r\n        return this._saveData.saves;\r\n    }\r\n\r\n    /** Create a new save entry without pushing it in saves array */\r\n    public createNewSaveEntry(name: string): SceneBuildData\r\n    {\r\n        return {\r\n            name: name,\r\n            userPref: {color: [1, 1, 1], block: ''},\r\n            blocks: new Array<BlockData>()\r\n        };\r\n    }\r\n\r\n    public createOrUpdateSaveEntry(saveData: SceneBuildData): void\r\n    {\r\n        const saves = this._saveData.saves;\r\n        for (let i = 0; i < saves.length; i++)\r\n        {\r\n            if(saves[i].name == saveData.name)\r\n            {\r\n                saves[i] = saveData;\r\n                this._saveData.saves = saves;\r\n                return;\r\n            }\r\n        }\r\n\r\n        // if save don't exists\r\n        this._saveData.saves.push(saveData);\r\n    }\r\n\r\n    public removeSaveEntry(saveData: SceneBuildData): void\r\n    {\r\n        const saves = this._saveData.saves;\r\n        for (let i = 0; i < saves.length; i++)\r\n        {\r\n            if(saves[i].name == saveData.name)\r\n            {\r\n                saves.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Write changes from local memory to local storage */\r\n    public flushSaves(): void\r\n    {\r\n        this._localStorage.setItem(SAVE_ITEM_KEY, JSON.stringify(this._saveData));\r\n        this.processExistingSaveData();\r\n    }\r\n}\r\n\r\nexport default new SerializationUtils();", "import {Component, Object, TextComponent, Type} from \"@wonderlandengine/api\";\r\nimport {UiButton} from \"../UiButton\";\r\nimport SerializationUtils from \"../../gameplay/serialization/SerializationUtils\";\r\nimport {SceneBuildData} from \"../../gameplay/serialization/SarielizationData\";\r\nimport BuildController from \"../../gameplay/buildSystem/BuildController\";\r\n\r\n\r\nexport class SavePanel extends Component\r\n{\r\n    static TypeName = 'save-panel';\r\n    static Properties = {\r\n        loadButtonObj: {type: Type.Object, default: null},\r\n        newButtonObj: {type: Type.Object, default: null},\r\n        nextButtonObj: {type: Type.Object, default: null},\r\n        saveButtonObj: {type: Type.Object, default: null},\r\n        removeButtonObj: {type: Type.Object, default: null},\r\n\r\n        saveCountObj: {type: Type.Object, default: null},\r\n        saveNameObj: {type: Type.Object, default: null},\r\n    };\r\n\r\n    // Properties declaration\r\n    private loadButtonObj: Object;\r\n    private newButtonObj: Object;\r\n    private nextButtonObj: Object;\r\n    private saveButtonObj: Object;\r\n    private removeButtonObj: Object;\r\n\r\n    private saveCountObj: Object;\r\n    private saveNameObj: Object;\r\n\r\n    // Buttons components\r\n    private _loadButton: UiButton;\r\n    private _newButton: UiButton;\r\n    private _nextButton: UiButton;\r\n    private _saveButton: UiButton;\r\n    private _removeButton: UiButton;\r\n\r\n    // Text components\r\n    private _saveCount: TextComponent;\r\n    private _saveName: TextComponent;\r\n\r\n    // Cache saves\r\n    private _saveEntries: Array<SceneBuildData>;\r\n\r\n    // Information tracking\r\n    private _currentSaveIndex: number;\r\n    private _currentBuildData: SceneBuildData;\r\n\r\n    public override start()\r\n    {\r\n        // Get buttons\r\n        this._loadButton = this.loadButtonObj.getComponent(UiButton);\r\n        this._newButton = this.newButtonObj.getComponent(UiButton);\r\n        this._nextButton = this.nextButtonObj.getComponent(UiButton);\r\n        this._saveButton = this.saveButtonObj.getComponent(UiButton);\r\n        this._removeButton = this.removeButtonObj.getComponent(UiButton);\r\n\r\n        // Set interact callbacks\r\n        this._loadButton.addInteractCallback(this.onLoadButtonClicked.bind(this));\r\n        this._newButton.addInteractCallback(this.onNewButtonPressed.bind(this));\r\n        this._nextButton.addInteractCallback(this.onNextButtonPressed.bind(this));\r\n        this._saveButton.addInteractCallback(this.onSaveButtonPressed.bind(this));\r\n        this._removeButton.addInteractCallback(this.onRemoveButtonPressed.bind(this));\r\n\r\n        // Get texts\r\n        this._saveCount = this.saveCountObj.getComponent('text');\r\n        this._saveName = this.saveNameObj.getComponent('text');\r\n\r\n        this._saveEntries = SerializationUtils.getSavesEntries();\r\n        this._currentSaveIndex = this._saveEntries.length < 1 ? -1: 0;\r\n\r\n        this._saveCount.text = 'Saves: ' + this._saveEntries.length;\r\n        this._saveName.text = this._currentSaveIndex < 0 ? \"No save available\": this._saveEntries[0].name;\r\n\r\n        this.loadBlankSave();\r\n    }\r\n\r\n    // Buttons callbacks\r\n\r\n    private onLoadButtonClicked(): void\r\n    {\r\n        if(this._currentSaveIndex < 0)\r\n            return;\r\n\r\n        this._currentBuildData = this._saveEntries[this._currentSaveIndex];\r\n        console.log(this._currentBuildData);\r\n        BuildController.loadBuild(this._currentBuildData.blocks);\r\n    }\r\n\r\n    private onNewButtonPressed(): void\r\n    {\r\n        this.setCurrentSelectedSave(-1); // Set empty save as current\r\n        BuildController.loadBuild(this._currentBuildData.blocks);\r\n    }\r\n\r\n    private onNextButtonPressed(): void\r\n    {\r\n        this._currentSaveIndex++;\r\n        if(this._currentSaveIndex > this._saveEntries.length - 1)\r\n            this._currentSaveIndex = 0;\r\n\r\n        this.setCurrentSelectedSave(this._currentSaveIndex);\r\n\r\n        // Update UI\r\n        this._saveName.text = this._currentSaveIndex < 0 ? \"No save available\": this._currentBuildData.name;\r\n    }\r\n\r\n    private onSaveButtonPressed(): void\r\n    {\r\n        this._currentBuildData.blocks = BuildController.getCurrentBuildData();\r\n\r\n        SerializationUtils.createOrUpdateSaveEntry(this._currentBuildData);\r\n        SerializationUtils.flushSaves();\r\n\r\n        this._saveEntries = SerializationUtils.getSavesEntries();\r\n        this._currentSaveIndex = this._currentSaveIndex < 0 ? 0 : this._currentSaveIndex;\r\n\r\n        this._saveCount.text = 'Saves count: ' + this._saveEntries.length;\r\n        this._saveName.text = this._currentSaveIndex < 0 ?\r\n            \"No save available\":\r\n            this._saveEntries[this._currentSaveIndex].name;\r\n    }\r\n\r\n    private onRemoveButtonPressed(): void\r\n    {\r\n        if(this._currentSaveIndex < 0)\r\n            return;\r\n\r\n        let saveToDelete = this._saveEntries[this._currentSaveIndex];\r\n        if(saveToDelete.name == this._currentBuildData.name)\r\n        {\r\n            this.setCurrentSelectedSave(-1); // Set an empty save\r\n            BuildController.loadBuild(this._currentBuildData.blocks);\r\n        }\r\n\r\n        SerializationUtils.removeSaveEntry(saveToDelete);\r\n        SerializationUtils.flushSaves();\r\n\r\n        // Update saves entries array\r\n        this._saveEntries = SerializationUtils.getSavesEntries();\r\n\r\n        // Update current selected save's index\r\n        if(this._saveEntries.length < 1)\r\n        {\r\n            this._currentSaveIndex = -1;\r\n        }\r\n        else\r\n        {\r\n            const shouldResetIndex = this._currentSaveIndex > this._saveEntries.length - 1;\r\n            this._currentSaveIndex = shouldResetIndex ? 0 : this._currentSaveIndex;\r\n        }\r\n\r\n        this._saveCount.text = 'Saves: ' + this._saveEntries.length;\r\n        this._saveName.text = this._currentSaveIndex < 0 ?\r\n            \"No save available\":\r\n            this._saveEntries[this._currentSaveIndex].name;\r\n    }\r\n\r\n    // Saves manipulation\r\n    // =============================\r\n\r\n    private loadBlankSave(): void\r\n    {\r\n        this.setCurrentSelectedSave(-1);\r\n        BuildController.loadBuild(this._currentBuildData.blocks);\r\n    }\r\n\r\n    private setCurrentSelectedSave(index: number): void\r\n    {\r\n        switch (index)\r\n        {\r\n            case -1: // No save\r\n                this._currentBuildData = SerializationUtils.createNewSaveEntry(new Date().toLocaleString());\r\n                break;\r\n\r\n            default: // At least one save\r\n                this._currentBuildData = this._saveEntries[index];\r\n                break;\r\n        }\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["HowlerGlobal", "self", "Howler", "e", "i", "Howl", "str", "Sound", "len", "Type", "Collider", "Alignment", "Justification", "TextEffect", "InputType", "LightType", "AnimationState", "ForceMode", "CollisionEventType", "Shape", "MeshAttribute", "MaterialParamType", "LockAxis", "MeshIndexType", "create", "create", "len", "scale", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "random", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "scale", "len", "rotateX", "rotateY", "rotateZ", "str", "exactEquals", "equals", "sub", "mul", "offset", "add", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat4", "transformQuat", "zero", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "length", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "lerp", "random", "transformMat4", "transformQuat", "zero", "str", "exactEquals", "equals", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "offset", "create", "identity", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "random", "invert", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "add", "clone", "conjugate", "copy", "create", "dot", "equals", "exactEquals", "fromRotation", "fromRotationTranslation", "fromTranslation", "fromValues", "getTranslation", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "translate", "create", "clone", "fromValues", "fromRotationTranslation", "fromTranslation", "fromRotation", "copy", "identity", "set", "getTranslation", "translate", "rotateX", "rotateY", "rotateZ", "add", "multiply", "mul", "scale", "dot", "lerp", "invert", "squaredLength", "conjugate", "length", "len", "sqrLen", "normalize", "str", "exactEquals", "equals", "dist", "cursorTarget", "import_howler", "canvas", "a", "direction", "lookAt", "offset", "dist", "dot", "direction", "offset", "distance"]
}
